

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu May 08 01:30:14 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     
    18 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    19  0000                     
    20 ;; Function _SetFreq_250KHZ is unused but had its address taken
    21  0000                     
    22 ;; Function _SetFreq_500KHZ is unused but had its address taken
    23  0000                     
    24 ;; Function _SetFreq_1MHZ is unused but had its address taken
    25  0000                     
    26 ;; Function _SetFreq_2MHZ is unused but had its address taken
    27  0000                     
    28 ;; Function _SetFreq_4MHZ is unused but had its address taken
    29  0000                     
    30 ;; Function _SetFreq_16MHZ is unused but had its address taken
    31  0000                     
    32 ;; Function _SetFreq_32MHZ is unused but had its address taken
    33  0000                     
    34 ;; Function _SetFreq_64MHZ is unused but had its address taken
    35  0000                     
    36 ;; Function _GetFreq is unused but had its address taken
    37  0000                     
    38                           	psect	idataCOMRAM
    39  00023C                     __pidataCOMRAM:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _Oscillator
    43  00023C  0000               	dw	0
    44  00023E  0000               	dw	0
    45  000240  0000               	dw	0
    46  000242  0000               	dw	0
    47  000244  0000               	dw	0
    48  000246  0000               	dw	0
    49  000248  021A               	dw	_SetFreq_8MHZ& (0+65535)
    50  00024A  0000               	dw	0
    51  00024C  0000               	dw	0
    52  00024E  0000               	dw	0
    53  000250  0000               	dw	0
    54                           
    55                           ;initializer for _OscFreq
    56  000252  4240               	dw	16960
    57  000254  000F               	dw	15
    58                           
    59                           ;initializer for _OscFreqIndex
    60  000256  03                 	db	3
    61  0000                     _PinDirection	set	3986
    62  0000                     _PinFunction	set	3896
    63  0000                     _PinWrite	set	3977
    64  0000                     _OSCCON	set	4051
    65  0000                     _OSCCON2bits	set	4050
    66  0000                     _OSCCONbits	set	4051
    67  0000                     _OSCTUNEbits	set	3995
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  0001EC                     __pcinit:
    73                           	opt stack 0
    74  0001EC                     start_initialization:
    75                           	opt stack 0
    76  0001EC                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (2 bytes)
    80  0001EC  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
    81  0001EE  6A3D               	clrf	__pbssCOMRAM& (0+255),c
    82                           
    83                           ; Initialize objects allocated to COMRAM (27 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85  0001F0  0E3C               	movlw	low __pidataCOMRAM
    86  0001F2  6EF6               	movwf	tblptrl,c
    87  0001F4  0E02               	movlw	high __pidataCOMRAM
    88  0001F6  6EF7               	movwf	tblptrh,c
    89  0001F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    90  0001FA  6EF8               	movwf	tblptru,c
    91  0001FC  EE00  F022         	lfsr	0,__pdataCOMRAM
    92  000200  EE10 F01B          	lfsr	1,27
    93  000204                     copy_data0:
    94  000204  0009               	tblrd		*+
    95  000206  CFF5 FFEE          	movff	tablat,postinc0
    96  00020A  50E5               	movf	postdec1,w,c
    97  00020C  50E1               	movf	fsr1l,w,c
    98  00020E  E1FA               	bnz	copy_data0
    99  000210                     end_of_initialization:
   100                           	opt stack 0
   101  000210                     __end_of__initialization:
   102                           	opt stack 0
   103  000210  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  000212  6EF8               	movwf	tblptru,c
   105  000214  0100               	movlb	0
   106  000216  EF53  F000         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           tblptrh	equ	0xFF7
   109                           tblptrl	equ	0xFF6
   110                           tablat	equ	0xFF5
   111                           postinc0	equ	0xFEE
   112                           postdec1	equ	0xFE5
   113                           fsr1l	equ	0xFE1
   114                           
   115                           	psect	bssCOMRAM
   116  00003D                     __pbssCOMRAM:
   117                           	opt stack 0
   118  00003D                     _delayCount:
   119                           	opt stack 0
   120  00003D                     	ds	2
   121                           tblptru	equ	0xFF8
   122                           tblptrh	equ	0xFF7
   123                           tblptrl	equ	0xFF6
   124                           tablat	equ	0xFF5
   125                           postinc0	equ	0xFEE
   126                           postdec1	equ	0xFE5
   127                           fsr1l	equ	0xFE1
   128                           
   129                           	psect	dataCOMRAM
   130  000022                     __pdataCOMRAM:
   131                           	opt stack 0
   132  000022                     _Oscillator:
   133                           	opt stack 0
   134  000022                     	ds	22
   135  000038                     _OscFreq:
   136                           	opt stack 0
   137  000038                     	ds	4
   138  00003C                     _OscFreqIndex:
   139                           	opt stack 0
   140  00003C                     	ds	1
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           postinc0	equ	0xFEE
   146                           postdec1	equ	0xFE5
   147                           fsr1l	equ	0xFE1
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	opt stack 0
   152  000001                     ??_LowPriority_InterruptHandler:
   153  000001                     
   154                           ; 1 bytes @ 0x0
   155  000001                     	ds	17
   156  000012                     ??_HighPriority_InterruptHandler:
   157                           
   158                           ; 0 bytes @ 0x11
   159  000012                     	ds	14
   160  000020                     ??_SetFreq_8MHZ:
   161                           
   162                           ; 0 bytes @ 0x1F
   163  000020                     	ds	1
   164  000021                     ??_main:
   165                           
   166                           ; 0 bytes @ 0x20
   167  000021                     	ds	1
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           postdec1	equ	0xFE5
   174                           fsr1l	equ	0xFE1
   175                           
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 21 in file "main.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;		None               void
   188 ;; Registers used:
   189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;Total ram usage:        1 bytes
   200 ;; Hardware stack levels required when called:    3
   201 ;; This function calls:
   202 ;;		_SetFreq_8MHZ
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text0
   209  0000A6                     __ptext0:
   210                           	opt stack 0
   211  0000A6                     _main:
   212                           	opt stack 28
   213                           
   214                           ;main.c: 25: Oscillator.SetFreq_8MHZ();
   215                           
   216                           ;incstack = 0
   217  0000A6  EE20  F02E         	lfsr	2,_Oscillator+12
   218  0000AA  D801               	call	u18
   219  0000AC  D00A               	goto	u19
   220  0000AE                     u18:
   221  0000AE  0005               	push	
   222  0000B0  6EFA               	movwf	pclath,c
   223  0000B2  50DE               	movf	postinc2,w,c
   224  0000B4  6EFD               	movwf	tosl,c
   225  0000B6  50DE               	movf	postinc2,w,c
   226  0000B8  6EFE               	movwf	tosh,c
   227  0000BA  50F8               	movf	tblptru,w,c
   228  0000BC  6EFF               	movwf	tosu,c
   229  0000BE  50FA               	movf	pclath,w,c
   230  0000C0  0012               	return		;indir
   231  0000C2                     u19:
   232                           
   233                           ;main.c: 27: (PinFunction.RC0 = 0, PinDirection.RC0 = 0 );
   234  0000C2  010F               	movlb	15	; () banked
   235  0000C4  010F               	movlb	15	; () banked
   236  0000C6  913A               	bcf	58,0,b	;volatile
   237                           
   238                           ; BSR set to: 15
   239  0000C8  9094               	bcf	3988,0,c	;volatile
   240                           
   241                           ; BSR set to: 15
   242                           ;main.c: 28: (PinFunction.RC5 = 0, PinDirection.RC5 = 0 );
   243  0000CA  010F               	movlb	15	; () banked
   244  0000CC  010F               	movlb	15	; () banked
   245  0000CE  9B3A               	bcf	58,5,b	;volatile
   246                           
   247                           ; BSR set to: 15
   248  0000D0  9A94               	bcf	3988,5,c	;volatile
   249  0000D2                     l701:
   250                           
   251                           ;main.c: 32: {
   252                           ;main.c: 33: PinWrite.RC0=1;
   253  0000D2  808B               	bsf	3979,0,c	;volatile
   254                           
   255                           ;main.c: 34: PinWrite.RC5=0;
   256  0000D4  9A8B               	bcf	3979,5,c	;volatile
   257                           
   258                           ;main.c: 36: for(delayCount = 0; delayCount< 5000;delayCount++) _delay((unsigned int)((1
      +                          000)*(8000000/4000000.0)));;
   259  0000D6  0E00               	movlw	0
   260  0000D8  6E3E               	movwf	_delayCount+1,c
   261  0000DA  0E00               	movlw	0
   262  0000DC  6E3D               	movwf	_delayCount,c
   263  0000DE  0E88               	movlw	136
   264  0000E0  5C3D               	subwf	_delayCount,w,c
   265  0000E2  0E13               	movlw	19
   266  0000E4  583E               	subwfb	_delayCount+1,w,c
   267  0000E6  B0D8               	btfsc	status,0,c
   268  0000E8  D00A               	goto	l25
   269  0000EA  0E03               	movlw	3
   270  0000EC  6E21               	movwf	??_main& (0+255),c
   271  0000EE  0E98               	movlw	152
   272  0000F0                     u117:
   273  0000F0  2EE8               	decfsz	wreg,f,c
   274  0000F2  D7FE               	goto	u117
   275  0000F4  2E21               	decfsz	??_main& (0+255),f,c
   276  0000F6  D7FC               	goto	u117
   277  0000F8  4A3D               	infsnz	_delayCount,f,c
   278  0000FA  2A3E               	incf	_delayCount+1,f,c
   279  0000FC  D7F0               	goto	L1
   280  0000FE                     l25:
   281                           
   282                           ;main.c: 38: PinWrite.RC0=0;
   283  0000FE  908B               	bcf	3979,0,c	;volatile
   284                           
   285                           ;main.c: 39: PinWrite.RC5=0;
   286  000100  9A8B               	bcf	3979,5,c	;volatile
   287                           
   288                           ;main.c: 41: for(delayCount = 0; delayCount< 2000;delayCount++) _delay((unsigned int)((1
      +                          000)*(8000000/4000000.0)));;
   289  000102  0E00               	movlw	0
   290  000104  6E3E               	movwf	_delayCount+1,c
   291  000106  0E00               	movlw	0
   292  000108  6E3D               	movwf	_delayCount,c
   293  00010A  0ED0               	movlw	208
   294  00010C  5C3D               	subwf	_delayCount,w,c
   295  00010E  0E07               	movlw	7
   296  000110  583E               	subwfb	_delayCount+1,w,c
   297  000112  B0D8               	btfsc	status,0,c
   298  000114  D00A               	goto	l27
   299  000116  0E03               	movlw	3
   300  000118  6E21               	movwf	??_main& (0+255),c
   301  00011A  0E98               	movlw	152
   302  00011C                     u127:
   303  00011C  2EE8               	decfsz	wreg,f,c
   304  00011E  D7FE               	goto	u127
   305  000120  2E21               	decfsz	??_main& (0+255),f,c
   306  000122  D7FC               	goto	u127
   307  000124  4A3D               	infsnz	_delayCount,f,c
   308  000126  2A3E               	incf	_delayCount+1,f,c
   309  000128  D7F0               	goto	L2
   310  00012A                     l27:
   311                           
   312                           ;main.c: 43: PinWrite.RC0=0;
   313  00012A  908B               	bcf	3979,0,c	;volatile
   314                           
   315                           ;main.c: 44: PinWrite.RC5=1;
   316  00012C  8A8B               	bsf	3979,5,c	;volatile
   317                           
   318                           ;main.c: 46: for(delayCount = 0; delayCount< 5000;delayCount++) _delay((unsigned int)((1
      +                          000)*(8000000/4000000.0)));;
   319  00012E  0E00               	movlw	0
   320  000130  6E3E               	movwf	_delayCount+1,c
   321  000132  0E00               	movlw	0
   322  000134  6E3D               	movwf	_delayCount,c
   323  000136  0E88               	movlw	136
   324  000138  5C3D               	subwf	_delayCount,w,c
   325  00013A  0E13               	movlw	19
   326  00013C  583E               	subwfb	_delayCount+1,w,c
   327  00013E  B0D8               	btfsc	status,0,c
   328  000140  D00A               	goto	l29
   329  000142  0E03               	movlw	3
   330  000144  6E21               	movwf	??_main& (0+255),c
   331  000146  0E98               	movlw	152
   332  000148                     u137:
   333  000148  2EE8               	decfsz	wreg,f,c
   334  00014A  D7FE               	goto	u137
   335  00014C  2E21               	decfsz	??_main& (0+255),f,c
   336  00014E  D7FC               	goto	u137
   337  000150  4A3D               	infsnz	_delayCount,f,c
   338  000152  2A3E               	incf	_delayCount+1,f,c
   339  000154  D7F0               	goto	L3
   340  000156                     l29:
   341                           
   342                           ;main.c: 48: PinWrite.RC0=0;
   343  000156  908B               	bcf	3979,0,c	;volatile
   344                           
   345                           ;main.c: 49: PinWrite.RC5=0;
   346  000158  9A8B               	bcf	3979,5,c	;volatile
   347                           
   348                           ;main.c: 51: for(delayCount = 0; delayCount< 2000;delayCount++) _delay((unsigned int)((1
      +                          000)*(8000000/4000000.0)));;
   349  00015A  0E00               	movlw	0
   350  00015C  6E3E               	movwf	_delayCount+1,c
   351  00015E  0E00               	movlw	0
   352  000160  6E3D               	movwf	_delayCount,c
   353  000162  0ED0               	movlw	208
   354  000164  5C3D               	subwf	_delayCount,w,c
   355  000166  0E07               	movlw	7
   356  000168  583E               	subwfb	_delayCount+1,w,c
   357  00016A  B0D8               	btfsc	status,0,c
   358  00016C  D7B2               	goto	l701
   359  00016E  0E03               	movlw	3
   360  000170  6E21               	movwf	??_main& (0+255),c
   361  000172  0E98               	movlw	152
   362  000174                     u147:
   363  000174  2EE8               	decfsz	wreg,f,c
   364  000176  D7FE               	goto	u147
   365  000178  2E21               	decfsz	??_main& (0+255),f,c
   366  00017A  D7FC               	goto	u147
   367  00017C  4A3D               	infsnz	_delayCount,f,c
   368  00017E  2A3E               	incf	_delayCount+1,f,c
   369  000180  D7F0               	goto	L4
   370  000182                     __end_of_main:
   371                           	opt stack 0
   372                           tosu	equ	0xFFF
   373                           tosh	equ	0xFFE
   374                           tosl	equ	0xFFD
   375                           pclath	equ	0xFFA
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           postinc2	equ	0xFDE
   385                           status	equ	0xFD8
   386                           
   387 ;; *************** function _SetFreq_8MHZ *****************
   388 ;; Defined at:
   389 ;;		line 85 in file "EAB_Oscillator.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      unsigned char 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text1
   418  00021A                     __ptext1:
   419                           	opt stack 0
   420  00021A                     _SetFreq_8MHZ:
   421                           	opt stack 28
   422                           
   423                           ;incstack = 0
   424  00021A  50D3               	movf	4051,w,c	;volatile
   425  00021C  0B8C               	andlw	140
   426  00021E  0962               	iorlw	98
   427  000220  6ED3               	movwf	4051,c	;volatile
   428  000222  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   429  000224  0E06               	movlw	6
   430  000226  6E3C               	movwf	_OscFreqIndex,c
   431  000228  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   432  00022A  0E00               	movlw	0
   433  00022C  6E38               	movwf	_OscFreq,c
   434  00022E  0E12               	movlw	18
   435  000230  6E39               	movwf	_OscFreq+1,c
   436  000232  0E7A               	movlw	122
   437  000234  6E3A               	movwf	_OscFreq+2,c
   438  000236  0E00               	movlw	0
   439  000238  6E3B               	movwf	_OscFreq+3,c
   440  00023A  0012               	return	
   441  00023C                     __end_of_SetFreq_8MHZ:
   442                           	opt stack 0
   443                           tosu	equ	0xFFF
   444                           tosh	equ	0xFFE
   445                           tosl	equ	0xFFD
   446                           pclath	equ	0xFFA
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           postinc2	equ	0xFDE
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _LowPriority_InterruptHandler *****************
   459 ;; Defined at:
   460 ;;		line 21 in file "EAB_InterruptHandler.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;		None               void
   467 ;; Registers used:
   468 ;;		None
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:       17 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		Interrupt level 1
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	intcodelo
   489  000018                     __pintcodelo:
   490                           	opt stack 0
   491  000018                     _LowPriority_InterruptHandler:
   492                           	opt stack 28
   493                           
   494                           ;incstack = 0
   495  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
   496  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
   497  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
   498  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
   499  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
   500  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
   501  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
   502  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
   503  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
   504  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
   505  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
   506  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
   507  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
   508  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
   509  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
   510  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
   511  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
   512  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
   513  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
   514  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
   515  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
   516  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
   517  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
   518  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
   519  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
   520  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
   521  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
   522  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
   523  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
   524  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
   525  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
   526  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
   527  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
   528  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
   529  0000A0  0010               	retfie	
   530  0000A2                     __end_of_LowPriority_InterruptHandler:
   531                           	opt stack 0
   532                           tosu	equ	0xFFF
   533                           tosh	equ	0xFFE
   534                           tosl	equ	0xFFD
   535                           pclatu	equ	0xFFB
   536                           pclath	equ	0xFFA
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           prodh	equ	0xFF4
   542                           prodl	equ	0xFF3
   543                           postinc0	equ	0xFEE
   544                           fsr0h	equ	0xFEA
   545                           fsr0l	equ	0xFE9
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1h	equ	0xFE2
   549                           fsr1l	equ	0xFE1
   550                           bsr	equ	0xFE0
   551                           postinc2	equ	0xFDE
   552                           fsr2h	equ	0xFDA
   553                           fsr2l	equ	0xFD9
   554                           status	equ	0xFD8
   555                           
   556 ;; *************** function _HighPriority_InterruptHandler *****************
   557 ;; Defined at:
   558 ;;		line 14 in file "EAB_InterruptHandler.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;		None               void
   565 ;; Registers used:
   566 ;;		None
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;Total ram usage:       14 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		Interrupt level 2
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	intcode
   586  000008                     __pintcode:
   587                           	opt stack 0
   588  000008                     _HighPriority_InterruptHandler:
   589                           	opt stack 28
   590                           
   591                           ;incstack = 0
   592  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
   593  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
   594  000010  EFC1  F000         	goto	int_func
   595                           tosu	equ	0xFFF
   596                           tosh	equ	0xFFE
   597                           tosl	equ	0xFFD
   598                           pclatu	equ	0xFFB
   599                           pclath	equ	0xFFA
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           prodh	equ	0xFF4
   605                           prodl	equ	0xFF3
   606                           postinc0	equ	0xFEE
   607                           fsr0h	equ	0xFEA
   608                           fsr0l	equ	0xFE9
   609                           wreg	equ	0xFE8
   610                           postdec1	equ	0xFE5
   611                           fsr1h	equ	0xFE2
   612                           fsr1l	equ	0xFE1
   613                           bsr	equ	0xFE0
   614                           postinc2	equ	0xFDE
   615                           fsr2h	equ	0xFDA
   616                           fsr2l	equ	0xFD9
   617                           status	equ	0xFD8
   618                           
   619                           	psect	intcode_body
   620  000182                     __pintcode_body:
   621                           	opt stack 28
   622  000182                     int_func:
   623                           	opt stack 28
   624  000182  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
   625  000186  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
   626  00018A  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
   627  00018E  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
   628  000192  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
   629  000196  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
   630  00019A  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
   631  00019E  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
   632  0001A2  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
   633  0001A6  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
   634  0001AA  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
   635  0001AE  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
   636  0001B2  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
   637  0001B6  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
   638  0001BA  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
   639  0001BE  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
   640  0001C2  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
   641  0001C6  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
   642  0001CA  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
   643  0001CE  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
   644  0001D2  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
   645  0001D6  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
   646  0001DA  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
   647  0001DE  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
   648  0001E2  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
   649  0001E6  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
   650  0001EA  0011               	retfie		f
   651  0001EC                     __end_of_HighPriority_InterruptHandler:
   652                           	opt stack 0
   653  0000                     tosu	equ	0xFFF
   654                           tosh	equ	0xFFE
   655                           tosl	equ	0xFFD
   656                           pclatu	equ	0xFFB
   657                           pclath	equ	0xFFA
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           prodh	equ	0xFF4
   663                           prodl	equ	0xFF3
   664                           postinc0	equ	0xFEE
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           wreg	equ	0xFE8
   668                           postdec1	equ	0xFE5
   669                           fsr1h	equ	0xFE2
   670                           fsr1l	equ	0xFE1
   671                           bsr	equ	0xFE0
   672                           postinc2	equ	0xFDE
   673                           fsr2h	equ	0xFDA
   674                           fsr2l	equ	0xFD9
   675                           status	equ	0xFD8
   676                           tosu	equ	0xFFF
   677                           tosh	equ	0xFFE
   678                           tosl	equ	0xFFD
   679                           pclatu	equ	0xFFB
   680                           pclath	equ	0xFFA
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           prodh	equ	0xFF4
   686                           prodl	equ	0xFF3
   687                           postinc0	equ	0xFEE
   688                           fsr0h	equ	0xFEA
   689                           fsr0l	equ	0xFE9
   690                           wreg	equ	0xFE8
   691                           postdec1	equ	0xFE5
   692                           fsr1h	equ	0xFE2
   693                           fsr1l	equ	0xFE1
   694                           bsr	equ	0xFE0
   695                           postinc2	equ	0xFDE
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8
   699                           
   700                           	psect	rparam
   701  0000                     tosu	equ	0xFFF
   702                           tosh	equ	0xFFE
   703                           tosl	equ	0xFFD
   704                           pclatu	equ	0xFFB
   705                           pclath	equ	0xFFA
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           prodh	equ	0xFF4
   711                           prodl	equ	0xFF3
   712                           postinc0	equ	0xFEE
   713                           fsr0h	equ	0xFEA
   714                           fsr0l	equ	0xFE9
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1h	equ	0xFE2
   718                           fsr1l	equ	0xFE1
   719                           bsr	equ	0xFE0
   720                           postinc2	equ	0xFDE
   721                           fsr2h	equ	0xFDA
   722                           fsr2l	equ	0xFD9
   723                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_SetFreq_8MHZ

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             32 COMRAM     1     1      0
                       _SetFreq_8MHZ *
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetFreq_8MHZ *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      3E       1       65.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      12        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu May 08 01:30:14 2014

                                    l25 00FE                                      l27 012A  
                                    l29 0156                                      u18 00AE  
                                    u19 00C2                                      bsr 000FE0  
                                   l701 00D2                                     u117 00F0  
                                   u127 011C                                     u137 0148  
                                   u147 0174                                     tosl 000FFD  
                                   wreg 000FE8                            __CFG_LVP$OFF 000000  
                                  _main 00A6                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    pclat 000FFA  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00A2                                   ?_main 0001  
                        __CFG_DEBUG$OFF 000000                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                       __initialization 01EC                            __end_of_main 0182  
                                ??_main 0021                           __activetblptr 000002  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                            _Oscillator 0022                           ?_SetFreq_8MHZ 0001  
                          __pdataCOMRAM 0022                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                            __accesstop 0060                 __end_of__initialization 0210  
                        __pcstackCOMRAM 0001                          ??_SetFreq_8MHZ 0020  
                           _PinFunction 000F38                              _delayCount 003D  
                         _SetFreq_32MHZ 000000                           _SetFreq_16MHZ 000000  
 __end_of_HighPriority_InterruptHandler 01EC  __size_of_HighPriority_InterruptHandler 01E4  
         _HighPriority_InterruptHandler 0008                           _SetFreq_64MHZ 000000  
                               _GetFreq 000000                                 _OscFreq 0038  
                               __Hparam 0000                                 __Lparam 0000  
                               __pcinit 01EC                                 __ramtop 1000  
                               __ptext0 00A6                                 __ptext1 021A  
                        __pintcode_body 0182                    end_of_initialization 0210  
                  __end_of_SetFreq_8MHZ 023C                           __Lmediumconst 0000  
                               int_func 0182                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc2 000FDE  
  __end_of_LowPriority_InterruptHandler 00A2   __size_of_LowPriority_InterruptHandler 008A  
          _LowPriority_InterruptHandler 0018                        __CFG_FOSC$INTIO7 000000  
        ?_HighPriority_InterruptHandler 0001                           __pidataCOMRAM 023C  
         ?_LowPriority_InterruptHandler 0001                     start_initialization 01EC  
                          _PinDirection 000F92                             __pbssCOMRAM 003D  
                 __size_of_SetFreq_8MHZ 0022                            _OscFreqIndex 003C  
                             __pintcode 0008                            _SetFreq_1MHZ 000000  
                          _SetFreq_2MHZ 000000                            _SetFreq_4MHZ 000000  
                           __pintcodelo 0018                            _SetFreq_8MHZ 021A  
        ??_LowPriority_InterruptHandler 0001                          _SetFreq_250KHZ 000000  
                        _SetFreq_500KHZ 000000                               copy_data0 0204  
                              _PinWrite 000F89                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 00DC                             _OSCTUNEbits 000F9B  
                              intlevel1 0000                                intlevel2 0000  
                            _OSCCONbits 000FD3  
