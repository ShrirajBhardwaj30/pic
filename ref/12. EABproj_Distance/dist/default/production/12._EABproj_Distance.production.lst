

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon May 05 16:14:08 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    33  0000                     
    34 ;; Function _SetFreq_250KHZ is unused but had its address taken
    35  0000                     
    36 ;; Function _SetFreq_500KHZ is unused but had its address taken
    37  0000                     
    38 ;; Function _SetFreq_1MHZ is unused but had its address taken
    39  0000                     
    40 ;; Function _SetFreq_2MHZ is unused but had its address taken
    41  0000                     
    42 ;; Function _SetFreq_4MHZ is unused but had its address taken
    43  0000                     
    44 ;; Function _SetFreq_16MHZ is unused but had its address taken
    45  0000                     
    46 ;; Function _SetFreq_32MHZ is unused but had its address taken
    47  0000                     
    48 ;; Function _SetFreq_64MHZ is unused but had its address taken
    49  0000                     
    50 ;; Function _SendArray1 is unused but had its address taken
    51  0000                     
    52 ;; Function _SendArray2 is unused but had its address taken
    53  0000                     
    54 ;; Function _SendString1 is unused but had its address taken
    55  0000                     
    56 ;; Function _SendString2 is unused but had its address taken
    57  0000                     
    58 ;; Function _ReadByte1 is unused but had its address taken
    59  0000                     
    60 ;; Function _ReadByte2 is unused but had its address taken
    61  0000                     
    62 ;; Function _EnableRx1interrupt is unused but had its address taken
    63  0000                     
    64 ;; Function _EnableRx2interrupt is unused but had its address taken
    65  0000                     
    66 ;; Function _SetTimer0_1Sec is unused but had its address taken
    67  0000                     
    68 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    69  0000                     
    70 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    71  0000                     
    72 ;; Function _SetTimer0_1millSec is unused but had its address taken
    73  0000                     
    74 ;; Function _SetTimer0 is unused but had its address taken
    75  0000                     
    76 ;; Function _Timer0Int is unused but had its address taken
    77  0000                     
    78 ;; Function _SetTimer1 is unused but had its address taken
    79  0000                     
    80 ;; Function _Timer1Int is unused but had its address taken
    81  0000                     
    82 ;; Function _SetTimer2_1millSec is unused but had its address taken
    83  0000                     
    84 ;; Function _SetTimer2_100microSec is unused but had its address taken
    85  0000                     
    86 ;; Function _Timer2Int is unused but had its address taken
    87  0000                     
    88                           	psect	idataCOMRAM
    89  00179E                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _Serial1
    93  00179E  1460               	dw	_Open1& (0+65535)
    94  0017A0  17B0               	dw	_SendByte1& (0+65535)
    95  0017A2  0000               	dw	0
    96  0017A4  0000               	dw	0
    97  0017A6  0000               	dw	0
    98  0017A8  0000               	dw	0
    99                           
   100                           ;initializer for _OscFreq
   101  0017AA  4240               	dw	16960
   102  0017AC  000F               	dw	15
   103                           
   104                           ;initializer for _OscFreqIndex
   105  0017AE  03                 	db	3
   106                           
   107                           	psect	idataBANK0
   108  001706                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _Oscillator
   112  001706  0000               	dw	0
   113  001708  0000               	dw	0
   114  00170A  0000               	dw	0
   115  00170C  0000               	dw	0
   116  00170E  0000               	dw	0
   117  001710  0000               	dw	0
   118  001712  172E               	dw	_SetFreq_8MHZ& (0+65535)
   119  001714  0000               	dw	0
   120  001716  0000               	dw	0
   121  001718  0000               	dw	0
   122  00171A  178C               	dw	_GetFreq& (0+65535)
   123                           
   124                           ;initializer for _Serial2
   125  00171C  154A               	dw	_Open2& (0+65535)
   126  00171E  17BE               	dw	_SendByte2& (0+65535)
   127  001720  0000               	dw	0
   128  001722  0000               	dw	0
   129  001724  0000               	dw	0
   130  001726  0000               	dw	0
   131                           
   132                           ;initializer for _ADC
   133  001728  136C               	dw	_Open_adc& (0+65535)
   134  00172A  1772               	dw	_SetChannel& (0+65535)
   135  00172C  1750               	dw	_ReadData& (0+65535)
   136                           
   137                           	psect	smallconst
   138  001000                     __psmallconst:
   139                           	opt stack 0
   140  001000  00                 	db	0
   141  001001                     _Timer0:
   142                           	opt stack 0
   143  001001  0000               	dw	0
   144  001003  0000               	dw	0
   145  001005  0000               	dw	0
   146  001007  0000               	dw	0
   147  001009  0000               	dw	0
   148  00100B  0000               	dw	0
   149  00100D  3A                 	db	58
   150  00100E  2C                 	db	44
   151  00100F  7E                 	db	126
   152  001010                     __end_of_Timer0:
   153                           	opt stack 0
   154  001010                     _Timer2:
   155                           	opt stack 0
   156  001010  0000               	dw	0
   157  001012  0000               	dw	0
   158  001014  16DC               	dw	_SetTimer2& (0+65535)
   159  001016  0000               	dw	0
   160  001018  AA                 	db	170
   161  001019  B3                 	db	179
   162  00101A  3E                 	db	62
   163  00101B  98                 	db	152
   164  00101C  BA                 	db	186
   165  00101D  DC                 	db	220
   166  00101E  FE                 	db	254
   167  00101F                     __end_of_Timer2:
   168                           	opt stack 0
   169  00101F                     _TIMER0_130mSec:
   170                           	opt stack 0
   171  00101F  C1                 	db	193
   172  001020  C4                 	db	196
   173  001021  C5                 	db	197
   174  001022  C6                 	db	198
   175  001023  C7                 	db	199
   176  001024  80                 	db	128
   177  001025  81                 	db	129
   178  001026  82                 	db	130
   179  001027  83                 	db	131
   180  001028  84                 	db	132
   181  001029                     __end_of_TIMER0_130mSec:
   182                           	opt stack 0
   183  001029                     _TIMER0_1Sec:
   184                           	opt stack 0
   185  001029  C4                 	db	196
   186  00102A  C7                 	db	199
   187  00102B  80                 	db	128
   188  00102C  81                 	db	129
   189  00102D  82                 	db	130
   190  00102E  83                 	db	131
   191  00102F  84                 	db	132
   192  001030  85                 	db	133
   193  001031  86                 	db	134
   194  001032  87                 	db	135
   195  001033                     __end_of_TIMER0_1Sec:
   196                           	opt stack 0
   197  001033                     _TIMER2_100usec:
   198                           	opt stack 0
   199  001033  84                 	db	132
   200  001034  84                 	db	132
   201  001035  84                 	db	132
   202  001036  84                 	db	132
   203  001037  84                 	db	132
   204  001038  84                 	db	132
   205  001039  8C                 	db	140
   206  00103A  9C                 	db	156
   207  00103B  BC                 	db	188
   208  00103C  00                 	db	0
   209  00103D                     __end_of_TIMER2_100usec:
   210                           	opt stack 0
   211  00103D                     _TIMER2_1msec:
   212                           	opt stack 0
   213  00103D  84                 	db	132
   214  00103E  84                 	db	132
   215  00103F  84                 	db	132
   216  001040  84                 	db	132
   217  001041  CC                 	db	204
   218  001042  CC                 	db	204
   219  001043  CC                 	db	204
   220  001044  A5                 	db	165
   221  001045  CD                 	db	205
   222  001046  A7                 	db	167
   223  001047                     __end_of_TIMER2_1msec:
   224                           	opt stack 0
   225  001047                     _TIMER2_PR2_1msec:
   226                           	opt stack 0
   227  001047  08                 	db	8
   228  001048  3E                 	db	62
   229  001049  7D                 	db	125
   230  00104A  FA                 	db	250
   231  00104B  32                 	db	50
   232  00104C  64                 	db	100
   233  00104D  C8                 	db	200
   234  00104E  C8                 	db	200
   235  00104F  C8                 	db	200
   236  001050  C8                 	db	200
   237  001051                     __end_of_TIMER2_PR2_1msec:
   238                           	opt stack 0
   239  001051                     _TIMER0_16mSec:
   240                           	opt stack 0
   241  001051  C1                 	db	193
   242  001052  C2                 	db	194
   243  001053  C3                 	db	195
   244  001054  C4                 	db	196
   245  001055  C5                 	db	197
   246  001056  C6                 	db	198
   247  001057  C7                 	db	199
   248  001058  80                 	db	128
   249  001059  81                 	db	129
   250  00105A                     __end_of_TIMER0_16mSec:
   251                           	opt stack 0
   252  00105A                     _TIMER2_PR2_100usec:
   253                           	opt stack 0
   254  00105A  06                 	db	6
   255  00105B  0D                 	db	13
   256  00105C  19                 	db	25
   257  00105D  32                 	db	50
   258  00105E  64                 	db	100
   259  00105F  C8                 	db	200
   260  001060  C8                 	db	200
   261  001061  C8                 	db	200
   262  001062  C8                 	db	200
   263  001063                     __end_of_TIMER2_PR2_100usec:
   264                           	opt stack 0
   265  001063                     _TIMER0_1mSec:
   266                           	opt stack 0
   267  001063  C0                 	db	192
   268  001064  C1                 	db	193
   269  001065  C2                 	db	194
   270  001066  C3                 	db	195
   271  001067  C4                 	db	196
   272  001068  C5                 	db	197
   273  001069                     __end_of_TIMER0_1mSec:
   274                           	opt stack 0
   275  001069                     _Timer1:
   276                           	opt stack 0
   277  001069  0000               	dw	0
   278  00106B  0000               	dw	0
   279  00106D  3A                 	db	58
   280  00106E                     __end_of_Timer1:
   281                           	opt stack 0
   282  0000                     _PinDirection	set	3986
   283  0000                     _PinFunction	set	3896
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1bits	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _ADRESL	set	4035
   289  0000                     _BAUDCON1bits	set	4024
   290  0000                     _BAUDCON2bits	set	3952
   291  0000                     _INTCONbits	set	4082
   292  0000                     _IPR1bits	set	3999
   293  0000                     _IPR3bits	set	4005
   294  0000                     _OSCCON	set	4051
   295  0000                     _OSCCON2bits	set	4050
   296  0000                     _OSCCONbits	set	4051
   297  0000                     _OSCTUNEbits	set	3995
   298  0000                     _PIE1bits	set	3997
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR1bits	set	3998
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PR2	set	4027
   303  0000                     _RC1REG	set	4014
   304  0000                     _RC2REG	set	3956
   305  0000                     _RCONbits	set	4048
   306  0000                     _RCSTA1bits	set	4011
   307  0000                     _RCSTA2bits	set	3953
   308  0000                     _SPBRG1	set	4015
   309  0000                     _SPBRG2	set	3957
   310  0000                     _SPBRGH1	set	4016
   311  0000                     _SPBRGH2	set	3958
   312  0000                     _T0CON	set	4053
   313  0000                     _T0CONbits	set	4053
   314  0000                     _T1CONbits	set	4045
   315  0000                     _T2CON	set	4026
   316  0000                     _T2CONbits	set	4026
   317  0000                     _TX1REG	set	4013
   318  0000                     _TX2REG	set	3955
   319  0000                     _TXSTA1bits	set	4012
   320  0000                     _TXSTA2bits	set	3954
   321                           
   322                           ; #config settings
   323  00106E  00                 	db	0	; dummy byte at the end
   324  0000                     
   325                           	psect	cinit
   326  001692                     __pcinit:
   327                           	opt stack 0
   328  001692                     start_initialization:
   329                           	opt stack 0
   330  001692                     __initialization:
   331                           	opt stack 0
   332                           
   333                           ; Clear objects allocated to COMRAM (2 bytes)
   334  001692  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   335  001694  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   336                           
   337                           ; Initialize objects allocated to BANK0 (40 bytes)
   338                           ; load TBLPTR registers with __pidataBANK0
   339  001696  0E06               	movlw	low __pidataBANK0
   340  001698  6EF6               	movwf	tblptrl,c
   341  00169A  0E17               	movlw	high __pidataBANK0
   342  00169C  6EF7               	movwf	tblptrh,c
   343  00169E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   344  0016A0  6EF8               	movwf	tblptru,c
   345  0016A2  EE00  F060         	lfsr	0,__pdataBANK0
   346  0016A6  EE10 F028          	lfsr	1,40
   347  0016AA                     copy_data0:
   348  0016AA  0009               	tblrd		*+
   349  0016AC  CFF5 FFEE          	movff	tablat,postinc0
   350  0016B0  50E5               	movf	postdec1,w,c
   351  0016B2  50E1               	movf	fsr1l,w,c
   352  0016B4  E1FA               	bnz	copy_data0
   353                           
   354                           ; Initialize objects allocated to COMRAM (17 bytes)
   355                           ; load TBLPTR registers with __pidataCOMRAM
   356  0016B6  0E9E               	movlw	low __pidataCOMRAM
   357  0016B8  6EF6               	movwf	tblptrl,c
   358  0016BA  0E17               	movlw	high __pidataCOMRAM
   359  0016BC  6EF7               	movwf	tblptrh,c
   360  0016BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   361  0016C0  6EF8               	movwf	tblptru,c
   362  0016C2  EE00  F02D         	lfsr	0,__pdataCOMRAM
   363  0016C6  EE10 F011          	lfsr	1,17
   364  0016CA                     copy_data1:
   365  0016CA  0009               	tblrd		*+
   366  0016CC  CFF5 FFEE          	movff	tablat,postinc0
   367  0016D0  50E5               	movf	postdec1,w,c
   368  0016D2  50E1               	movf	fsr1l,w,c
   369  0016D4  E1FA               	bnz	copy_data1
   370  0016D6                     end_of_initialization:
   371                           	opt stack 0
   372  0016D6                     __end_of__initialization:
   373                           	opt stack 0
   374  0016D6  0100               	movlb	0
   375  0016D8  EF38  F008         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssCOMRAM
   385  00003E                     __pbssCOMRAM:
   386                           	opt stack 0
   387  00003E                     _delayCount:
   388                           	opt stack 0
   389  00003E                     	ds	2
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	dataCOMRAM
   399  00002D                     __pdataCOMRAM:
   400                           	opt stack 0
   401  00002D                     _Serial1:
   402                           	opt stack 0
   403  00002D                     	ds	12
   404  000039                     _OscFreq:
   405                           	opt stack 0
   406  000039                     	ds	4
   407  00003D                     _OscFreqIndex:
   408                           	opt stack 0
   409  00003D                     	ds	1
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	dataBANK0
   419  000060                     __pdataBANK0:
   420                           	opt stack 0
   421  000060                     _Oscillator:
   422                           	opt stack 0
   423  000060                     	ds	22
   424  000076                     _Serial2:
   425                           	opt stack 0
   426  000076                     	ds	12
   427  000082                     _ADC:
   428                           	opt stack 0
   429  000082                     	ds	6
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438                           	psect	cstackBANK0
   439  000088                     __pcstackBANK0:
   440                           	opt stack 0
   441  000088                     ___aldiv@counter:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x0
   445  000088                     	ds	1
   446  000089                     ___aldiv@sign:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1
   450  000089                     	ds	1
   451  00008A                     ___aldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x2
   455  00008A                     	ds	4
   456  00008E                     ??_Open_adc:
   457  00008E                     Open1@BaudRate:
   458                           	opt stack 0
   459  00008E                     Open2@BaudRate:
   460                           	opt stack 0
   461                           
   462                           ; 4 bytes @ 0x6
   463  00008E                     	ds	4
   464  000092                     ??_Open1:
   465  000092                     ??_Open2:
   466  000092                     Open_adc@freq:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0xA
   470  000092                     	ds	1
   471  000093                     Open_adc@adcs:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0xB
   475  000093                     	ds	7
   476  00009A                     Open1@freq:
   477                           	opt stack 0
   478  00009A                     Open2@freq:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482  00009A                     	ds	4
   483  00009E                     Open1@BRGval:
   484                           	opt stack 0
   485  00009E                     Open2@temp:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x16
   489  00009E                     	ds	2
   490  0000A0                     ??_main:
   491                           
   492                           ; 0 bytes @ 0x18
   493  0000A0                     	ds	5
   494  0000A5                     main@MSB:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1D
   498  0000A5                     	ds	1
   499  0000A6                     main@LSB:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1E
   503  0000A6                     	ds	1
   504  0000A7                     main@ADCvalue:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1F
   508  0000A7                     	ds	2
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	cstackCOMRAM
   518  000001                     __pcstackCOMRAM:
   519                           	opt stack 0
   520  000001                     ??_LowPriority_InterruptHandler:
   521  000001                     
   522                           ; 1 bytes @ 0x0
   523  000001                     	ds	17
   524  000012                     ??_HighPriority_InterruptHandler:
   525                           
   526                           ; 0 bytes @ 0x11
   527  000012                     	ds	14
   528  000020                     ??_SetChannel:
   529  000020                     ??_SetFreq_8MHZ:
   530  000020                     ?_ReadData:
   531                           	opt stack 0
   532  000020                     ?_GetFreq:
   533                           	opt stack 0
   534  000020                     SendByte1@Data:
   535                           	opt stack 0
   536  000020                     SendByte2@Data:
   537                           	opt stack 0
   538  000020                     SetTimer2@postscalar:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x1F
   542  000020                     	ds	1
   543  000021                     SetChannel@channel:
   544                           	opt stack 0
   545  000021                     SetTimer2@period:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x20
   549  000021                     	ds	1
   550  000022                     ??_ReadData:
   551  000022                     ??_SetTimer2:
   552                           
   553                           ; 0 bytes @ 0x21
   554  000022                     	ds	1
   555  000023                     SetTimer2@prescalar:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x22
   559  000023                     	ds	1
   560  000024                     ?___aldiv:
   561                           	opt stack 0
   562  000024                     ReadData@ADCdata:
   563                           	opt stack 0
   564  000024                     ___aldiv@dividend:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x23
   568  000024                     	ds	4
   569  000028                     ___aldiv@divisor:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x27
   573  000028                     	ds	4
   574  00002C                     ??___aldiv:
   575                           
   576                           ; 0 bytes @ 0x2B
   577  00002C                     	ds	1
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 26 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  ADCvalue        2   31[BANK0 ] short 
   596 ;;  LSB             1   30[BANK0 ] unsigned char 
   597 ;;  MSB             1   29[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        9 bytes
   612 ;; Hardware stack levels required when called:    4
   613 ;; This function calls:
   614 ;;		_Open1
   615 ;;		_Open2
   616 ;;		_Open_adc
   617 ;;		_ReadData
   618 ;;		_SendByte1
   619 ;;		_SendByte2
   620 ;;		_SetChannel
   621 ;;		_SetFreq_8MHZ
   622 ;;		_SetTimer2
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629  001070                     __ptext0:
   630                           	opt stack 0
   631  001070                     _main:
   632                           	opt stack 27
   633                           
   634                           ;main.c: 29: uchar MSB=0, LSB=0;
   635                           
   636                           ;incstack = 0
   637  001070  0100               	movlb	0	; () banked
   638  001072  6FA0               	movwf	??_main& (0+255),b
   639  001074  0E00               	movlw	0
   640  001076  0100               	movlb	0	; () banked
   641  001078  0100               	movlb	0	; () banked
   642  00107A  6FA5               	movwf	main@MSB& (0+255),b
   643  00107C  0100               	movlb	0	; () banked
   644  00107E  51A0               	movf	??_main& (0+255),w,b
   645  001080  0100               	movlb	0	; () banked
   646  001082  6FA0               	movwf	??_main& (0+255),b
   647  001084  0E00               	movlw	0
   648  001086  0100               	movlb	0	; () banked
   649  001088  0100               	movlb	0	; () banked
   650  00108A  6FA6               	movwf	main@LSB& (0+255),b
   651  00108C  0100               	movlb	0	; () banked
   652  00108E  51A0               	movf	??_main& (0+255),w,b
   653                           
   654                           ; BSR set to: 0
   655                           ;main.c: 30: short ADCvalue;
   656                           ;main.c: 33: Oscillator.SetFreq_8MHZ();
   657  001090  D801               	call	u688
   658  001092  D00C               	goto	u689
   659  001094                     u688:
   660  001094  0005               	push	
   661  001096  6EFA               	movwf	pclath,c
   662  001098  0100               	movlb	0	; () banked
   663  00109A  0100               	movlb	0	; () banked
   664  00109C  516C               	movf	(_Oscillator+12)& (0+255),w,b
   665  00109E  6EFD               	movwf	tosl,c
   666  0010A0  0100               	movlb	0	; () banked
   667  0010A2  516D               	movf	(_Oscillator+13)& (0+255),w,b
   668  0010A4  6EFE               	movwf	tosh,c
   669  0010A6  6AFF               	clrf	tosu,c
   670  0010A8  50FA               	movf	pclath,w,c
   671  0010AA  0012               	return		;indir
   672  0010AC                     u689:
   673                           
   674                           ;main.c: 34: Timer2.SetPeriod(Timer2.config.PRESCALER_16,Timer2.config.POSTSCALER_16,255
      +                          );
   675  0010AC  0E14               	movlw	low (_Timer2+4)
   676  0010AE  6EF6               	movwf	tblptrl,c
   677  0010B0  0E10               	movlw	high (_Timer2+4)
   678  0010B2  6EF7               	movwf	tblptrh,c
   679  0010B4  0E00               	movlw	low (__mediumconst shr (0+16))
   680  0010B6  6EF8               	movwf	tblptru,c
   681  0010B8  0009               	tblrd		*+
   682  0010BA  CFF5 F0A0          	movff	tablat,??_main
   683  0010BE  0009               	tblrd		*+
   684  0010C0  CFF5 F0A1          	movff	tablat,??_main+1
   685  0010C4  D801               	call	u698
   686  0010C6  D02A               	goto	u699
   687  0010C8                     u698:
   688  0010C8  0005               	push	
   689  0010CA  6EFA               	movwf	pclath,c
   690  0010CC  0100               	movlb	0	; () banked
   691  0010CE  51A0               	movf	??_main& (0+255),w,b
   692  0010D0  6EFD               	movwf	tosl,c
   693  0010D2  51A1               	movf	(??_main+1)& (0+255),w,b
   694  0010D4  6EFE               	movwf	tosh,c
   695  0010D6  6AFF               	clrf	tosu,c
   696  0010D8  50FA               	movf	pclath,w,c
   697  0010DA  0E1E               	movlw	low (_Timer2+14)
   698  0010DC  6EF6               	movwf	tblptrl,c
   699  0010DE  0E10               	movlw	high (_Timer2+14)
   700  0010E0  6EF7               	movwf	tblptrh,c
   701  0010E2  0E00               	movlw	low (__mediumconst shr (0+16))
   702  0010E4  6EF8               	movwf	tblptru,c
   703  0010E6  0008               	tblrd		*
   704  0010E8  CFF5 F0A2          	movff	tablat,??_main+2
   705  0010EC  0100               	movlb	0	; () banked
   706  0010EE  39A2               	swapf	(??_main+2)& (0+255),w,b
   707  0010F0  0B0F               	andlw	15
   708  0010F2  6E20               	movwf	SetTimer2@postscalar,c
   709  0010F4  0100               	movlb	0	; () banked
   710  0010F6  6FA3               	movwf	(??_main+3)& (0+255),b
   711  0010F8  0EFF               	movlw	255
   712  0010FA  6E21               	movwf	SetTimer2@period,c
   713  0010FC  0100               	movlb	0	; () banked
   714  0010FE  51A3               	movf	(??_main+3)& (0+255),w,b
   715  001100  0E18               	movlw	low (_Timer2+8)
   716  001102  6EF6               	movwf	tblptrl,c
   717  001104  0E10               	movlw	high (_Timer2+8)
   718  001106  6EF7               	movwf	tblptrh,c
   719  001108  0E00               	movlw	low (__mediumconst shr (0+16))
   720  00110A  6EF8               	movwf	tblptru,c
   721  00110C  0008               	tblrd		*
   722  00110E  CFF5 F0A4          	movff	tablat,??_main+4
   723  001112  0100               	movlb	0	; () banked
   724  001114  31A4               	rrcf	(??_main+4)& (0+255),w,b
   725  001116  32E8               	rrcf	wreg,f,c
   726  001118  0B03               	andlw	3
   727  00111A  0012               	return		;indir
   728  00111C                     u699:
   729                           
   730                           ;main.c: 35: Serial2.Open(9600);
   731  00111C  0E80               	movlw	128
   732  00111E  0100               	movlb	0	; () banked
   733  001120  0100               	movlb	0	; () banked
   734  001122  6F8E               	movwf	Open2@BaudRate& (0+255),b
   735  001124  0E25               	movlw	37
   736  001126  0100               	movlb	0	; () banked
   737  001128  6F8F               	movwf	(Open2@BaudRate+1)& (0+255),b
   738  00112A  0E00               	movlw	0
   739  00112C  0100               	movlb	0	; () banked
   740  00112E  6F90               	movwf	(Open2@BaudRate+2)& (0+255),b
   741  001130  0E00               	movlw	0
   742  001132  0100               	movlb	0	; () banked
   743  001134  6F91               	movwf	(Open2@BaudRate+3)& (0+255),b
   744  001136  D801               	call	u708
   745  001138  D00C               	goto	u709
   746  00113A                     u708:
   747  00113A  0005               	push	
   748  00113C  6EFA               	movwf	pclath,c
   749  00113E  0100               	movlb	0	; () banked
   750  001140  0100               	movlb	0	; () banked
   751  001142  5176               	movf	_Serial2& (0+255),w,b
   752  001144  6EFD               	movwf	tosl,c
   753  001146  0100               	movlb	0	; () banked
   754  001148  5177               	movf	(_Serial2+1)& (0+255),w,b
   755  00114A  6EFE               	movwf	tosh,c
   756  00114C  6AFF               	clrf	tosu,c
   757  00114E  50FA               	movf	pclath,w,c
   758  001150  0012               	return		;indir
   759  001152                     u709:
   760                           
   761                           ;main.c: 38: (PinFunction.AN0 = 1, PinDirection.AN0 = 1 );
   762  001152  010F               	movlb	15	; () banked
   763  001154  010F               	movlb	15	; () banked
   764  001156  8138               	bsf	56,0,b	;volatile
   765                           
   766                           ; BSR set to: 15
   767  001158  8092               	bsf	3986,0,c	;volatile
   768                           
   769                           ; BSR set to: 15
   770                           ;main.c: 39: ADC.SetChannel(0b00000);
   771  00115A  D801               	call	u718
   772  00115C  D00D               	goto	u719
   773  00115E                     u718:
   774  00115E  0005               	push	
   775  001160  6EFA               	movwf	pclath,c
   776  001162  0100               	movlb	0	; () banked
   777  001164  0100               	movlb	0	; () banked
   778  001166  5184               	movf	(_ADC+2)& (0+255),w,b
   779  001168  6EFD               	movwf	tosl,c
   780  00116A  0100               	movlb	0	; () banked
   781  00116C  5185               	movf	(_ADC+3)& (0+255),w,b
   782  00116E  6EFE               	movwf	tosh,c
   783  001170  6AFF               	clrf	tosu,c
   784  001172  50FA               	movf	pclath,w,c
   785  001174  0E00               	movlw	0
   786  001176  0012               	return		;indir
   787  001178                     u719:
   788                           
   789                           ;main.c: 40: ADC.Open();
   790  001178  D801               	call	u728
   791  00117A  D00C               	goto	l1757
   792  00117C                     u728:
   793  00117C  0005               	push	
   794  00117E  6EFA               	movwf	pclath,c
   795  001180  0100               	movlb	0	; () banked
   796  001182  0100               	movlb	0	; () banked
   797  001184  5182               	movf	_ADC& (0+255),w,b
   798  001186  6EFD               	movwf	tosl,c
   799  001188  0100               	movlb	0	; () banked
   800  00118A  5183               	movf	(_ADC+1)& (0+255),w,b
   801  00118C  6EFE               	movwf	tosh,c
   802  00118E  6AFF               	clrf	tosu,c
   803  001190  50FA               	movf	pclath,w,c
   804  001192  0012               	return		;indir
   805  001194                     l1757:
   806                           
   807                           ;main.c: 44: {
   808                           ;main.c: 46: ADCvalue = ADC.ReadData();
   809  001194  D801               	call	u738
   810  001196  D00C               	goto	u739
   811  001198                     u738:
   812  001198  0005               	push	
   813  00119A  6EFA               	movwf	pclath,c
   814  00119C  0100               	movlb	0	; () banked
   815  00119E  0100               	movlb	0	; () banked
   816  0011A0  5186               	movf	(_ADC+4)& (0+255),w,b
   817  0011A2  6EFD               	movwf	tosl,c
   818  0011A4  0100               	movlb	0	; () banked
   819  0011A6  5187               	movf	(_ADC+5)& (0+255),w,b
   820  0011A8  6EFE               	movwf	tosh,c
   821  0011AA  6AFF               	clrf	tosu,c
   822  0011AC  50FA               	movf	pclath,w,c
   823  0011AE  0012               	return		;indir
   824  0011B0                     u739:
   825  0011B0  C020  F0A7         	movff	?_ReadData,main@ADCvalue
   826  0011B4  C021  F0A8         	movff	?_ReadData+1,main@ADCvalue+1
   827                           
   828                           ;main.c: 47: MSB = ADCvalue>>8;
   829  0011B8  0100               	movlb	0	; () banked
   830  0011BA  C0A8  F0A0         	movff	main@ADCvalue+1,??_main
   831  0011BE  0100               	movlb	0	; () banked
   832  0011C0  6BA1               	clrf	(??_main+1)& (0+255),b
   833  0011C2  BFA0               	btfsc	??_main& (0+255),7,b
   834  0011C4  69A1               	setf	(??_main+1)& (0+255),b
   835  0011C6  0100               	movlb	0	; () banked
   836  0011C8  51A0               	movf	??_main& (0+255),w,b
   837  0011CA  0100               	movlb	0	; () banked
   838  0011CC  0100               	movlb	0	; () banked
   839  0011CE  6FA5               	movwf	main@MSB& (0+255),b
   840                           
   841                           ; BSR set to: 0
   842                           ;main.c: 48: LSB = ADCvalue;
   843  0011D0  C0A7  F0A6         	movff	main@ADCvalue,main@LSB
   844                           
   845                           ; BSR set to: 0
   846                           ;main.c: 49: Serial2.SendByte(MSB);
   847  0011D4  D801               	call	u748
   848  0011D6  D00F               	goto	u749
   849  0011D8                     u748:
   850  0011D8  0005               	push	
   851  0011DA  6EFA               	movwf	pclath,c
   852  0011DC  0100               	movlb	0	; () banked
   853  0011DE  0100               	movlb	0	; () banked
   854  0011E0  5178               	movf	(_Serial2+2)& (0+255),w,b
   855  0011E2  6EFD               	movwf	tosl,c
   856  0011E4  0100               	movlb	0	; () banked
   857  0011E6  5179               	movf	(_Serial2+3)& (0+255),w,b
   858  0011E8  6EFE               	movwf	tosh,c
   859  0011EA  6AFF               	clrf	tosu,c
   860  0011EC  50FA               	movf	pclath,w,c
   861  0011EE  0100               	movlb	0	; () banked
   862  0011F0  0100               	movlb	0	; () banked
   863  0011F2  51A5               	movf	main@MSB& (0+255),w,b
   864  0011F4  0012               	return		;indir
   865  0011F6                     u749:
   866                           
   867                           ;main.c: 50: Serial2.SendByte(LSB);
   868  0011F6  D801               	call	u758
   869  0011F8  D00F               	goto	u759
   870  0011FA                     u758:
   871  0011FA  0005               	push	
   872  0011FC  6EFA               	movwf	pclath,c
   873  0011FE  0100               	movlb	0	; () banked
   874  001200  0100               	movlb	0	; () banked
   875  001202  5178               	movf	(_Serial2+2)& (0+255),w,b
   876  001204  6EFD               	movwf	tosl,c
   877  001206  0100               	movlb	0	; () banked
   878  001208  5179               	movf	(_Serial2+3)& (0+255),w,b
   879  00120A  6EFE               	movwf	tosh,c
   880  00120C  6AFF               	clrf	tosu,c
   881  00120E  50FA               	movf	pclath,w,c
   882  001210  0100               	movlb	0	; () banked
   883  001212  0100               	movlb	0	; () banked
   884  001214  51A6               	movf	main@LSB& (0+255),w,b
   885  001216  0012               	return		;indir
   886  001218                     u759:
   887                           
   888                           ;main.c: 51: PIR1bits.TMR2IF=0;
   889  001218  929E               	bcf	3998,1,c	;volatile
   890  00121A                     l28:
   891  00121A  B29E               	btfsc	3998,1,c	;volatile
   892  00121C  D7BB               	goto	l1757
   893  00121E  D7FD               	goto	l28
   894  001220                     __end_of_main:
   895                           	opt stack 0
   896                           tosu	equ	0xFFF
   897                           tosh	equ	0xFFE
   898                           tosl	equ	0xFFD
   899                           pclath	equ	0xFFA
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           postdec1	equ	0xFE5
   907                           fsr1l	equ	0xFE1
   908                           
   909 ;; *************** function _SetTimer2 *****************
   910 ;; Defined at:
   911 ;;		line 149 in file "EAB_Timer.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  prescalar       1    wreg     unsigned char 
   914 ;;  postscalar      1   31[COMRAM] unsigned char 
   915 ;;  period          1   32[COMRAM] unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  prescalar       1   34[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      unsigned char 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;Total ram usage:        4 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    2
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942  0016DC                     __ptext1:
   943                           	opt stack 0
   944  0016DC                     _SetTimer2:
   945                           	opt stack 28
   946                           
   947                           ;incstack = 0
   948                           ;SetTimer2@prescalar stored from wreg
   949  0016DC  CFE8 F023          	movff	wreg,SetTimer2@prescalar
   950  0016E0  50BA               	movf	4026,w,c	;volatile
   951  0016E2  1823               	xorwf	SetTimer2@prescalar,w,c
   952  0016E4  0BFC               	andlw	-4
   953  0016E6  1823               	xorwf	SetTimer2@prescalar,w,c
   954  0016E8  6EBA               	movwf	4026,c	;volatile
   955  0016EA  C020  F022         	movff	SetTimer2@postscalar,??_SetTimer2
   956  0016EE  4622               	rlncf	??_SetTimer2,f,c
   957  0016F0  4622               	rlncf	??_SetTimer2,f,c
   958  0016F2  4622               	rlncf	??_SetTimer2,f,c
   959  0016F4  50BA               	movf	4026,w,c	;volatile
   960  0016F6  1822               	xorwf	??_SetTimer2,w,c
   961  0016F8  0B87               	andlw	-121
   962  0016FA  1822               	xorwf	??_SetTimer2,w,c
   963  0016FC  6EBA               	movwf	4026,c	;volatile
   964  0016FE  84BA               	bsf	4026,2,c	;volatile
   965  001700  C021  FFBB         	movff	SetTimer2@period,4027	;volatile
   966  001704  0012               	return	
   967  001706                     __end_of_SetTimer2:
   968                           	opt stack 0
   969                           tosu	equ	0xFFF
   970                           tosh	equ	0xFFE
   971                           tosl	equ	0xFFD
   972                           pclath	equ	0xFFA
   973                           tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           postdec1	equ	0xFE5
   980                           fsr1l	equ	0xFE1
   981                           
   982 ;; *************** function _SetFreq_8MHZ *****************
   983 ;; Defined at:
   984 ;;		line 85 in file "EAB_Oscillator.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      unsigned char 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    2
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text2
  1013  00172E                     __ptext2:
  1014                           	opt stack 0
  1015  00172E                     _SetFreq_8MHZ:
  1016                           	opt stack 28
  1017                           
  1018                           ;incstack = 0
  1019  00172E  50D3               	movf	4051,w,c	;volatile
  1020  001730  0B8C               	andlw	140
  1021  001732  0962               	iorlw	98
  1022  001734  6ED3               	movwf	4051,c	;volatile
  1023  001736  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
  1024  001738  0E06               	movlw	6
  1025  00173A  6E3D               	movwf	_OscFreqIndex,c
  1026  00173C  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
  1027  00173E  0E00               	movlw	0
  1028  001740  6E39               	movwf	_OscFreq,c
  1029  001742  0E12               	movlw	18
  1030  001744  6E3A               	movwf	_OscFreq+1,c
  1031  001746  0E7A               	movlw	122
  1032  001748  6E3B               	movwf	_OscFreq+2,c
  1033  00174A  0E00               	movlw	0
  1034  00174C  6E3C               	movwf	_OscFreq+3,c
  1035  00174E  0012               	return	
  1036  001750                     __end_of_SetFreq_8MHZ:
  1037                           	opt stack 0
  1038                           tosu	equ	0xFFF
  1039                           tosh	equ	0xFFE
  1040                           tosl	equ	0xFFD
  1041                           pclath	equ	0xFFA
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           postdec1	equ	0xFE5
  1049                           fsr1l	equ	0xFE1
  1050                           
  1051 ;; *************** function _SetChannel *****************
  1052 ;; Defined at:
  1053 ;;		line 66 in file "EAB_ADC.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  channel         1    wreg     unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  channel         1   32[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      unsigned char 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text3
  1082  001772                     __ptext3:
  1083                           	opt stack 0
  1084  001772                     _SetChannel:
  1085                           	opt stack 28
  1086                           
  1087                           ;incstack = 0
  1088                           ;SetChannel@channel stored from wreg
  1089  001772  CFE8 F021          	movff	wreg,SetChannel@channel
  1090  001776  C021  F020         	movff	SetChannel@channel,??_SetChannel
  1091  00177A  4620               	rlncf	??_SetChannel,f,c
  1092  00177C  4620               	rlncf	??_SetChannel,f,c
  1093  00177E  50C2               	movf	4034,w,c	;volatile
  1094  001780  1820               	xorwf	??_SetChannel,w,c
  1095  001782  0B83               	andlw	-125
  1096  001784  1820               	xorwf	??_SetChannel,w,c
  1097  001786  6EC2               	movwf	4034,c	;volatile
  1098  001788  82C2               	bsf	4034,1,c	;volatile
  1099  00178A  0012               	return	
  1100  00178C                     __end_of_SetChannel:
  1101                           	opt stack 0
  1102                           tosu	equ	0xFFF
  1103                           tosh	equ	0xFFE
  1104                           tosl	equ	0xFFD
  1105                           pclath	equ	0xFFA
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           
  1115 ;; *************** function _SendByte1 *****************
  1116 ;; Defined at:
  1117 ;;		line 87 in file "EAB_Serial.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  Data            1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  Data            1   31[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      unsigned char 
  1124 ;; Registers used:
  1125 ;;		wreg
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        1 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    2
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146  0017B0                     __ptext4:
  1147                           	opt stack 0
  1148  0017B0                     _SendByte1:
  1149                           	opt stack 28
  1150                           
  1151                           ;incstack = 0
  1152                           ;SendByte1@Data stored from wreg
  1153  0017B0  CFE8 F020          	movff	wreg,SendByte1@Data
  1154  0017B4                     l240:
  1155  0017B4  A2AC               	btfss	4012,1,c	;volatile
  1156  0017B6  D7FE               	goto	l240
  1157  0017B8  C020  FFAD         	movff	SendByte1@Data,4013	;volatile
  1158  0017BC  0012               	return	
  1159  0017BE                     __end_of_SendByte1:
  1160                           	opt stack 0
  1161                           tosu	equ	0xFFF
  1162                           tosh	equ	0xFFE
  1163                           tosl	equ	0xFFD
  1164                           pclath	equ	0xFFA
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postdec1	equ	0xFE5
  1172                           fsr1l	equ	0xFE1
  1173                           
  1174 ;; *************** function _SendByte2 *****************
  1175 ;; Defined at:
  1176 ;;		line 94 in file "EAB_Serial.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  Data            1    wreg     unsigned char 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  Data            1   31[COMRAM] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      unsigned char 
  1183 ;; Registers used:
  1184 ;;		wreg
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:        1 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text5
  1205  0017BE                     __ptext5:
  1206                           	opt stack 0
  1207  0017BE                     _SendByte2:
  1208                           	opt stack 28
  1209                           
  1210                           ;incstack = 0
  1211                           ;SendByte2@Data stored from wreg
  1212  0017BE  CFE8 F020          	movff	wreg,SendByte2@Data
  1213  0017C2                     l246:
  1214  0017C2  A272               	btfss	3954,1,c	;volatile
  1215  0017C4  D7FE               	goto	l246
  1216  0017C6  C020  FF73         	movff	SendByte2@Data,3955	;volatile
  1217  0017CA  0012               	return	
  1218  0017CC                     __end_of_SendByte2:
  1219                           	opt stack 0
  1220                           tosu	equ	0xFFF
  1221                           tosh	equ	0xFFE
  1222                           tosl	equ	0xFFD
  1223                           pclath	equ	0xFFA
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           
  1233 ;; *************** function _ReadData *****************
  1234 ;; Defined at:
  1235 ;;		line 73 in file "EAB_ADC.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  ADCdata         2   35[COMRAM] short 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2   31[COMRAM] short 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;Total ram usage:        6 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    2
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text6
  1264  001750                     __ptext6:
  1265                           	opt stack 0
  1266  001750                     _ReadData:
  1267                           	opt stack 28
  1268                           
  1269                           ;incstack = 0
  1270  001750  50C3               	movf	4035,w,c	;volatile
  1271  001752  CFC4 F022          	movff	4036,??_ReadData	;volatile
  1272  001756  6A23               	clrf	(??_ReadData+1)& (0+255),c
  1273  001758  C022  F023         	movff	??_ReadData,??_ReadData+1
  1274  00175C  6A22               	clrf	??_ReadData,c
  1275  00175E  1022               	iorwf	??_ReadData,w,c
  1276  001760  6E24               	movwf	ReadData@ADCdata,c
  1277  001762  5023               	movf	??_ReadData+1,w,c
  1278  001764  6E25               	movwf	ReadData@ADCdata+1,c
  1279  001766  82C2               	bsf	4034,1,c	;volatile
  1280  001768  C024  F020         	movff	ReadData@ADCdata,?_ReadData
  1281  00176C  C025  F021         	movff	ReadData@ADCdata+1,?_ReadData+1
  1282  001770  0012               	return	
  1283  001772                     __end_of_ReadData:
  1284                           	opt stack 0
  1285                           tosu	equ	0xFFF
  1286                           tosh	equ	0xFFE
  1287                           tosl	equ	0xFFD
  1288                           pclath	equ	0xFFA
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec1	equ	0xFE5
  1296                           fsr1l	equ	0xFE1
  1297                           
  1298 ;; *************** function _Open_adc *****************
  1299 ;; Defined at:
  1300 ;;		line 23 in file "EAB_ADC.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  adcs            1   11[BANK0 ] unsigned char 
  1305 ;;  freq            1   10[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      unsigned char 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;Total ram usage:        6 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    3
  1322 ;; This function calls:
  1323 ;;		_GetFreq
  1324 ;;		___aldiv
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text7
  1331  00136C                     __ptext7:
  1332                           	opt stack 0
  1333  00136C                     _Open_adc:
  1334                           	opt stack 27
  1335                           
  1336                           ;incstack = 0
  1337  00136C  D801               	call	u778
  1338  00136E  D00C               	goto	u779
  1339  001370                     u778:
  1340  001370  0005               	push	
  1341  001372  6EFA               	movwf	pclath,c
  1342  001374  0100               	movlb	0	; () banked
  1343  001376  0100               	movlb	0	; () banked
  1344  001378  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1345  00137A  6EFD               	movwf	tosl,c
  1346  00137C  0100               	movlb	0	; () banked
  1347  00137E  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1348  001380  6EFE               	movwf	tosh,c
  1349  001382  6AFF               	clrf	tosu,c
  1350  001384  50FA               	movf	pclath,w,c
  1351  001386  0012               	return		;indir
  1352  001388                     u779:
  1353  001388  C020  F024         	movff	?_GetFreq,___aldiv@dividend
  1354  00138C  C021  F025         	movff	?_GetFreq+1,___aldiv@dividend+1
  1355  001390  C022  F026         	movff	?_GetFreq+2,___aldiv@dividend+2
  1356  001394  C023  F027         	movff	?_GetFreq+3,___aldiv@dividend+3
  1357  001398  0E40               	movlw	64
  1358  00139A  6E28               	movwf	___aldiv@divisor,c
  1359  00139C  0E42               	movlw	66
  1360  00139E  6E29               	movwf	___aldiv@divisor+1,c
  1361  0013A0  0E0F               	movlw	15
  1362  0013A2  6E2A               	movwf	___aldiv@divisor+2,c
  1363  0013A4  0E00               	movlw	0
  1364  0013A6  6E2B               	movwf	___aldiv@divisor+3,c
  1365  0013A8  EC10  F009         	call	___aldiv
  1366  0013AC  C024  F08E         	movff	?___aldiv,??_Open_adc
  1367  0013B0  C025  F08F         	movff	?___aldiv+1,??_Open_adc+1
  1368  0013B4  C026  F090         	movff	?___aldiv+2,??_Open_adc+2
  1369  0013B8  C027  F091         	movff	?___aldiv+3,??_Open_adc+3
  1370  0013BC  0100               	movlb	0	; () banked
  1371  0013BE  518E               	movf	??_Open_adc& (0+255),w,b
  1372  0013C0  0100               	movlb	0	; () banked
  1373  0013C2  0100               	movlb	0	; () banked
  1374  0013C4  6F92               	movwf	Open_adc@freq& (0+255),b
  1375  0013C6  D01D               	goto	l1789
  1376  0013C8                     l1775:
  1377                           
  1378                           ; BSR set to: 0
  1379  0013C8  0100               	movlb	0	; () banked
  1380  0013CA  6F8E               	movwf	??_Open_adc& (0+255),b
  1381  0013CC  0E00               	movlw	0
  1382  0013CE  D013               	goto	L5
  1383  0013D0                     l1777:
  1384                           
  1385                           ; BSR set to: 0
  1386  0013D0  0100               	movlb	0	; () banked
  1387  0013D2  6F8E               	movwf	??_Open_adc& (0+255),b
  1388  0013D4  0E04               	movlw	4
  1389  0013D6  D00F               	goto	L5
  1390  0013D8                     l1779:
  1391                           
  1392                           ; BSR set to: 0
  1393  0013D8  0100               	movlb	0	; () banked
  1394  0013DA  6F8E               	movwf	??_Open_adc& (0+255),b
  1395  0013DC  0E01               	movlw	1
  1396  0013DE  D00B               	goto	L5
  1397  0013E0                     l1781:
  1398                           
  1399                           ; BSR set to: 0
  1400  0013E0  0100               	movlb	0	; () banked
  1401  0013E2  6F8E               	movwf	??_Open_adc& (0+255),b
  1402  0013E4  0E05               	movlw	5
  1403  0013E6  D007               	goto	L5
  1404  0013E8                     l1783:
  1405                           
  1406                           ; BSR set to: 0
  1407  0013E8  0100               	movlb	0	; () banked
  1408  0013EA  6F8E               	movwf	??_Open_adc& (0+255),b
  1409  0013EC  0E02               	movlw	2
  1410  0013EE  D003               	goto	L5
  1411  0013F0                     l1785:
  1412                           
  1413                           ; BSR set to: 0
  1414  0013F0  0100               	movlb	0	; () banked
  1415  0013F2  6F8E               	movwf	??_Open_adc& (0+255),b
  1416  0013F4  0E06               	movlw	6
  1417  0013F6                     L5:
  1418  0013F6  0100               	movlb	0	; () banked
  1419  0013F8  0100               	movlb	0	; () banked
  1420  0013FA  6F93               	movwf	Open_adc@adcs& (0+255),b
  1421  0013FC  0100               	movlb	0	; () banked
  1422  0013FE  518E               	movf	??_Open_adc& (0+255),w,b
  1423  001400  D01B               	goto	l1791
  1424  001402                     l1789:
  1425                           
  1426                           ; BSR set to: 0
  1427  001402  0100               	movlb	0	; () banked
  1428  001404  0100               	movlb	0	; () banked
  1429  001406  5192               	movf	Open_adc@freq& (0+255),w,b
  1430                           
  1431                           ; Switch size 1, requested type "space"
  1432                           ; Number of cases is 8, Range of values is 0 to 64
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte           25    13 (average)
  1436                           ;	Chosen strategy is simple_byte
  1437  001408  0A00               	xorlw	0	; case 0
  1438  00140A  B4D8               	btfsc	status,2,c
  1439  00140C  D7DD               	goto	l1775
  1440  00140E  0A01               	xorlw	1	; case 1
  1441  001410  B4D8               	btfsc	status,2,c
  1442  001412  D7DA               	goto	l1775
  1443  001414  0A03               	xorlw	3	; case 2
  1444  001416  B4D8               	btfsc	status,2,c
  1445  001418  D7D7               	goto	l1775
  1446  00141A  0A06               	xorlw	6	; case 4
  1447  00141C  B4D8               	btfsc	status,2,c
  1448  00141E  D7D8               	goto	l1777
  1449  001420  0A0C               	xorlw	12	; case 8
  1450  001422  B4D8               	btfsc	status,2,c
  1451  001424  D7D9               	goto	l1779
  1452  001426  0A18               	xorlw	24	; case 16
  1453  001428  B4D8               	btfsc	status,2,c
  1454  00142A  D7DA               	goto	l1781
  1455  00142C  0A30               	xorlw	48	; case 32
  1456  00142E  B4D8               	btfsc	status,2,c
  1457  001430  D7DB               	goto	l1783
  1458  001432  0A60               	xorlw	96	; case 64
  1459  001434  B4D8               	btfsc	status,2,c
  1460  001436  D7DC               	goto	l1785
  1461  001438                     l1791:
  1462                           
  1463                           ; BSR set to: 0
  1464  001438  50C0               	movf	4032,w,c	;volatile
  1465  00143A  0100               	movlb	0	; () banked
  1466  00143C  0100               	movlb	0	; () banked
  1467  00143E  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1468  001440  0BF8               	andlw	-8
  1469  001442  0100               	movlb	0	; () banked
  1470  001444  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1471  001446  6EC0               	movwf	4032,c	;volatile
  1472                           
  1473                           ; BSR set to: 0
  1474  001448  50C0               	movf	4032,w,c	;volatile
  1475  00144A  0BC7               	andlw	-57
  1476  00144C  0928               	iorlw	40
  1477  00144E  6EC0               	movwf	4032,c	;volatile
  1478                           
  1479                           ; BSR set to: 0
  1480  001450  0EF3               	movlw	-13
  1481  001452  16C1               	andwf	4033,f,c	;volatile
  1482                           
  1483                           ; BSR set to: 0
  1484  001454  0EFC               	movlw	-4
  1485  001456  16C1               	andwf	4033,f,c	;volatile
  1486                           
  1487                           ; BSR set to: 0
  1488  001458  8EC0               	bsf	4032,7,c	;volatile
  1489                           
  1490                           ; BSR set to: 0
  1491  00145A  80C2               	bsf	4034,0,c	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494  00145C  82C2               	bsf	4034,1,c	;volatile
  1495  00145E  0012               	return	
  1496  001460                     __end_of_Open_adc:
  1497                           	opt stack 0
  1498                           tosu	equ	0xFFF
  1499                           tosh	equ	0xFFE
  1500                           tosl	equ	0xFFD
  1501                           pclath	equ	0xFFA
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postdec1	equ	0xFE5
  1509                           fsr1l	equ	0xFE1
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _Open1 *****************
  1513 ;; Defined at:
  1514 ;;		line 33 in file "EAB_Serial.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  BaudRate        4    6[BANK0 ] long 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  freq            4   18[BANK0 ] long 
  1519 ;;  BRGval          2   22[BANK0 ] int 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      unsigned char 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:       18 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    3
  1536 ;; This function calls:
  1537 ;;		_GetFreq
  1538 ;;		___aldiv
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text8
  1545  001460                     __ptext8:
  1546                           	opt stack 0
  1547  001460                     _Open1:
  1548                           	opt stack 27
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;incstack = 0
  1552  001460  D801               	call	u788
  1553  001462  D00C               	goto	u789
  1554  001464                     u788:
  1555  001464  0005               	push	
  1556  001466  6EFA               	movwf	pclath,c
  1557  001468  0100               	movlb	0	; () banked
  1558  00146A  0100               	movlb	0	; () banked
  1559  00146C  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1560  00146E  6EFD               	movwf	tosl,c
  1561  001470  0100               	movlb	0	; () banked
  1562  001472  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1563  001474  6EFE               	movwf	tosh,c
  1564  001476  6AFF               	clrf	tosu,c
  1565  001478  50FA               	movf	pclath,w,c
  1566  00147A  0012               	return		;indir
  1567  00147C                     u789:
  1568  00147C  C020  F09A         	movff	?_GetFreq,Open1@freq
  1569  001480  C021  F09B         	movff	?_GetFreq+1,Open1@freq+1
  1570  001484  C022  F09C         	movff	?_GetFreq+2,Open1@freq+2
  1571  001488  C023  F09D         	movff	?_GetFreq+3,Open1@freq+3
  1572  00148C  C09A  F024         	movff	Open1@freq,___aldiv@dividend
  1573  001490  C09B  F025         	movff	Open1@freq+1,___aldiv@dividend+1
  1574  001494  C09C  F026         	movff	Open1@freq+2,___aldiv@dividend+2
  1575  001498  C09D  F027         	movff	Open1@freq+3,___aldiv@dividend+3
  1576  00149C  0100               	movlb	0	; () banked
  1577  00149E  C08E  F092         	movff	Open1@BaudRate,??_Open1
  1578  0014A2  0100               	movlb	0	; () banked
  1579  0014A4  C08F  F093         	movff	Open1@BaudRate+1,??_Open1+1
  1580  0014A8  0100               	movlb	0	; () banked
  1581  0014AA  C090  F094         	movff	Open1@BaudRate+2,??_Open1+2
  1582  0014AE  0100               	movlb	0	; () banked
  1583  0014B0  C091  F095         	movff	Open1@BaudRate+3,??_Open1+3
  1584  0014B4  0E02               	movlw	2
  1585  0014B6                     u795:
  1586  0014B6  90D8               	bcf	status,0,c
  1587  0014B8  0100               	movlb	0	; () banked
  1588  0014BA  3792               	rlcf	??_Open1& (0+255),f,b
  1589  0014BC  3793               	rlcf	(??_Open1+1)& (0+255),f,b
  1590  0014BE  3794               	rlcf	(??_Open1+2)& (0+255),f,b
  1591  0014C0  3795               	rlcf	(??_Open1+3)& (0+255),f,b
  1592  0014C2  2EE8               	decfsz	wreg,f,c
  1593  0014C4  D7F8               	goto	u795
  1594  0014C6  C092  F028         	movff	??_Open1,___aldiv@divisor
  1595  0014CA  C093  F029         	movff	??_Open1+1,___aldiv@divisor+1
  1596  0014CE  C094  F02A         	movff	??_Open1+2,___aldiv@divisor+2
  1597  0014D2  C095  F02B         	movff	??_Open1+3,___aldiv@divisor+3
  1598  0014D6  EC10  F009         	call	___aldiv	;wreg free
  1599  0014DA  C024  F096         	movff	?___aldiv,??_Open1+4
  1600  0014DE  C025  F097         	movff	?___aldiv+1,??_Open1+5
  1601  0014E2  C026  F098         	movff	?___aldiv+2,??_Open1+6
  1602  0014E6  C027  F099         	movff	?___aldiv+3,??_Open1+7
  1603  0014EA  0EFF               	movlw	255
  1604  0014EC  0100               	movlb	0	; () banked
  1605  0014EE  2596               	addwf	(??_Open1+4)& (0+255),w,b
  1606  0014F0  0100               	movlb	0	; () banked
  1607  0014F2  0100               	movlb	0	; () banked
  1608  0014F4  6F9E               	movwf	Open1@BRGval& (0+255),b
  1609  0014F6  0EFF               	movlw	255
  1610  0014F8  0100               	movlb	0	; () banked
  1611  0014FA  2197               	addwfc	(??_Open1+5)& (0+255),w,b
  1612  0014FC  0100               	movlb	0	; () banked
  1613  0014FE  6F9F               	movwf	(Open1@BRGval+1)& (0+255),b
  1614                           
  1615                           ; BSR set to: 0
  1616  001500  0100               	movlb	0	; () banked
  1617  001502  0100               	movlb	0	; () banked
  1618  001504  519F               	movf	(Open1@BRGval+1)& (0+255),w,b
  1619  001506  0A80               	xorlw	128
  1620  001508  0F80               	addlw	-128
  1621  00150A  0E01               	movlw	1
  1622  00150C  B4D8               	btfsc	status,2,c
  1623  00150E  5D9E               	subwf	Open1@BRGval& (0+255),w,b
  1624  001510  A0D8               	btfss	status,0,c
  1625  001512  0012               	return	
  1626                           
  1627                           ; BSR set to: 0
  1628  001514  86B8               	bsf	4024,3,c	;volatile
  1629  001516  84AC               	bsf	4012,2,c	;volatile
  1630  001518  98AC               	bcf	4012,4,c	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633  00151A  0100               	movlb	0	; () banked
  1634  00151C  C09F  F092         	movff	Open1@BRGval+1,??_Open1
  1635  001520  C092  F093         	movff	??_Open1,??_Open1+1
  1636  001524  0100               	movlb	0	; () banked
  1637  001526  6B94               	clrf	(??_Open1+2)& (0+255),b
  1638  001528  0100               	movlb	0	; () banked
  1639  00152A  5193               	movf	(??_Open1+1)& (0+255),w,b
  1640  00152C  6EB0               	movwf	4016,c	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643  00152E  C09E  FFAF         	movff	Open1@BRGval,4015	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646  001532  010F               	movlb	15	; () banked
  1647  001534  010F               	movlb	15	; () banked
  1648  001536  9D3A               	bcf	58,6,b	;volatile
  1649                           
  1650                           ; BSR set to: 15
  1651  001538  010F               	movlb	15	; () banked
  1652  00153A  010F               	movlb	15	; () banked
  1653  00153C  9F3A               	bcf	58,7,b	;volatile
  1654                           
  1655                           ; BSR set to: 15
  1656  00153E  8C94               	bsf	3988,6,c	;volatile
  1657                           
  1658                           ; BSR set to: 15
  1659  001540  8E94               	bsf	3988,7,c	;volatile
  1660                           
  1661                           ; BSR set to: 15
  1662  001542  8AAC               	bsf	4012,5,c	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665  001544  88AB               	bsf	4011,4,c	;volatile
  1666                           
  1667                           ; BSR set to: 15
  1668  001546  8EAB               	bsf	4011,7,c	;volatile
  1669  001548  0012               	return	
  1670  00154A                     __end_of_Open1:
  1671                           	opt stack 0
  1672                           tosu	equ	0xFFF
  1673                           tosh	equ	0xFFE
  1674                           tosl	equ	0xFFD
  1675                           pclath	equ	0xFFA
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1l	equ	0xFE1
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function _Open2 *****************
  1687 ;; Defined at:
  1688 ;;		line 61 in file "EAB_Serial.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  BaudRate        4    6[BANK0 ] long 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  freq            4   18[BANK0 ] long 
  1693 ;;  temp            2   22[BANK0 ] int 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;Total ram usage:       18 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		_GetFreq
  1712 ;;		___aldiv
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text9
  1719  00154A                     __ptext9:
  1720                           	opt stack 0
  1721  00154A                     _Open2:
  1722                           	opt stack 27
  1723                           
  1724                           ;incstack = 0
  1725  00154A  D801               	call	u818
  1726  00154C  D00C               	goto	u819
  1727  00154E                     u818:
  1728  00154E  0005               	push	
  1729  001550  6EFA               	movwf	pclath,c
  1730  001552  0100               	movlb	0	; () banked
  1731  001554  0100               	movlb	0	; () banked
  1732  001556  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1733  001558  6EFD               	movwf	tosl,c
  1734  00155A  0100               	movlb	0	; () banked
  1735  00155C  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1736  00155E  6EFE               	movwf	tosh,c
  1737  001560  6AFF               	clrf	tosu,c
  1738  001562  50FA               	movf	pclath,w,c
  1739  001564  0012               	return		;indir
  1740  001566                     u819:
  1741  001566  C020  F09A         	movff	?_GetFreq,Open2@freq
  1742  00156A  C021  F09B         	movff	?_GetFreq+1,Open2@freq+1
  1743  00156E  C022  F09C         	movff	?_GetFreq+2,Open2@freq+2
  1744  001572  C023  F09D         	movff	?_GetFreq+3,Open2@freq+3
  1745  001576  C09A  F024         	movff	Open2@freq,___aldiv@dividend
  1746  00157A  C09B  F025         	movff	Open2@freq+1,___aldiv@dividend+1
  1747  00157E  C09C  F026         	movff	Open2@freq+2,___aldiv@dividend+2
  1748  001582  C09D  F027         	movff	Open2@freq+3,___aldiv@dividend+3
  1749  001586  0100               	movlb	0	; () banked
  1750  001588  C08E  F092         	movff	Open2@BaudRate,??_Open2
  1751  00158C  0100               	movlb	0	; () banked
  1752  00158E  C08F  F093         	movff	Open2@BaudRate+1,??_Open2+1
  1753  001592  0100               	movlb	0	; () banked
  1754  001594  C090  F094         	movff	Open2@BaudRate+2,??_Open2+2
  1755  001598  0100               	movlb	0	; () banked
  1756  00159A  C091  F095         	movff	Open2@BaudRate+3,??_Open2+3
  1757  00159E  0E02               	movlw	2
  1758  0015A0                     u825:
  1759  0015A0  90D8               	bcf	status,0,c
  1760  0015A2  0100               	movlb	0	; () banked
  1761  0015A4  3792               	rlcf	??_Open2& (0+255),f,b
  1762  0015A6  3793               	rlcf	(??_Open2+1)& (0+255),f,b
  1763  0015A8  3794               	rlcf	(??_Open2+2)& (0+255),f,b
  1764  0015AA  3795               	rlcf	(??_Open2+3)& (0+255),f,b
  1765  0015AC  2EE8               	decfsz	wreg,f,c
  1766  0015AE  D7F8               	goto	u825
  1767  0015B0  C092  F028         	movff	??_Open2,___aldiv@divisor
  1768  0015B4  C093  F029         	movff	??_Open2+1,___aldiv@divisor+1
  1769  0015B8  C094  F02A         	movff	??_Open2+2,___aldiv@divisor+2
  1770  0015BC  C095  F02B         	movff	??_Open2+3,___aldiv@divisor+3
  1771  0015C0  EC10  F009         	call	___aldiv	;wreg free
  1772  0015C4  C024  F096         	movff	?___aldiv,??_Open2+4
  1773  0015C8  C025  F097         	movff	?___aldiv+1,??_Open2+5
  1774  0015CC  C026  F098         	movff	?___aldiv+2,??_Open2+6
  1775  0015D0  C027  F099         	movff	?___aldiv+3,??_Open2+7
  1776  0015D4  0EFF               	movlw	255
  1777  0015D6  0100               	movlb	0	; () banked
  1778  0015D8  2596               	addwf	(??_Open2+4)& (0+255),w,b
  1779  0015DA  0100               	movlb	0	; () banked
  1780  0015DC  0100               	movlb	0	; () banked
  1781  0015DE  6F9E               	movwf	Open2@temp& (0+255),b
  1782  0015E0  0EFF               	movlw	255
  1783  0015E2  0100               	movlb	0	; () banked
  1784  0015E4  2197               	addwfc	(??_Open2+5)& (0+255),w,b
  1785  0015E6  0100               	movlb	0	; () banked
  1786  0015E8  6F9F               	movwf	(Open2@temp+1)& (0+255),b
  1787                           
  1788                           ; BSR set to: 0
  1789  0015EA  0100               	movlb	0	; () banked
  1790  0015EC  0100               	movlb	0	; () banked
  1791  0015EE  519F               	movf	(Open2@temp+1)& (0+255),w,b
  1792  0015F0  0A80               	xorlw	128
  1793  0015F2  0F80               	addlw	-128
  1794  0015F4  0E01               	movlw	1
  1795  0015F6  B4D8               	btfsc	status,2,c
  1796  0015F8  5D9E               	subwf	Open2@temp& (0+255),w,b
  1797  0015FA  A0D8               	btfss	status,0,c
  1798  0015FC  0012               	return	
  1799                           
  1800                           ; BSR set to: 0
  1801  0015FE  8670               	bsf	3952,3,c	;volatile
  1802  001600  8472               	bsf	3954,2,c	;volatile
  1803  001602  9872               	bcf	3954,4,c	;volatile
  1804                           
  1805                           ; BSR set to: 0
  1806  001604  0100               	movlb	0	; () banked
  1807  001606  C09F  F092         	movff	Open2@temp+1,??_Open2
  1808  00160A  C092  F093         	movff	??_Open2,??_Open2+1
  1809  00160E  0100               	movlb	0	; () banked
  1810  001610  6B94               	clrf	(??_Open2+2)& (0+255),b
  1811  001612  0100               	movlb	0	; () banked
  1812  001614  5193               	movf	(??_Open2+1)& (0+255),w,b
  1813  001616  6E76               	movwf	3958,c	;volatile
  1814                           
  1815                           ; BSR set to: 0
  1816  001618  C09E  FF75         	movff	Open2@temp,3957	;volatile
  1817                           
  1818                           ; BSR set to: 0
  1819  00161C  8C93               	bsf	3987,6,c	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822  00161E  8E93               	bsf	3987,7,c	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825  001620  8A72               	bsf	3954,5,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828  001622  8871               	bsf	3953,4,c	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831  001624  8E71               	bsf	3953,7,c	;volatile
  1832  001626  0012               	return	
  1833  001628                     __end_of_Open2:
  1834                           	opt stack 0
  1835                           tosu	equ	0xFFF
  1836                           tosh	equ	0xFFE
  1837                           tosl	equ	0xFFD
  1838                           pclath	equ	0xFFA
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           postdec1	equ	0xFE5
  1846                           fsr1l	equ	0xFE1
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function ___aldiv *****************
  1850 ;; Defined at:
  1851 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  dividend        4   35[COMRAM] long 
  1854 ;;  divisor         4   39[COMRAM] long 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  quotient        4    2[BANK0 ] long 
  1857 ;;  sign            1    1[BANK0 ] unsigned char 
  1858 ;;  counter         1    0[BANK0 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  4   35[COMRAM] long 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1868 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;Total ram usage:       15 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_Open_adc
  1879 ;;		_Open1
  1880 ;;		_Open2
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text10
  1885  001220                     __ptext10:
  1886                           	opt stack 0
  1887  001220                     ___aldiv:
  1888                           	opt stack 27
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;incstack = 0
  1892  001220  6E2C               	movwf	??___aldiv& (0+255),c
  1893  001222  0E00               	movlw	0
  1894  001224  0100               	movlb	0	; () banked
  1895  001226  0100               	movlb	0	; () banked
  1896  001228  6F89               	movwf	___aldiv@sign& (0+255),b
  1897  00122A  502C               	movf	??___aldiv& (0+255),w,c
  1898                           
  1899                           ; BSR set to: 0
  1900  00122C  502B               	movf	___aldiv@divisor+3,w,c
  1901  00122E  0A80               	xorlw	128
  1902  001230  0F80               	addlw	128
  1903  001232  E108               	bnz	u845
  1904  001234  0E00               	movlw	0
  1905  001236  5C2A               	subwf	___aldiv@divisor+2,w,c
  1906  001238  E105               	bnz	u845
  1907  00123A  0E00               	movlw	0
  1908  00123C  5C29               	subwf	___aldiv@divisor+1,w,c
  1909  00123E  E102               	bnz	u845
  1910  001240  0E00               	movlw	0
  1911  001242  5C28               	subwf	___aldiv@divisor,w,c
  1912  001244                     u845:
  1913  001244  B0D8               	btfsc	status,0,c
  1914  001246  D00E               	goto	l1873
  1915                           
  1916                           ; BSR set to: 0
  1917  001248  1E2B               	comf	___aldiv@divisor+3,f,c
  1918  00124A  1E2A               	comf	___aldiv@divisor+2,f,c
  1919  00124C  1E29               	comf	___aldiv@divisor+1,f,c
  1920  00124E  6C28               	negf	___aldiv@divisor,c
  1921  001250  0E00               	movlw	0
  1922  001252  2229               	addwfc	___aldiv@divisor+1,f,c
  1923  001254  222A               	addwfc	___aldiv@divisor+2,f,c
  1924  001256  222B               	addwfc	___aldiv@divisor+3,f,c
  1925                           
  1926                           ; BSR set to: 0
  1927  001258  6E2C               	movwf	??___aldiv& (0+255),c
  1928  00125A  0E01               	movlw	1
  1929  00125C  0100               	movlb	0	; () banked
  1930  00125E  0100               	movlb	0	; () banked
  1931  001260  6F89               	movwf	___aldiv@sign& (0+255),b
  1932  001262  502C               	movf	??___aldiv& (0+255),w,c
  1933  001264                     l1873:
  1934                           
  1935                           ; BSR set to: 0
  1936  001264  5027               	movf	___aldiv@dividend+3,w,c
  1937  001266  0A80               	xorlw	128
  1938  001268  0F80               	addlw	128
  1939  00126A  E108               	bnz	u855
  1940  00126C  0E00               	movlw	0
  1941  00126E  5C26               	subwf	___aldiv@dividend+2,w,c
  1942  001270  E105               	bnz	u855
  1943  001272  0E00               	movlw	0
  1944  001274  5C25               	subwf	___aldiv@dividend+1,w,c
  1945  001276  E102               	bnz	u855
  1946  001278  0E00               	movlw	0
  1947  00127A  5C24               	subwf	___aldiv@dividend,w,c
  1948  00127C                     u855:
  1949  00127C  B0D8               	btfsc	status,0,c
  1950  00127E  D00C               	goto	l1879
  1951                           
  1952                           ; BSR set to: 0
  1953  001280  1E27               	comf	___aldiv@dividend+3,f,c
  1954  001282  1E26               	comf	___aldiv@dividend+2,f,c
  1955  001284  1E25               	comf	___aldiv@dividend+1,f,c
  1956  001286  6C24               	negf	___aldiv@dividend,c
  1957  001288  0E00               	movlw	0
  1958  00128A  2225               	addwfc	___aldiv@dividend+1,f,c
  1959  00128C  2226               	addwfc	___aldiv@dividend+2,f,c
  1960  00128E  2227               	addwfc	___aldiv@dividend+3,f,c
  1961                           
  1962                           ; BSR set to: 0
  1963  001290  0E01               	movlw	1
  1964  001292  0100               	movlb	0	; () banked
  1965  001294  0100               	movlb	0	; () banked
  1966  001296  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  1967  001298                     l1879:
  1968                           
  1969                           ; BSR set to: 0
  1970  001298  0E00               	movlw	0
  1971  00129A  0100               	movlb	0	; () banked
  1972  00129C  0100               	movlb	0	; () banked
  1973  00129E  6F8A               	movwf	___aldiv@quotient& (0+255),b
  1974  0012A0  0E00               	movlw	0
  1975  0012A2  0100               	movlb	0	; () banked
  1976  0012A4  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1977  0012A6  0E00               	movlw	0
  1978  0012A8  0100               	movlb	0	; () banked
  1979  0012AA  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1980  0012AC  0E00               	movlw	0
  1981  0012AE  0100               	movlb	0	; () banked
  1982  0012B0  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1983                           
  1984                           ; BSR set to: 0
  1985  0012B2  502B               	movf	___aldiv@divisor+3,w,c
  1986  0012B4  1028               	iorwf	___aldiv@divisor,w,c
  1987  0012B6  1029               	iorwf	___aldiv@divisor+1,w,c
  1988  0012B8  102A               	iorwf	___aldiv@divisor+2,w,c
  1989  0012BA  B4D8               	btfsc	status,2,c
  1990  0012BC  D039               	goto	l1901
  1991                           
  1992                           ; BSR set to: 0
  1993  0012BE  6E2C               	movwf	??___aldiv& (0+255),c
  1994  0012C0  0E01               	movlw	1
  1995  0012C2  0100               	movlb	0	; () banked
  1996  0012C4  0100               	movlb	0	; () banked
  1997  0012C6  6F88               	movwf	___aldiv@counter& (0+255),b
  1998  0012C8  502C               	movf	??___aldiv& (0+255),w,c
  1999  0012CA  D008               	goto	l1887
  2000  0012CC                     l1885:
  2001                           
  2002                           ; BSR set to: 0
  2003  0012CC  90D8               	bcf	status,0,c
  2004  0012CE  3628               	rlcf	___aldiv@divisor,f,c
  2005  0012D0  3629               	rlcf	___aldiv@divisor+1,f,c
  2006  0012D2  362A               	rlcf	___aldiv@divisor+2,f,c
  2007  0012D4  362B               	rlcf	___aldiv@divisor+3,f,c
  2008  0012D6  0100               	movlb	0	; () banked
  2009  0012D8  0100               	movlb	0	; () banked
  2010  0012DA  2B88               	incf	___aldiv@counter& (0+255),f,b
  2011  0012DC                     l1887:
  2012                           
  2013                           ; BSR set to: 0
  2014  0012DC  AE2B               	btfss	___aldiv@divisor+3,7,c
  2015  0012DE  D7F6               	goto	l1885
  2016  0012E0                     l1889:
  2017                           
  2018                           ; BSR set to: 0
  2019  0012E0  0100               	movlb	0	; () banked
  2020  0012E2  90D8               	bcf	status,0,c
  2021  0012E4  0100               	movlb	0	; () banked
  2022  0012E6  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  2023  0012E8  0100               	movlb	0	; () banked
  2024  0012EA  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2025  0012EC  0100               	movlb	0	; () banked
  2026  0012EE  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2027  0012F0  0100               	movlb	0	; () banked
  2028  0012F2  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2029                           
  2030                           ; BSR set to: 0
  2031  0012F4  5028               	movf	___aldiv@divisor,w,c
  2032  0012F6  5C24               	subwf	___aldiv@dividend,w,c
  2033  0012F8  5029               	movf	___aldiv@divisor+1,w,c
  2034  0012FA  5825               	subwfb	___aldiv@dividend+1,w,c
  2035  0012FC  502A               	movf	___aldiv@divisor+2,w,c
  2036  0012FE  5826               	subwfb	___aldiv@dividend+2,w,c
  2037  001300  502B               	movf	___aldiv@divisor+3,w,c
  2038  001302  5827               	subwfb	___aldiv@dividend+3,w,c
  2039  001304  A0D8               	btfss	status,0,c
  2040  001306  D00B               	goto	l1897
  2041                           
  2042                           ; BSR set to: 0
  2043  001308  5028               	movf	___aldiv@divisor,w,c
  2044  00130A  5E24               	subwf	___aldiv@dividend,f,c
  2045  00130C  5029               	movf	___aldiv@divisor+1,w,c
  2046  00130E  5A25               	subwfb	___aldiv@dividend+1,f,c
  2047  001310  502A               	movf	___aldiv@divisor+2,w,c
  2048  001312  5A26               	subwfb	___aldiv@dividend+2,f,c
  2049  001314  502B               	movf	___aldiv@divisor+3,w,c
  2050  001316  5A27               	subwfb	___aldiv@dividend+3,f,c
  2051                           
  2052                           ; BSR set to: 0
  2053  001318  0100               	movlb	0	; () banked
  2054  00131A  0100               	movlb	0	; () banked
  2055  00131C  818A               	bsf	___aldiv@quotient& (0+255),0,b
  2056  00131E                     l1897:
  2057                           
  2058                           ; BSR set to: 0
  2059  00131E  90D8               	bcf	status,0,c
  2060  001320  322B               	rrcf	___aldiv@divisor+3,f,c
  2061  001322  322A               	rrcf	___aldiv@divisor+2,f,c
  2062  001324  3229               	rrcf	___aldiv@divisor+1,f,c
  2063  001326  3228               	rrcf	___aldiv@divisor,f,c
  2064                           
  2065                           ; BSR set to: 0
  2066  001328  0100               	movlb	0	; () banked
  2067  00132A  0100               	movlb	0	; () banked
  2068  00132C  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  2069  00132E  D7D8               	goto	l1889
  2070  001330                     l1901:
  2071                           
  2072                           ; BSR set to: 0
  2073  001330  0100               	movlb	0	; () banked
  2074  001332  0100               	movlb	0	; () banked
  2075  001334  5189               	movf	___aldiv@sign& (0+255),w,b
  2076  001336  B4D8               	btfsc	status,2,c
  2077  001338  D010               	goto	l1905
  2078                           
  2079                           ; BSR set to: 0
  2080  00133A  0100               	movlb	0	; () banked
  2081  00133C  0100               	movlb	0	; () banked
  2082  00133E  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2083  001340  0100               	movlb	0	; () banked
  2084  001342  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2085  001344  0100               	movlb	0	; () banked
  2086  001346  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2087  001348  0100               	movlb	0	; () banked
  2088  00134A  6D8A               	negf	___aldiv@quotient& (0+255),b
  2089  00134C  0E00               	movlw	0
  2090  00134E  0100               	movlb	0	; () banked
  2091  001350  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2092  001352  0100               	movlb	0	; () banked
  2093  001354  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2094  001356  0100               	movlb	0	; () banked
  2095  001358  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2096  00135A                     l1905:
  2097                           
  2098                           ; BSR set to: 0
  2099  00135A  C08A  F024         	movff	___aldiv@quotient,?___aldiv
  2100  00135E  C08B  F025         	movff	___aldiv@quotient+1,?___aldiv+1
  2101  001362  C08C  F026         	movff	___aldiv@quotient+2,?___aldiv+2
  2102  001366  C08D  F027         	movff	___aldiv@quotient+3,?___aldiv+3
  2103  00136A  0012               	return	
  2104  00136C                     __end_of___aldiv:
  2105                           	opt stack 0
  2106                           tosu	equ	0xFFF
  2107                           tosh	equ	0xFFE
  2108                           tosl	equ	0xFFD
  2109                           pclath	equ	0xFFA
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postdec1	equ	0xFE5
  2117                           fsr1l	equ	0xFE1
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _GetFreq *****************
  2121 ;; Defined at:
  2122 ;;		line 128 in file "EAB_Oscillator.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  4   31[COMRAM] long 
  2129 ;; Registers used:
  2130 ;;		None
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    2
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_Open_adc
  2147 ;;		_Open1
  2148 ;;		_Open2
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text11
  2153  00178C                     __ptext11:
  2154                           	opt stack 0
  2155  00178C                     _GetFreq:
  2156                           	opt stack 27
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;incstack = 0
  2160  00178C  C039  F020         	movff	_OscFreq,?_GetFreq
  2161  001790  C03A  F021         	movff	_OscFreq+1,?_GetFreq+1
  2162  001794  C03B  F022         	movff	_OscFreq+2,?_GetFreq+2
  2163  001798  C03C  F023         	movff	_OscFreq+3,?_GetFreq+3
  2164  00179C  0012               	return	
  2165  00179E                     __end_of_GetFreq:
  2166                           	opt stack 0
  2167                           tosu	equ	0xFFF
  2168                           tosh	equ	0xFFE
  2169                           tosl	equ	0xFFD
  2170                           pclath	equ	0xFFA
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           postinc0	equ	0xFEE
  2176                           wreg	equ	0xFE8
  2177                           postdec1	equ	0xFE5
  2178                           fsr1l	equ	0xFE1
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _LowPriority_InterruptHandler *****************
  2182 ;; Defined at:
  2183 ;;		line 21 in file "EAB_InterruptHandler.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		None
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;Total ram usage:       17 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		Interrupt level 1
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	intcodelo
  2212  000018                     __pintcodelo:
  2213                           	opt stack 0
  2214  000018                     _LowPriority_InterruptHandler:
  2215                           	opt stack 27
  2216                           
  2217                           ;incstack = 0
  2218  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2219  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2220  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2221  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2222  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2223  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2224  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2225  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2226  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2227  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2228  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2229  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2230  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2231  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2232  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2233  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2234  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2235  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2236  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2237  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2238  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2239  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2240  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2241  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2242  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2243  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2244  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2245  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2246  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2247  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2248  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2249  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2250  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2251  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2252  0000A0  0010               	retfie	
  2253  0000A2                     __end_of_LowPriority_InterruptHandler:
  2254                           	opt stack 0
  2255                           tosu	equ	0xFFF
  2256                           tosh	equ	0xFFE
  2257                           tosl	equ	0xFFD
  2258                           pclatu	equ	0xFFB
  2259                           pclath	equ	0xFFA
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           postinc0	equ	0xFEE
  2267                           fsr0h	equ	0xFEA
  2268                           fsr0l	equ	0xFE9
  2269                           wreg	equ	0xFE8
  2270                           postdec1	equ	0xFE5
  2271                           fsr1h	equ	0xFE2
  2272                           fsr1l	equ	0xFE1
  2273                           bsr	equ	0xFE0
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _HighPriority_InterruptHandler *****************
  2279 ;; Defined at:
  2280 ;;		line 14 in file "EAB_InterruptHandler.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;		None               void
  2287 ;; Registers used:
  2288 ;;		None
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:       14 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		Interrupt level 2
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	intcode
  2308  000008                     __pintcode:
  2309                           	opt stack 0
  2310  000008                     _HighPriority_InterruptHandler:
  2311                           	opt stack 27
  2312                           
  2313                           ;incstack = 0
  2314  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  2315  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  2316  000010  EF14  F00B         	goto	int_func
  2317                           tosu	equ	0xFFF
  2318                           tosh	equ	0xFFE
  2319                           tosl	equ	0xFFD
  2320                           pclatu	equ	0xFFB
  2321                           pclath	equ	0xFFA
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           prodh	equ	0xFF4
  2327                           prodl	equ	0xFF3
  2328                           postinc0	equ	0xFEE
  2329                           fsr0h	equ	0xFEA
  2330                           fsr0l	equ	0xFE9
  2331                           wreg	equ	0xFE8
  2332                           postdec1	equ	0xFE5
  2333                           fsr1h	equ	0xFE2
  2334                           fsr1l	equ	0xFE1
  2335                           bsr	equ	0xFE0
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340                           	psect	intcode_body
  2341  001628                     __pintcode_body:
  2342                           	opt stack 27
  2343  001628                     int_func:
  2344                           	opt stack 27
  2345  001628  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  2346  00162C  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  2347  001630  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  2348  001634  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  2349  001638  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  2350  00163C  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  2351  001640  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  2352  001644  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  2353  001648  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  2354  00164C  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  2355  001650  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  2356  001654  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  2357  001658  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  2358  00165C  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  2359  001660  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  2360  001664  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  2361  001668  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  2362  00166C  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  2363  001670  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  2364  001674  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  2365  001678  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  2366  00167C  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  2367  001680  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  2368  001684  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  2369  001688  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  2370  00168C  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  2371  001690  0011               	retfie		f
  2372  001692                     __end_of_HighPriority_InterruptHandler:
  2373                           	opt stack 0
  2374                           tosu	equ	0xFFF
  2375                           tosh	equ	0xFFE
  2376                           tosl	equ	0xFFD
  2377                           pclatu	equ	0xFFB
  2378                           pclath	equ	0xFFA
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           postinc0	equ	0xFEE
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           bsr	equ	0xFE0
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           tosu	equ	0xFFF
  2397                           tosh	equ	0xFFE
  2398                           tosl	equ	0xFFD
  2399                           pclatu	equ	0xFFB
  2400                           pclath	equ	0xFFA
  2401                           tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           prodh	equ	0xFF4
  2406                           prodl	equ	0xFF3
  2407                           postinc0	equ	0xFEE
  2408                           fsr0h	equ	0xFEA
  2409                           fsr0l	equ	0xFE9
  2410                           wreg	equ	0xFE8
  2411                           postdec1	equ	0xFE5
  2412                           fsr1h	equ	0xFE2
  2413                           fsr1l	equ	0xFE1
  2414                           bsr	equ	0xFE0
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419                           	psect	rparam
  2420  0000                     tosu	equ	0xFFF
  2421                           tosh	equ	0xFFE
  2422                           tosl	equ	0xFFD
  2423                           pclatu	equ	0xFFB
  2424                           pclath	equ	0xFFA
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           postinc0	equ	0xFEE
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           bsr	equ	0xFE0
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        57
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      63
    BANK0           160     33      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S132$2$0	PTR unsigned char  size(2) Largest target is 0

    S132$3$0	PTR unsigned char  size(2) Largest target is 0

    S1877$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S1877$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    S1831$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S1831$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S1831$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S1831$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S1831$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S1831$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S242$ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    ADC.ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    S242$SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    ADC.SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    S242$Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    ADC.Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    S132$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S132$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S132$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S132$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S132$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S132$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S85$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S85$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S85$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S85$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv
    ___aldiv->_GetFreq

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3566
                                             24 BANK0      9     9      0
                              _Open1 *
                              _Open2 *
                           _Open_adc *
                           _ReadData *
                          _SendByte1 *
                          _SendByte2 *
                         _SetChannel *
                       _SetFreq_8MHZ *
                          _SetTimer2 *
 ---------------------------------------------------------------------------------
 (1) _SetTimer2                                            4     2      2     152
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetChannel                                           2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SendByte2                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte1                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             6     4      2      23
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Open_adc                                             6     6      0     996
                                              6 BANK0      6     6      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4    1122
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4    1068
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     907
                                             35 COMRAM     9     1      8
                                              0 BANK0      6     6      0
                            _GetFreq (ARG) *
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open2 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open_adc *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _ReadData *
   _SendByte1 *
   _SendByte2 *
   _SetChannel *
   _SetFreq_8MHZ *
   _SetTimer2 *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      49       5       45.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      12        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon May 05 16:14:08 2014

                                    l28 121A                                      bsr 000FE0  
                                   l240 17B4                                     l246 17C2  
                                   _ADC 0082                                     _PR2 000FBB  
                                   u708 113A                                     u709 1152  
                                   u718 115E                                     u719 1178  
                                   u728 117C                                     u825 15A0  
                                   u818 154E                                     u738 1198  
                                   u819 1566                                     u739 11B0  
                                   u748 11D8                                     u845 1244  
                                   u749 11F6                                     u758 11FA  
                                   u855 127C                                     u759 1218  
                                   u688 1094                                     u689 10AC  
                                   u778 1370                                     u698 10C8  
                                   u795 14B6                                     u779 1388  
                                   u699 111C                                     u788 1464  
                                   u789 147C                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                      _EnableRx1interrupt 000000  
                          __CFG_LVP$OFF 000000                          _TIMER0_130mSec 101F  
                                  l1901 1330                                    l1905 135A  
                                  l1781 13E0                                    l1757 1194  
                                  l1783 13E8                                    l1775 13C8  
                                  l1791 1438                                    l1873 1264  
                                  l1785 13F0                                    l1777 13D0  
                                  l1779 13D8                                    l1885 12CC  
                                  l1789 1402                                    l1887 12DC  
                                  l1879 1298                                    l1897 131E  
                                  l1889 12E0                      _EnableRx2interrupt 000000  
                        _TIMER2_100usec 1033                                    _main 1070  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                 __end_of_TIMER0_16mSec 105A                                    pclat 000FFA  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00A2                         __end_of_GetFreq 179E  
                          _BAUDCON1bits 000FB8                            _BAUDCON2bits 000F70  
                       __end_of___aldiv 136C                                   ?_main 0001  
                                 _T0CON 000FD5                                   _T2CON 000FBA  
                        __CFG_DEBUG$OFF 000000                  __end_of_TIMER0_130mSec 1029  
                                 _Open1 1460                                   _Open2 154A  
                __end_of_TIMER2_100usec 103D                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                       __initialization 1692                            __end_of_main 1220  
                     SetChannel@channel 0021                             Open1@BRGval 009E  
                      __end_of_ReadData 1772                                  ??_main 00A0  
                      __end_of_Open_adc 1460                           __activetblptr 000003  
                 _SetTimer0_130milliSec 000000              __end_of_TIMER2_PR2_100usec 1063  
                            _SetChannel 1772                                  ?_Open1 008E  
                                ?_Open2 008E                              _SendArray1 000000  
                            _SendArray2 000000                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                                  _RC1REG 000FAE  
                                _RC2REG 000F74                          __CFG_WDTEN$OFF 000000  
                                _OSCCON 000FD3                               ??_GetFreq 0024  
                                _SPBRG1 000FAF                                  _SPBRG2 000F75  
                                _TX1REG 000FAD                                  _TX2REG 000F73  
                            _Oscillator 0060                                  _Timer0 1001  
                                _Timer1 1069                                  _Timer2 1010  
                    __size_of_SendByte1 000E                      __size_of_SendByte2 000E  
                             ??___aldiv 002C                      __size_of_SetTimer2 002A  
                         ?_SetFreq_8MHZ 0001                    _SetTimer0_16milliSec 000000  
                          __pdataCOMRAM 002D                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                              __accesstop 0060  
               __end_of__initialization 16D6                   _SetTimer2_100microSec 000000  
                        __pcstackCOMRAM 0001                           __end_of_Open1 154A  
                         __end_of_Open2 1628                            __pidataBANK0 1706  
                        ??_SetFreq_8MHZ 0020                             ?_SetChannel 0001  
                               ??_Open1 0092                                 ??_Open2 0092  
                       ReadData@ADCdata 0024                       __end_of_SendByte1 17BE  
                     __end_of_SendByte2 17CC                             _PinFunction 000F38  
                     __end_of_SetTimer2 1706                               ?_ReadData 0020  
                            _delayCount 003E                               ?_Open_adc 0001  
                         _SetFreq_32MHZ 000000                           _SetFreq_16MHZ 000000  
 __end_of_HighPriority_InterruptHandler 1692  __size_of_HighPriority_InterruptHandler 168A  
         _HighPriority_InterruptHandler 0008                           _SetFreq_64MHZ 000000  
                           _SendString1 000000                             _SendString2 000000  
                               _SPBRGH1 000FB0                                 _SPBRGH2 000F76  
                      _TIMER2_PR2_1msec 1047                              ??_ReadData 0022  
                               _GetFreq 178C                                 _OscFreq 0039  
                            ??_Open_adc 008E                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 002D  
                               _Serial2 0076                     __size_of_SetChannel 001A  
                               ___aldiv 1220                            __psmallconst 1000  
                               __pcinit 1692                                 __ramtop 1000  
                               __ptext0 1070                                 __ptext1 16DC  
                               __ptext2 172E                                 __ptext3 1772  
                               __ptext4 17B0                                 __ptext5 17BE  
                               __ptext6 1750                                 __ptext7 136C  
                               __ptext8 1460                                 __ptext9 154A  
                             _T0CONbits 000FD5                               _T1CONbits 000FCD  
                             _T2CONbits 000FBA                        ___aldiv@dividend 0024  
                               main@LSB 00A6                                 main@MSB 00A5  
                        __pintcode_body 1628                    end_of_initialization 16D6  
                  __end_of_SetFreq_8MHZ 1750                                 int_func 1628  
                    _TIMER2_PR2_100usec 105A                        ___aldiv@quotient 008A  
                               postdec1 000FE5                                 postinc0 000FEE  
  __end_of_LowPriority_InterruptHandler 00A2   __size_of_LowPriority_InterruptHandler 008A  
          _LowPriority_InterruptHandler 0018                        __CFG_FOSC$INTIO7 000000  
        ?_HighPriority_InterruptHandler 0001                           _TIMER0_16mSec 1051  
                  __end_of_TIMER0_1mSec 1069                    __end_of_TIMER2_1msec 1047  
                        __end_of_Timer0 1010                          __end_of_Timer1 106E  
                        __end_of_Timer2 101F                               Open1@freq 009A  
                             Open2@freq 009A                               Open2@temp 009E  
                         __pidataCOMRAM 179E           ?_LowPriority_InterruptHandler 0001  
                          ??_SetChannel 0020                     start_initialization 1692  
                             _ReadByte1 000000                               _ReadByte2 000000  
                             _SendByte1 17B0                               _SendByte2 17BE  
                          _PinDirection 000F92                            Open_adc@adcs 0093  
                             _SetTimer0 000000                               _SetTimer1 000000  
                             _SetTimer2 16DC                            Open_adc@freq 0092  
                     __size_of_ReadData 0022                               _Timer0Int 000000  
                             _Timer1Int 000000                               _Timer2Int 000000  
                         Open1@BaudRate 008E                      __end_of_SetChannel 178C  
                     __size_of_Open_adc 00F4                __end_of_TIMER2_PR2_1msec 1051  
                    _SetTimer0_1millSec 000000                             __pdataBANK0 0060  
                         Open2@BaudRate 008E                      _SetTimer2_1millSec 000000  
                           __pbssCOMRAM 003E                   __size_of_SetFreq_8MHZ 0022  
                         __pcstackBANK0 0088                            _OscFreqIndex 003D  
                              ?_GetFreq 0020                              ?_SendByte1 0001  
                            ?_SendByte2 0001                              ?_SetTimer2 0020  
                             __pintcode 0008                                ?___aldiv 0024  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 172E                             __smallconst 1000  
                        __size_of_Open1 00EA                          __size_of_Open2 00DE  
        ??_LowPriority_InterruptHandler 0001                          _SetFreq_250KHZ 000000  
                        _SetFreq_500KHZ 000000                         ___aldiv@divisor 0028  
                       ___aldiv@counter 0088                                _IPR1bits 000F9F  
                              _PIE1bits 000F9D                                _IPR3bits 000FA5  
                              _PIE3bits 000FA3                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4                                _RCONbits 000FD0  
                       SetTimer2@period 0021                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                   __end_of_TIMER0_1Sec 1033                            _TIMER0_1mSec 1063  
                          _TIMER2_1msec 103D                               copy_data0 16AA  
                             copy_data1 16CA                                _ReadData 1750  
                           ??_SendByte1 0020                             ??_SendByte2 0020  
                      __size_of_GetFreq 0012                             ??_SetTimer2 0022  
                              _Open_adc 136C                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                      __size_of___aldiv 014C                                __ptext10 1220  
                              __ptext11 178C                     SetTimer2@postscalar 0020  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 01B0                             _TIMER0_1Sec 1029  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                    SetTimer2@prescalar 0023                          _SetTimer0_1Sec 000000  
                              intlevel1 0000                                intlevel2 0000  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F71  
                            _OSCCONbits 000FD3                            main@ADCvalue 00A7  
                          ___aldiv@sign 0089                           SendByte1@Data 0020  
                         SendByte2@Data 0020  
