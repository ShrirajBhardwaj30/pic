

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Apr 23 11:48:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    26  0000                     
    27 ;; Function _SetFreq_250KHZ is unused but had its address taken
    28  0000                     
    29 ;; Function _SetFreq_500KHZ is unused but had its address taken
    30  0000                     
    31 ;; Function _SetFreq_1MHZ is unused but had its address taken
    32  0000                     
    33 ;; Function _SetFreq_2MHZ is unused but had its address taken
    34  0000                     
    35 ;; Function _SetFreq_4MHZ is unused but had its address taken
    36  0000                     
    37 ;; Function _SetFreq_16MHZ is unused but had its address taken
    38  0000                     
    39 ;; Function _SetFreq_32MHZ is unused but had its address taken
    40  0000                     
    41 ;; Function _SetFreq_64MHZ is unused but had its address taken
    42  0000                     
    43 ;; Function _SendByte1 is unused but had its address taken
    44  0000                     
    45 ;; Function _SendByte2 is unused but had its address taken
    46  0000                     
    47 ;; Function _SendArray1 is unused but had its address taken
    48  0000                     
    49 ;; Function _SendArray2 is unused but had its address taken
    50  0000                     
    51 ;; Function _SendString1 is unused but had its address taken
    52  0000                     
    53 ;; Function _SendString2 is unused but had its address taken
    54  0000                     
    55 ;; Function _ReadByte1 is unused but had its address taken
    56  0000                     
    57 ;; Function _ReadByte2 is unused but had its address taken
    58  0000                     
    59 ;; Function _EnableRx1interrupt is unused but had its address taken
    60  0000                     
    61 ;; Function _EnableRx2interrupt is unused but had its address taken
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0005C0                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _Serial1
    68  0005C0  0282               	dw	_Open1& (0+65535)
    69  0005C2  0000               	dw	0
    70  0005C4  0000               	dw	0
    71  0005C6  0000               	dw	0
    72  0005C8  0000               	dw	0
    73  0005CA  0000               	dw	0
    74                           
    75                           ;initializer for _Serial2
    76  0005CC  036E               	dw	_Open2& (0+65535)
    77  0005CE  0000               	dw	0
    78  0005D0  0000               	dw	0
    79  0005D2  0000               	dw	0
    80  0005D4  0000               	dw	0
    81  0005D6  0000               	dw	0
    82                           
    83                           ;initializer for _OscFreq
    84  0005D8  4240               	dw	16960
    85  0005DA  000F               	dw	15
    86                           
    87                           ;initializer for _OscFreqIndex
    88  0005DC  03                 	db	3
    89                           
    90                           	psect	idataBANK0
    91  0005DD                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _Oscillator
    95  0005DD  0000               	dw	0
    96  0005DF  0000               	dw	0
    97  0005E1  0000               	dw	0
    98  0005E3  0000               	dw	0
    99  0005E5  0000               	dw	0
   100  0005E7  0000               	dw	0
   101  0005E9  059E               	dw	_SetFreq_8MHZ& (0+65535)
   102  0005EB  0000               	dw	0
   103  0005ED  0000               	dw	0
   104  0005EF  0000               	dw	0
   105  0005F1  05F4               	dw	_GetFreq& (0+65535)
   106  0000                     _PinDirection	set	3986
   107  0000                     _PinFunction	set	3896
   108  0000                     _BAUDCON1bits	set	4024
   109  0000                     _BAUDCON2bits	set	3952
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR1bits	set	3999
   112  0000                     _IPR3bits	set	4005
   113  0000                     _OSCCON	set	4051
   114  0000                     _OSCCON2bits	set	4050
   115  0000                     _OSCCONbits	set	4051
   116  0000                     _OSCTUNEbits	set	3995
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIE3bits	set	4003
   119  0000                     _PIR1bits	set	3998
   120  0000                     _PIR3bits	set	4004
   121  0000                     _RC1REG	set	4014
   122  0000                     _RC2REG	set	3956
   123  0000                     _RCONbits	set	4048
   124  0000                     _RCSTA1bits	set	4011
   125  0000                     _RCSTA2bits	set	3953
   126  0000                     _SPBRG1	set	4015
   127  0000                     _SPBRG2	set	3957
   128  0000                     _SPBRGH1	set	4016
   129  0000                     _SPBRGH2	set	3958
   130  0000                     _TX1REG	set	4013
   131  0000                     _TX2REG	set	3955
   132  0000                     _TXSTA1bits	set	4012
   133  0000                     _TXSTA2bits	set	3954
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  000550                     __pcinit:
   139                           	opt stack 0
   140  000550                     start_initialization:
   141                           	opt stack 0
   142  000550                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to COMRAM (2 bytes)
   146  000550  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   147  000552  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   148                           
   149                           ; Initialize objects allocated to BANK0 (22 bytes)
   150                           ; load TBLPTR registers with __pidataBANK0
   151  000554  0EDD               	movlw	low __pidataBANK0
   152  000556  6EF6               	movwf	tblptrl,c
   153  000558  0E05               	movlw	high __pidataBANK0
   154  00055A  6EF7               	movwf	tblptrh,c
   155  00055C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   156  00055E  6EF8               	movwf	tblptru,c
   157  000560  EE00  F080         	lfsr	0,__pdataBANK0
   158  000564  EE10 F016          	lfsr	1,22
   159  000568                     copy_data0:
   160  000568  0009               	tblrd		*+
   161  00056A  CFF5 FFEE          	movff	tablat,postinc0
   162  00056E  50E5               	movf	postdec1,w,c
   163  000570  50E1               	movf	fsr1l,w,c
   164  000572  E1FA               	bnz	copy_data0
   165                           
   166                           ; Initialize objects allocated to COMRAM (29 bytes)
   167                           ; load TBLPTR registers with __pidataCOMRAM
   168  000574  0EC0               	movlw	low __pidataCOMRAM
   169  000576  6EF6               	movwf	tblptrl,c
   170  000578  0E05               	movlw	high __pidataCOMRAM
   171  00057A  6EF7               	movwf	tblptrh,c
   172  00057C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   173  00057E  6EF8               	movwf	tblptru,c
   174  000580  EE00  F021         	lfsr	0,__pdataCOMRAM
   175  000584  EE10 F01D          	lfsr	1,29
   176  000588                     copy_data1:
   177  000588  0009               	tblrd		*+
   178  00058A  CFF5 FFEE          	movff	tablat,postinc0
   179  00058E  50E5               	movf	postdec1,w,c
   180  000590  50E1               	movf	fsr1l,w,c
   181  000592  E1FA               	bnz	copy_data1
   182  000594                     end_of_initialization:
   183                           	opt stack 0
   184  000594                     __end_of__initialization:
   185                           	opt stack 0
   186  000594  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  000596  6EF8               	movwf	tblptru,c
   188  000598  0100               	movlb	0
   189  00059A  EF27  F002         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	bssCOMRAM
   199  00003E                     __pbssCOMRAM:
   200                           	opt stack 0
   201  00003E                     _delayCount:
   202                           	opt stack 0
   203  00003E                     	ds	2
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           postdec1	equ	0xFE5
   210                           fsr1l	equ	0xFE1
   211                           
   212                           	psect	dataCOMRAM
   213  000021                     __pdataCOMRAM:
   214                           	opt stack 0
   215  000021                     _Serial1:
   216                           	opt stack 0
   217  000021                     	ds	12
   218  00002D                     _Serial2:
   219                           	opt stack 0
   220  00002D                     	ds	12
   221  000039                     _OscFreq:
   222                           	opt stack 0
   223  000039                     	ds	4
   224  00003D                     _OscFreqIndex:
   225                           	opt stack 0
   226  00003D                     	ds	1
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	dataBANK0
   236  000080                     __pdataBANK0:
   237                           	opt stack 0
   238  000080                     _Oscillator:
   239                           	opt stack 0
   240  000080                     	ds	22
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	cstackBANK0
   250  000060                     __pcstackBANK0:
   251                           	opt stack 0
   252  000060                     ?_GetFreq:
   253                           	opt stack 0
   254  000060                     ?___aldiv:
   255                           	opt stack 0
   256  000060                     ___aldiv@dividend:
   257                           	opt stack 0
   258                           
   259                           ; 4 bytes @ 0x0
   260  000060                     	ds	4
   261  000064                     ___aldiv@divisor:
   262                           	opt stack 0
   263                           
   264                           ; 4 bytes @ 0x4
   265  000064                     	ds	4
   266  000068                     ___aldiv@counter:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x8
   270  000068                     	ds	1
   271  000069                     ___aldiv@sign:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x9
   275  000069                     	ds	1
   276  00006A                     ___aldiv@quotient:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0xA
   280  00006A                     	ds	4
   281  00006E                     Open1@BaudRate:
   282                           	opt stack 0
   283  00006E                     Open2@BaudRate:
   284                           	opt stack 0
   285                           
   286                           ; 4 bytes @ 0xE
   287  00006E                     	ds	4
   288  000072                     ??_Open1:
   289  000072                     ??_Open2:
   290                           
   291                           ; 0 bytes @ 0x12
   292  000072                     	ds	8
   293  00007A                     Open1@freq:
   294                           	opt stack 0
   295  00007A                     Open2@freq:
   296                           	opt stack 0
   297                           
   298                           ; 4 bytes @ 0x1A
   299  00007A                     	ds	4
   300  00007E                     Open1@BRGval:
   301                           	opt stack 0
   302  00007E                     Open2@temp:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x1E
   306  00007E                     	ds	2
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	cstackCOMRAM
   316  000001                     __pcstackCOMRAM:
   317                           	opt stack 0
   318  000001                     ??_LowPriority_InterruptHandler:
   319  000001                     
   320                           ; 1 bytes @ 0x0
   321  000001                     	ds	17
   322  000012                     ??_HighPriority_InterruptHandler:
   323                           
   324                           ; 0 bytes @ 0x11
   325  000012                     	ds	14
   326  000020                     ??_SetFreq_8MHZ:
   327  000020                     ??___aldiv:
   328                           
   329                           ; 0 bytes @ 0x1F
   330  000020                     	ds	1
   331  000021                     tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           ; 0 bytes @ 0x20
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 21 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;		None               void
   352 ;; Registers used:
   353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called:    4
   365 ;; This function calls:
   366 ;;		_Open1
   367 ;;		_Open2
   368 ;;		_SetFreq_8MHZ
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text0
   375  00044E                     __ptext0:
   376                           	opt stack 0
   377  00044E                     _main:
   378                           	opt stack 27
   379                           
   380                           ;main.c: 25: Oscillator.SetFreq_8MHZ();
   381                           
   382                           ;incstack = 0
   383  00044E  0100               	movlb	0	; () banked
   384  000450  EE20  F08C         	lfsr	2,_Oscillator+12
   385  000454  D801               	call	u508
   386  000456  D00A               	goto	u509
   387  000458                     u508:
   388  000458  0005               	push	
   389  00045A  6EFA               	movwf	pclath,c
   390  00045C  50DE               	movf	postinc2,w,c
   391  00045E  6EFD               	movwf	tosl,c
   392  000460  50DE               	movf	postinc2,w,c
   393  000462  6EFE               	movwf	tosh,c
   394  000464  50F8               	movf	tblptru,w,c
   395  000466  6EFF               	movwf	tosu,c
   396  000468  50FA               	movf	pclath,w,c
   397  00046A  0012               	return		;indir
   398  00046C                     u509:
   399                           
   400                           ;main.c: 27: Serial2.Open(9600);
   401  00046C  0E80               	movlw	128
   402  00046E  0100               	movlb	0	; () banked
   403  000470  0100               	movlb	0	; () banked
   404  000472  6F6E               	movwf	Open2@BaudRate& (0+255),b
   405  000474  0E25               	movlw	37
   406  000476  0100               	movlb	0	; () banked
   407  000478  6F6F               	movwf	(Open2@BaudRate+1)& (0+255),b
   408  00047A  0E00               	movlw	0
   409  00047C  0100               	movlb	0	; () banked
   410  00047E  6F70               	movwf	(Open2@BaudRate+2)& (0+255),b
   411  000480  0E00               	movlw	0
   412  000482  0100               	movlb	0	; () banked
   413  000484  6F71               	movwf	(Open2@BaudRate+3)& (0+255),b
   414  000486  D801               	call	u518
   415  000488  D00A               	goto	u519
   416  00048A                     u518:
   417  00048A  0005               	push	
   418  00048C  6EFA               	movwf	pclath,c
   419  00048E  502D               	movf	_Serial2,w,c
   420  000490  6EFD               	movwf	tosl,c
   421  000492  502E               	movf	_Serial2+1,w,c
   422  000494  6EFE               	movwf	tosh,c
   423  000496  50F8               	movf	tblptru,w,c
   424  000498  6EFF               	movwf	tosu,c
   425  00049A  50FA               	movf	pclath,w,c
   426  00049C  0012               	return		;indir
   427  00049E                     u519:
   428                           
   429                           ;main.c: 28: Serial1.Open(9600);
   430  00049E  0E80               	movlw	128
   431  0004A0  0100               	movlb	0	; () banked
   432  0004A2  0100               	movlb	0	; () banked
   433  0004A4  6F6E               	movwf	Open2@BaudRate& (0+255),b
   434  0004A6  0E25               	movlw	37
   435  0004A8  0100               	movlb	0	; () banked
   436  0004AA  6F6F               	movwf	(Open2@BaudRate+1)& (0+255),b
   437  0004AC  0E00               	movlw	0
   438  0004AE  0100               	movlb	0	; () banked
   439  0004B0  6F70               	movwf	(Open2@BaudRate+2)& (0+255),b
   440  0004B2  0E00               	movlw	0
   441  0004B4  0100               	movlb	0	; () banked
   442  0004B6  6F71               	movwf	(Open2@BaudRate+3)& (0+255),b
   443  0004B8  D801               	call	u528
   444  0004BA  D00A               	goto	l1315
   445  0004BC                     u528:
   446  0004BC  0005               	push	
   447  0004BE  6EFA               	movwf	pclath,c
   448  0004C0  5021               	movf	_Serial1,w,c
   449  0004C2  6EFD               	movwf	tosl,c
   450  0004C4  5022               	movf	_Serial1+1,w,c
   451  0004C6  6EFE               	movwf	tosh,c
   452  0004C8  50F8               	movf	tblptru,w,c
   453  0004CA  6EFF               	movwf	tosu,c
   454  0004CC  50FA               	movf	pclath,w,c
   455  0004CE  0012               	return		;indir
   456  0004D0                     l1315:
   457                           
   458                           ;main.c: 32: {
   459                           ;main.c: 34: if(PIR3bits.RC2IF)
   460  0004D0  AAA4               	btfss	4004,5,c	;volatile
   461  0004D2  D003               	goto	l32
   462                           
   463                           ;main.c: 35: {
   464                           ;main.c: 36: (TX1REG = RC2REG);
   465  0004D4  CF74 FFAD          	movff	3956,4013	;volatile
   466                           
   467                           ;main.c: 37: PIR3bits.RC2IF=0;
   468  0004D8  9AA4               	bcf	4004,5,c	;volatile
   469  0004DA                     l32:
   470                           
   471                           ;main.c: 38: }
   472                           ;main.c: 39: if(PIR1bits.RC1IF)
   473  0004DA  AA9E               	btfss	3998,5,c	;volatile
   474  0004DC  D7F9               	goto	l1315
   475                           
   476                           ;main.c: 40: {
   477                           ;main.c: 41: (TX2REG = RC1REG);
   478  0004DE  CFAE FF73          	movff	4014,3955	;volatile
   479                           
   480                           ;main.c: 42: PIR1bits.RC1IF=0;
   481  0004E2  9A9E               	bcf	3998,5,c	;volatile
   482  0004E4  D7F5               	goto	l1315
   483  0004E6                     __end_of_main:
   484                           	opt stack 0
   485                           tosu	equ	0xFFF
   486                           tosh	equ	0xFFE
   487                           tosl	equ	0xFFD
   488                           pclath	equ	0xFFA
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           postinc2	equ	0xFDE
   497                           
   498 ;; *************** function _SetFreq_8MHZ *****************
   499 ;; Defined at:
   500 ;;		line 85 in file "EAB_Oscillator.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      unsigned char 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    2
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text1
   529  00059E                     __ptext1:
   530                           	opt stack 0
   531  00059E                     _SetFreq_8MHZ:
   532                           	opt stack 28
   533                           
   534                           ;incstack = 0
   535  00059E  50D3               	movf	4051,w,c	;volatile
   536  0005A0  0B8C               	andlw	140
   537  0005A2  0962               	iorlw	98
   538  0005A4  6ED3               	movwf	4051,c	;volatile
   539  0005A6  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   540  0005A8  0E06               	movlw	6
   541  0005AA  6E3D               	movwf	_OscFreqIndex,c
   542  0005AC  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   543  0005AE  0E00               	movlw	0
   544  0005B0  6E39               	movwf	_OscFreq,c
   545  0005B2  0E12               	movlw	18
   546  0005B4  6E3A               	movwf	_OscFreq+1,c
   547  0005B6  0E7A               	movlw	122
   548  0005B8  6E3B               	movwf	_OscFreq+2,c
   549  0005BA  0E00               	movlw	0
   550  0005BC  6E3C               	movwf	_OscFreq+3,c
   551  0005BE  0012               	return	
   552  0005C0                     __end_of_SetFreq_8MHZ:
   553                           	opt stack 0
   554                           tosu	equ	0xFFF
   555                           tosh	equ	0xFFE
   556                           tosl	equ	0xFFD
   557                           pclath	equ	0xFFA
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           postinc2	equ	0xFDE
   566                           
   567 ;; *************** function _Open1 *****************
   568 ;; Defined at:
   569 ;;		line 33 in file "EAB_Serial.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  BaudRate        4   14[BANK0 ] long 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  freq            4   26[BANK0 ] long 
   574 ;;  BRGval          2   30[BANK0 ] int 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      unsigned char 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;Total ram usage:       18 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    3
   591 ;; This function calls:
   592 ;;		_GetFreq
   593 ;;		___aldiv
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text2
   600  000282                     __ptext2:
   601                           	opt stack 0
   602  000282                     _Open1:
   603                           	opt stack 27
   604                           
   605                           ;incstack = 0
   606  000282  0100               	movlb	0	; () banked
   607  000284  EE20  F094         	lfsr	2,_Oscillator+20
   608  000288  D801               	call	u558
   609  00028A  D00A               	goto	u559
   610  00028C                     u558:
   611  00028C  0005               	push	
   612  00028E  6EFA               	movwf	pclath,c
   613  000290  50DE               	movf	postinc2,w,c
   614  000292  6EFD               	movwf	tosl,c
   615  000294  50DE               	movf	postinc2,w,c
   616  000296  6EFE               	movwf	tosh,c
   617  000298  50F8               	movf	tblptru,w,c
   618  00029A  6EFF               	movwf	tosu,c
   619  00029C  50FA               	movf	pclath,w,c
   620  00029E  0012               	return		;indir
   621  0002A0                     u559:
   622  0002A0  C060  F07A         	movff	?_GetFreq,Open1@freq
   623  0002A4  C061  F07B         	movff	?_GetFreq+1,Open1@freq+1
   624  0002A8  C062  F07C         	movff	?_GetFreq+2,Open1@freq+2
   625  0002AC  C063  F07D         	movff	?_GetFreq+3,Open1@freq+3
   626  0002B0  C07A  F060         	movff	Open1@freq,___aldiv@dividend
   627  0002B4  C07B  F061         	movff	Open1@freq+1,___aldiv@dividend+1
   628  0002B8  C07C  F062         	movff	Open1@freq+2,___aldiv@dividend+2
   629  0002BC  C07D  F063         	movff	Open1@freq+3,___aldiv@dividend+3
   630  0002C0  0100               	movlb	0	; () banked
   631  0002C2  C06E  F072         	movff	Open1@BaudRate,??_Open1
   632  0002C6  0100               	movlb	0	; () banked
   633  0002C8  C06F  F073         	movff	Open1@BaudRate+1,??_Open1+1
   634  0002CC  0100               	movlb	0	; () banked
   635  0002CE  C070  F074         	movff	Open1@BaudRate+2,??_Open1+2
   636  0002D2  0100               	movlb	0	; () banked
   637  0002D4  C071  F075         	movff	Open1@BaudRate+3,??_Open1+3
   638  0002D8  0E02               	movlw	2
   639  0002DA                     u565:
   640  0002DA  90D8               	bcf	status,0,c
   641  0002DC  0100               	movlb	0	; () banked
   642  0002DE  3772               	rlcf	??_Open1& (0+255),f,b
   643  0002E0  3773               	rlcf	(??_Open1+1)& (0+255),f,b
   644  0002E2  3774               	rlcf	(??_Open1+2)& (0+255),f,b
   645  0002E4  3775               	rlcf	(??_Open1+3)& (0+255),f,b
   646  0002E6  2EE8               	decfsz	wreg,f,c
   647  0002E8  D7F8               	goto	u565
   648  0002EA  C072  F064         	movff	??_Open1,___aldiv@divisor
   649  0002EE  C073  F065         	movff	??_Open1+1,___aldiv@divisor+1
   650  0002F2  C074  F066         	movff	??_Open1+2,___aldiv@divisor+2
   651  0002F6  C075  F067         	movff	??_Open1+3,___aldiv@divisor+3
   652  0002FA  EC53  F000         	call	___aldiv	;wreg free
   653  0002FE  C060  F076         	movff	?___aldiv,??_Open1+4
   654  000302  C061  F077         	movff	?___aldiv+1,??_Open1+5
   655  000306  C062  F078         	movff	?___aldiv+2,??_Open1+6
   656  00030A  C063  F079         	movff	?___aldiv+3,??_Open1+7
   657  00030E  0EFF               	movlw	255
   658  000310  0100               	movlb	0	; () banked
   659  000312  2576               	addwf	(??_Open1+4)& (0+255),w,b
   660  000314  0100               	movlb	0	; () banked
   661  000316  0100               	movlb	0	; () banked
   662  000318  6F7E               	movwf	Open1@BRGval& (0+255),b
   663  00031A  0EFF               	movlw	255
   664  00031C  0100               	movlb	0	; () banked
   665  00031E  2177               	addwfc	(??_Open1+5)& (0+255),w,b
   666  000320  0100               	movlb	0	; () banked
   667  000322  6F7F               	movwf	(Open1@BRGval+1)& (0+255),b
   668                           
   669                           ; BSR set to: 0
   670  000324  0100               	movlb	0	; () banked
   671  000326  0100               	movlb	0	; () banked
   672  000328  517F               	movf	(Open1@BRGval+1)& (0+255),w,b
   673  00032A  0A80               	xorlw	128
   674  00032C  0F80               	addlw	-128
   675  00032E  0E01               	movlw	1
   676  000330  B4D8               	btfsc	status,2,c
   677  000332  5D7E               	subwf	Open1@BRGval& (0+255),w,b
   678  000334  A0D8               	btfss	status,0,c
   679  000336  0012               	return	
   680                           
   681                           ; BSR set to: 0
   682  000338  86B8               	bsf	4024,3,c	;volatile
   683  00033A  84AC               	bsf	4012,2,c	;volatile
   684  00033C  98AC               	bcf	4012,4,c	;volatile
   685                           
   686                           ; BSR set to: 0
   687  00033E  0100               	movlb	0	; () banked
   688  000340  C07F  F072         	movff	Open1@BRGval+1,??_Open1
   689  000344  C072  F073         	movff	??_Open1,??_Open1+1
   690  000348  0100               	movlb	0	; () banked
   691  00034A  6B74               	clrf	(??_Open1+2)& (0+255),b
   692  00034C  0100               	movlb	0	; () banked
   693  00034E  5173               	movf	(??_Open1+1)& (0+255),w,b
   694  000350  6EB0               	movwf	4016,c	;volatile
   695                           
   696                           ; BSR set to: 0
   697  000352  C07E  FFAF         	movff	Open1@BRGval,4015	;volatile
   698                           
   699                           ; BSR set to: 0
   700  000356  010F               	movlb	15	; () banked
   701  000358  010F               	movlb	15	; () banked
   702  00035A  9D3A               	bcf	58,6,b	;volatile
   703                           
   704                           ; BSR set to: 15
   705  00035C  010F               	movlb	15	; () banked
   706  00035E  010F               	movlb	15	; () banked
   707  000360  9F3A               	bcf	58,7,b	;volatile
   708                           
   709                           ; BSR set to: 15
   710  000362  8C94               	bsf	3988,6,c	;volatile
   711                           
   712                           ; BSR set to: 15
   713  000364  8E94               	bsf	3988,7,c	;volatile
   714                           
   715                           ; BSR set to: 15
   716  000366  8AAC               	bsf	4012,5,c	;volatile
   717                           
   718                           ; BSR set to: 15
   719  000368  88AB               	bsf	4011,4,c	;volatile
   720                           
   721                           ; BSR set to: 15
   722  00036A  8EAB               	bsf	4011,7,c	;volatile
   723  00036C  0012               	return	
   724  00036E                     __end_of_Open1:
   725                           	opt stack 0
   726                           tosu	equ	0xFFF
   727                           tosh	equ	0xFFE
   728                           tosl	equ	0xFFD
   729                           pclath	equ	0xFFA
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           postinc2	equ	0xFDE
   739                           status	equ	0xFD8
   740                           
   741 ;; *************** function _Open2 *****************
   742 ;; Defined at:
   743 ;;		line 61 in file "EAB_Serial.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  BaudRate        4   14[BANK0 ] long 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  freq            4   26[BANK0 ] long 
   748 ;;  temp            2   30[BANK0 ] int 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      unsigned char 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:       18 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		_GetFreq
   767 ;;		___aldiv
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text3
   774  00036E                     __ptext3:
   775                           	opt stack 0
   776  00036E                     _Open2:
   777                           	opt stack 27
   778                           
   779                           ;incstack = 0
   780  00036E  0100               	movlb	0	; () banked
   781  000370  EE20  F094         	lfsr	2,_Oscillator+20
   782  000374  D801               	call	u588
   783  000376  D00A               	goto	u589
   784  000378                     u588:
   785  000378  0005               	push	
   786  00037A  6EFA               	movwf	pclath,c
   787  00037C  50DE               	movf	postinc2,w,c
   788  00037E  6EFD               	movwf	tosl,c
   789  000380  50DE               	movf	postinc2,w,c
   790  000382  6EFE               	movwf	tosh,c
   791  000384  50F8               	movf	tblptru,w,c
   792  000386  6EFF               	movwf	tosu,c
   793  000388  50FA               	movf	pclath,w,c
   794  00038A  0012               	return		;indir
   795  00038C                     u589:
   796  00038C  C060  F07A         	movff	?_GetFreq,Open2@freq
   797  000390  C061  F07B         	movff	?_GetFreq+1,Open2@freq+1
   798  000394  C062  F07C         	movff	?_GetFreq+2,Open2@freq+2
   799  000398  C063  F07D         	movff	?_GetFreq+3,Open2@freq+3
   800  00039C  C07A  F060         	movff	Open2@freq,___aldiv@dividend
   801  0003A0  C07B  F061         	movff	Open2@freq+1,___aldiv@dividend+1
   802  0003A4  C07C  F062         	movff	Open2@freq+2,___aldiv@dividend+2
   803  0003A8  C07D  F063         	movff	Open2@freq+3,___aldiv@dividend+3
   804  0003AC  0100               	movlb	0	; () banked
   805  0003AE  C06E  F072         	movff	Open2@BaudRate,??_Open2
   806  0003B2  0100               	movlb	0	; () banked
   807  0003B4  C06F  F073         	movff	Open2@BaudRate+1,??_Open2+1
   808  0003B8  0100               	movlb	0	; () banked
   809  0003BA  C070  F074         	movff	Open2@BaudRate+2,??_Open2+2
   810  0003BE  0100               	movlb	0	; () banked
   811  0003C0  C071  F075         	movff	Open2@BaudRate+3,??_Open2+3
   812  0003C4  0E02               	movlw	2
   813  0003C6                     u595:
   814  0003C6  90D8               	bcf	status,0,c
   815  0003C8  0100               	movlb	0	; () banked
   816  0003CA  3772               	rlcf	??_Open2& (0+255),f,b
   817  0003CC  3773               	rlcf	(??_Open2+1)& (0+255),f,b
   818  0003CE  3774               	rlcf	(??_Open2+2)& (0+255),f,b
   819  0003D0  3775               	rlcf	(??_Open2+3)& (0+255),f,b
   820  0003D2  2EE8               	decfsz	wreg,f,c
   821  0003D4  D7F8               	goto	u595
   822  0003D6  C072  F064         	movff	??_Open2,___aldiv@divisor
   823  0003DA  C073  F065         	movff	??_Open2+1,___aldiv@divisor+1
   824  0003DE  C074  F066         	movff	??_Open2+2,___aldiv@divisor+2
   825  0003E2  C075  F067         	movff	??_Open2+3,___aldiv@divisor+3
   826  0003E6  EC53  F000         	call	___aldiv	;wreg free
   827  0003EA  C060  F076         	movff	?___aldiv,??_Open2+4
   828  0003EE  C061  F077         	movff	?___aldiv+1,??_Open2+5
   829  0003F2  C062  F078         	movff	?___aldiv+2,??_Open2+6
   830  0003F6  C063  F079         	movff	?___aldiv+3,??_Open2+7
   831  0003FA  0EFF               	movlw	255
   832  0003FC  0100               	movlb	0	; () banked
   833  0003FE  2576               	addwf	(??_Open2+4)& (0+255),w,b
   834  000400  0100               	movlb	0	; () banked
   835  000402  0100               	movlb	0	; () banked
   836  000404  6F7E               	movwf	Open2@temp& (0+255),b
   837  000406  0EFF               	movlw	255
   838  000408  0100               	movlb	0	; () banked
   839  00040A  2177               	addwfc	(??_Open2+5)& (0+255),w,b
   840  00040C  0100               	movlb	0	; () banked
   841  00040E  6F7F               	movwf	(Open2@temp+1)& (0+255),b
   842                           
   843                           ; BSR set to: 0
   844  000410  0100               	movlb	0	; () banked
   845  000412  0100               	movlb	0	; () banked
   846  000414  517F               	movf	(Open2@temp+1)& (0+255),w,b
   847  000416  0A80               	xorlw	128
   848  000418  0F80               	addlw	-128
   849  00041A  0E01               	movlw	1
   850  00041C  B4D8               	btfsc	status,2,c
   851  00041E  5D7E               	subwf	Open2@temp& (0+255),w,b
   852  000420  A0D8               	btfss	status,0,c
   853  000422  0012               	return	
   854                           
   855                           ; BSR set to: 0
   856  000424  8670               	bsf	3952,3,c	;volatile
   857  000426  8472               	bsf	3954,2,c	;volatile
   858  000428  9872               	bcf	3954,4,c	;volatile
   859                           
   860                           ; BSR set to: 0
   861  00042A  0100               	movlb	0	; () banked
   862  00042C  C07F  F072         	movff	Open2@temp+1,??_Open2
   863  000430  C072  F073         	movff	??_Open2,??_Open2+1
   864  000434  0100               	movlb	0	; () banked
   865  000436  6B74               	clrf	(??_Open2+2)& (0+255),b
   866  000438  0100               	movlb	0	; () banked
   867  00043A  5173               	movf	(??_Open2+1)& (0+255),w,b
   868  00043C  6E76               	movwf	3958,c	;volatile
   869                           
   870                           ; BSR set to: 0
   871  00043E  C07E  FF75         	movff	Open2@temp,3957	;volatile
   872                           
   873                           ; BSR set to: 0
   874  000442  8C93               	bsf	3987,6,c	;volatile
   875                           
   876                           ; BSR set to: 0
   877  000444  8E93               	bsf	3987,7,c	;volatile
   878                           
   879                           ; BSR set to: 0
   880  000446  8A72               	bsf	3954,5,c	;volatile
   881                           
   882                           ; BSR set to: 0
   883  000448  8871               	bsf	3953,4,c	;volatile
   884                           
   885                           ; BSR set to: 0
   886  00044A  8E71               	bsf	3953,7,c	;volatile
   887  00044C  0012               	return	
   888  00044E                     __end_of_Open2:
   889                           	opt stack 0
   890                           tosu	equ	0xFFF
   891                           tosh	equ	0xFFE
   892                           tosl	equ	0xFFD
   893                           pclath	equ	0xFFA
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           postinc2	equ	0xFDE
   903                           status	equ	0xFD8
   904                           
   905 ;; *************** function ___aldiv *****************
   906 ;; Defined at:
   907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  dividend        4    0[BANK0 ] long 
   910 ;;  divisor         4    4[BANK0 ] long 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  quotient        4   10[BANK0 ] long 
   913 ;;  sign            1    9[BANK0 ] unsigned char 
   914 ;;  counter         1    8[BANK0 ] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  4    0[BANK0 ] long 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:       15 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    2
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_Open1
   935 ;;		_Open2
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text4
   940  0000A6                     __ptext4:
   941                           	opt stack 0
   942  0000A6                     ___aldiv:
   943                           	opt stack 27
   944                           
   945                           ; BSR set to: 0
   946                           ;incstack = 0
   947  0000A6  6E20               	movwf	??___aldiv& (0+255),c
   948  0000A8  0E00               	movlw	0
   949  0000AA  0100               	movlb	0	; () banked
   950  0000AC  0100               	movlb	0	; () banked
   951  0000AE  6F69               	movwf	___aldiv@sign& (0+255),b
   952  0000B0  5020               	movf	??___aldiv& (0+255),w,c
   953                           
   954                           ; BSR set to: 0
   955  0000B2  0100               	movlb	0	; () banked
   956  0000B4  0100               	movlb	0	; () banked
   957  0000B6  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
   958  0000B8  0A80               	xorlw	128
   959  0000BA  0F80               	addlw	128
   960  0000BC  E10B               	bnz	u615
   961  0000BE  0E00               	movlw	0
   962  0000C0  0100               	movlb	0	; () banked
   963  0000C2  5D66               	subwf	(___aldiv@divisor+2)& (0+255),w,b
   964  0000C4  E107               	bnz	u615
   965  0000C6  0E00               	movlw	0
   966  0000C8  0100               	movlb	0	; () banked
   967  0000CA  5D65               	subwf	(___aldiv@divisor+1)& (0+255),w,b
   968  0000CC  E103               	bnz	u615
   969  0000CE  0E00               	movlw	0
   970  0000D0  0100               	movlb	0	; () banked
   971  0000D2  5D64               	subwf	___aldiv@divisor& (0+255),w,b
   972  0000D4                     u615:
   973  0000D4  B0D8               	btfsc	status,0,c
   974  0000D6  D016               	goto	l1387
   975                           
   976                           ; BSR set to: 0
   977  0000D8  0100               	movlb	0	; () banked
   978  0000DA  0100               	movlb	0	; () banked
   979  0000DC  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
   980  0000DE  0100               	movlb	0	; () banked
   981  0000E0  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
   982  0000E2  0100               	movlb	0	; () banked
   983  0000E4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
   984  0000E6  0100               	movlb	0	; () banked
   985  0000E8  6D64               	negf	___aldiv@divisor& (0+255),b
   986  0000EA  0E00               	movlw	0
   987  0000EC  0100               	movlb	0	; () banked
   988  0000EE  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
   989  0000F0  0100               	movlb	0	; () banked
   990  0000F2  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
   991  0000F4  0100               	movlb	0	; () banked
   992  0000F6  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
   993                           
   994                           ; BSR set to: 0
   995  0000F8  6E20               	movwf	??___aldiv& (0+255),c
   996  0000FA  0E01               	movlw	1
   997  0000FC  0100               	movlb	0	; () banked
   998  0000FE  0100               	movlb	0	; () banked
   999  000100  6F69               	movwf	___aldiv@sign& (0+255),b
  1000  000102  5020               	movf	??___aldiv& (0+255),w,c
  1001  000104                     l1387:
  1002                           
  1003                           ; BSR set to: 0
  1004  000104  0100               	movlb	0	; () banked
  1005  000106  0100               	movlb	0	; () banked
  1006  000108  5163               	movf	(___aldiv@dividend+3)& (0+255),w,b
  1007  00010A  0A80               	xorlw	128
  1008  00010C  0F80               	addlw	128
  1009  00010E  E10B               	bnz	u625
  1010  000110  0E00               	movlw	0
  1011  000112  0100               	movlb	0	; () banked
  1012  000114  5D62               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  1013  000116  E107               	bnz	u625
  1014  000118  0E00               	movlw	0
  1015  00011A  0100               	movlb	0	; () banked
  1016  00011C  5D61               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  1017  00011E  E103               	bnz	u625
  1018  000120  0E00               	movlw	0
  1019  000122  0100               	movlb	0	; () banked
  1020  000124  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  1021  000126                     u625:
  1022  000126  B0D8               	btfsc	status,0,c
  1023  000128  D014               	goto	l1393
  1024                           
  1025                           ; BSR set to: 0
  1026  00012A  0100               	movlb	0	; () banked
  1027  00012C  0100               	movlb	0	; () banked
  1028  00012E  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1029  000130  0100               	movlb	0	; () banked
  1030  000132  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1031  000134  0100               	movlb	0	; () banked
  1032  000136  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1033  000138  0100               	movlb	0	; () banked
  1034  00013A  6D60               	negf	___aldiv@dividend& (0+255),b
  1035  00013C  0E00               	movlw	0
  1036  00013E  0100               	movlb	0	; () banked
  1037  000140  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1038  000142  0100               	movlb	0	; () banked
  1039  000144  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1040  000146  0100               	movlb	0	; () banked
  1041  000148  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1042                           
  1043                           ; BSR set to: 0
  1044  00014A  0E01               	movlw	1
  1045  00014C  0100               	movlb	0	; () banked
  1046  00014E  0100               	movlb	0	; () banked
  1047  000150  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  1048  000152                     l1393:
  1049                           
  1050                           ; BSR set to: 0
  1051  000152  0E00               	movlw	0
  1052  000154  0100               	movlb	0	; () banked
  1053  000156  0100               	movlb	0	; () banked
  1054  000158  6F6A               	movwf	___aldiv@quotient& (0+255),b
  1055  00015A  0E00               	movlw	0
  1056  00015C  0100               	movlb	0	; () banked
  1057  00015E  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1058  000160  0E00               	movlw	0
  1059  000162  0100               	movlb	0	; () banked
  1060  000164  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1061  000166  0E00               	movlw	0
  1062  000168  0100               	movlb	0	; () banked
  1063  00016A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1064                           
  1065                           ; BSR set to: 0
  1066  00016C  0100               	movlb	0	; () banked
  1067  00016E  0100               	movlb	0	; () banked
  1068  000170  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1069  000172  1164               	iorwf	___aldiv@divisor& (0+255),w,b
  1070  000174  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1071  000176  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1072  000178  B4D8               	btfsc	status,2,c
  1073  00017A  D065               	goto	l1415
  1074                           
  1075                           ; BSR set to: 0
  1076  00017C  6E20               	movwf	??___aldiv& (0+255),c
  1077  00017E  0E01               	movlw	1
  1078  000180  0100               	movlb	0	; () banked
  1079  000182  0100               	movlb	0	; () banked
  1080  000184  6F68               	movwf	___aldiv@counter& (0+255),b
  1081  000186  5020               	movf	??___aldiv& (0+255),w,c
  1082  000188  D00D               	goto	l1401
  1083  00018A                     l1399:
  1084                           
  1085                           ; BSR set to: 0
  1086  00018A  0100               	movlb	0	; () banked
  1087  00018C  90D8               	bcf	status,0,c
  1088  00018E  0100               	movlb	0	; () banked
  1089  000190  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  1090  000192  0100               	movlb	0	; () banked
  1091  000194  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1092  000196  0100               	movlb	0	; () banked
  1093  000198  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1094  00019A  0100               	movlb	0	; () banked
  1095  00019C  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1096  00019E  0100               	movlb	0	; () banked
  1097  0001A0  0100               	movlb	0	; () banked
  1098  0001A2  2B68               	incf	___aldiv@counter& (0+255),f,b
  1099  0001A4                     l1401:
  1100                           
  1101                           ; BSR set to: 0
  1102  0001A4  0100               	movlb	0	; () banked
  1103  0001A6  0100               	movlb	0	; () banked
  1104  0001A8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1105  0001AA  D7EF               	goto	l1399
  1106  0001AC                     l1403:
  1107                           
  1108                           ; BSR set to: 0
  1109  0001AC  0100               	movlb	0	; () banked
  1110  0001AE  90D8               	bcf	status,0,c
  1111  0001B0  0100               	movlb	0	; () banked
  1112  0001B2  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  1113  0001B4  0100               	movlb	0	; () banked
  1114  0001B6  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1115  0001B8  0100               	movlb	0	; () banked
  1116  0001BA  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1117  0001BC  0100               	movlb	0	; () banked
  1118  0001BE  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1119                           
  1120                           ; BSR set to: 0
  1121  0001C0  0100               	movlb	0	; () banked
  1122  0001C2  0100               	movlb	0	; () banked
  1123  0001C4  5164               	movf	___aldiv@divisor& (0+255),w,b
  1124  0001C6  0100               	movlb	0	; () banked
  1125  0001C8  0100               	movlb	0	; () banked
  1126  0001CA  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  1127  0001CC  0100               	movlb	0	; () banked
  1128  0001CE  0100               	movlb	0	; () banked
  1129  0001D0  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1130  0001D2  0100               	movlb	0	; () banked
  1131  0001D4  0100               	movlb	0	; () banked
  1132  0001D6  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1133  0001D8  0100               	movlb	0	; () banked
  1134  0001DA  0100               	movlb	0	; () banked
  1135  0001DC  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1136  0001DE  0100               	movlb	0	; () banked
  1137  0001E0  0100               	movlb	0	; () banked
  1138  0001E2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1139  0001E4  0100               	movlb	0	; () banked
  1140  0001E6  0100               	movlb	0	; () banked
  1141  0001E8  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1142  0001EA  0100               	movlb	0	; () banked
  1143  0001EC  0100               	movlb	0	; () banked
  1144  0001EE  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1145  0001F0  A0D8               	btfss	status,0,c
  1146  0001F2  D01B               	goto	l1411
  1147                           
  1148                           ; BSR set to: 0
  1149  0001F4  0100               	movlb	0	; () banked
  1150  0001F6  0100               	movlb	0	; () banked
  1151  0001F8  5164               	movf	___aldiv@divisor& (0+255),w,b
  1152  0001FA  0100               	movlb	0	; () banked
  1153  0001FC  0100               	movlb	0	; () banked
  1154  0001FE  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  1155  000200  0100               	movlb	0	; () banked
  1156  000202  0100               	movlb	0	; () banked
  1157  000204  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1158  000206  0100               	movlb	0	; () banked
  1159  000208  0100               	movlb	0	; () banked
  1160  00020A  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1161  00020C  0100               	movlb	0	; () banked
  1162  00020E  0100               	movlb	0	; () banked
  1163  000210  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1164  000212  0100               	movlb	0	; () banked
  1165  000214  0100               	movlb	0	; () banked
  1166  000216  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1167  000218  0100               	movlb	0	; () banked
  1168  00021A  0100               	movlb	0	; () banked
  1169  00021C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1170  00021E  0100               	movlb	0	; () banked
  1171  000220  0100               	movlb	0	; () banked
  1172  000222  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1173                           
  1174                           ; BSR set to: 0
  1175  000224  0100               	movlb	0	; () banked
  1176  000226  0100               	movlb	0	; () banked
  1177  000228  816A               	bsf	___aldiv@quotient& (0+255),0,b
  1178  00022A                     l1411:
  1179                           
  1180                           ; BSR set to: 0
  1181  00022A  0100               	movlb	0	; () banked
  1182  00022C  90D8               	bcf	status,0,c
  1183  00022E  0100               	movlb	0	; () banked
  1184  000230  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1185  000232  0100               	movlb	0	; () banked
  1186  000234  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1187  000236  0100               	movlb	0	; () banked
  1188  000238  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1189  00023A  0100               	movlb	0	; () banked
  1190  00023C  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  1191                           
  1192                           ; BSR set to: 0
  1193  00023E  0100               	movlb	0	; () banked
  1194  000240  0100               	movlb	0	; () banked
  1195  000242  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  1196  000244  D7B3               	goto	l1403
  1197  000246                     l1415:
  1198                           
  1199                           ; BSR set to: 0
  1200  000246  0100               	movlb	0	; () banked
  1201  000248  0100               	movlb	0	; () banked
  1202  00024A  5169               	movf	___aldiv@sign& (0+255),w,b
  1203  00024C  B4D8               	btfsc	status,2,c
  1204  00024E  D010               	goto	l1419
  1205                           
  1206                           ; BSR set to: 0
  1207  000250  0100               	movlb	0	; () banked
  1208  000252  0100               	movlb	0	; () banked
  1209  000254  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1210  000256  0100               	movlb	0	; () banked
  1211  000258  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1212  00025A  0100               	movlb	0	; () banked
  1213  00025C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1214  00025E  0100               	movlb	0	; () banked
  1215  000260  6D6A               	negf	___aldiv@quotient& (0+255),b
  1216  000262  0E00               	movlw	0
  1217  000264  0100               	movlb	0	; () banked
  1218  000266  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1219  000268  0100               	movlb	0	; () banked
  1220  00026A  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1221  00026C  0100               	movlb	0	; () banked
  1222  00026E  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1223  000270                     l1419:
  1224                           
  1225                           ; BSR set to: 0
  1226  000270  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  1227  000274  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  1228  000278  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  1229  00027C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  1230  000280  0012               	return	
  1231  000282                     __end_of___aldiv:
  1232                           	opt stack 0
  1233                           tosu	equ	0xFFF
  1234                           tosh	equ	0xFFE
  1235                           tosl	equ	0xFFD
  1236                           pclath	equ	0xFFA
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postdec1	equ	0xFE5
  1244                           fsr1l	equ	0xFE1
  1245                           postinc2	equ	0xFDE
  1246                           status	equ	0xFD8
  1247                           
  1248 ;; *************** function _GetFreq *****************
  1249 ;; Defined at:
  1250 ;;		line 128 in file "EAB_Oscillator.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  4    0[BANK0 ] long 
  1257 ;; Registers used:
  1258 ;;		None
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:        4 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    2
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_Open1
  1275 ;;		_Open2
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text5
  1280  0005F4                     __ptext5:
  1281                           	opt stack 0
  1282  0005F4                     _GetFreq:
  1283                           	opt stack 27
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;incstack = 0
  1287  0005F4  C039  F060         	movff	_OscFreq,?_GetFreq
  1288  0005F8  C03A  F061         	movff	_OscFreq+1,?_GetFreq+1
  1289  0005FC  C03B  F062         	movff	_OscFreq+2,?_GetFreq+2
  1290  000600  C03C  F063         	movff	_OscFreq+3,?_GetFreq+3
  1291  000604  0012               	return	
  1292  000606                     __end_of_GetFreq:
  1293                           	opt stack 0
  1294                           tosu	equ	0xFFF
  1295                           tosh	equ	0xFFE
  1296                           tosl	equ	0xFFD
  1297                           pclath	equ	0xFFA
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1l	equ	0xFE1
  1306                           postinc2	equ	0xFDE
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _LowPriority_InterruptHandler *****************
  1310 ;; Defined at:
  1311 ;;		line 21 in file "EAB_InterruptHandler.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		None
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;Total ram usage:       17 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		Interrupt level 1
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	intcodelo
  1340  000018                     __pintcodelo:
  1341                           	opt stack 0
  1342  000018                     _LowPriority_InterruptHandler:
  1343                           	opt stack 27
  1344                           
  1345                           ;incstack = 0
  1346  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  1347  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  1348  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  1349  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  1350  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  1351  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  1352  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  1353  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  1354  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  1355  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  1356  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  1357  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  1358  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  1359  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  1360  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  1361  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  1362  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  1363  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  1364  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  1365  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  1366  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  1367  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  1368  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  1369  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  1370  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  1371  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  1372  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  1373  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  1374  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  1375  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  1376  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  1377  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  1378  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  1379  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  1380  0000A0  0010               	retfie	
  1381  0000A2                     __end_of_LowPriority_InterruptHandler:
  1382                           	opt stack 0
  1383                           tosu	equ	0xFFF
  1384                           tosh	equ	0xFFE
  1385                           tosl	equ	0xFFD
  1386                           pclatu	equ	0xFFB
  1387                           pclath	equ	0xFFA
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           prodh	equ	0xFF4
  1393                           prodl	equ	0xFF3
  1394                           postinc0	equ	0xFEE
  1395                           fsr0h	equ	0xFEA
  1396                           fsr0l	equ	0xFE9
  1397                           wreg	equ	0xFE8
  1398                           postdec1	equ	0xFE5
  1399                           fsr1h	equ	0xFE2
  1400                           fsr1l	equ	0xFE1
  1401                           bsr	equ	0xFE0
  1402                           postinc2	equ	0xFDE
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _HighPriority_InterruptHandler *****************
  1408 ;; Defined at:
  1409 ;;		line 14 in file "EAB_InterruptHandler.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;		None               void
  1416 ;; Registers used:
  1417 ;;		None
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;Total ram usage:       14 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		Interrupt level 2
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	intcode
  1437  000008                     __pintcode:
  1438                           	opt stack 0
  1439  000008                     _HighPriority_InterruptHandler:
  1440                           	opt stack 27
  1441                           
  1442                           ;incstack = 0
  1443  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  1444  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  1445  000010  EF73  F002         	goto	int_func
  1446                           tosu	equ	0xFFF
  1447                           tosh	equ	0xFFE
  1448                           tosl	equ	0xFFD
  1449                           pclatu	equ	0xFFB
  1450                           pclath	equ	0xFFA
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           prodh	equ	0xFF4
  1456                           prodl	equ	0xFF3
  1457                           postinc0	equ	0xFEE
  1458                           fsr0h	equ	0xFEA
  1459                           fsr0l	equ	0xFE9
  1460                           wreg	equ	0xFE8
  1461                           postdec1	equ	0xFE5
  1462                           fsr1h	equ	0xFE2
  1463                           fsr1l	equ	0xFE1
  1464                           bsr	equ	0xFE0
  1465                           postinc2	equ	0xFDE
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470                           	psect	intcode_body
  1471  0004E6                     __pintcode_body:
  1472                           	opt stack 27
  1473  0004E6                     int_func:
  1474                           	opt stack 27
  1475  0004E6  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  1476  0004EA  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  1477  0004EE  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  1478  0004F2  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  1479  0004F6  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  1480  0004FA  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  1481  0004FE  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  1482  000502  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  1483  000506  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  1484  00050A  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  1485  00050E  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  1486  000512  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  1487  000516  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  1488  00051A  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  1489  00051E  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  1490  000522  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  1491  000526  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  1492  00052A  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  1493  00052E  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  1494  000532  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  1495  000536  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  1496  00053A  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  1497  00053E  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  1498  000542  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  1499  000546  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  1500  00054A  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  1501  00054E  0011               	retfie		f
  1502  000550                     __end_of_HighPriority_InterruptHandler:
  1503                           	opt stack 0
  1504  0000                     tosu	equ	0xFFF
  1505                           tosh	equ	0xFFE
  1506                           tosl	equ	0xFFD
  1507                           pclatu	equ	0xFFB
  1508                           pclath	equ	0xFFA
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           prodh	equ	0xFF4
  1514                           prodl	equ	0xFF3
  1515                           postinc0	equ	0xFEE
  1516                           fsr0h	equ	0xFEA
  1517                           fsr0l	equ	0xFE9
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1h	equ	0xFE2
  1521                           fsr1l	equ	0xFE1
  1522                           bsr	equ	0xFE0
  1523                           postinc2	equ	0xFDE
  1524                           fsr2h	equ	0xFDA
  1525                           fsr2l	equ	0xFD9
  1526                           status	equ	0xFD8
  1527                           tosu	equ	0xFFF
  1528                           tosh	equ	0xFFE
  1529                           tosl	equ	0xFFD
  1530                           pclatu	equ	0xFFB
  1531                           pclath	equ	0xFFA
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           prodh	equ	0xFF4
  1537                           prodl	equ	0xFF3
  1538                           postinc0	equ	0xFEE
  1539                           fsr0h	equ	0xFEA
  1540                           fsr0l	equ	0xFE9
  1541                           wreg	equ	0xFE8
  1542                           postdec1	equ	0xFE5
  1543                           fsr1h	equ	0xFE2
  1544                           fsr1l	equ	0xFE1
  1545                           bsr	equ	0xFE0
  1546                           postinc2	equ	0xFDE
  1547                           fsr2h	equ	0xFDA
  1548                           fsr2l	equ	0xFD9
  1549                           status	equ	0xFD8
  1550                           
  1551                           	psect	rparam
  1552  0000                     tosu	equ	0xFFF
  1553                           tosh	equ	0xFFE
  1554                           tosl	equ	0xFFD
  1555                           pclatu	equ	0xFFB
  1556                           pclath	equ	0xFFA
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           postinc0	equ	0xFEE
  1564                           fsr0h	equ	0xFEA
  1565                           fsr0l	equ	0xFE9
  1566                           wreg	equ	0xFE8
  1567                           postdec1	equ	0xFE5
  1568                           fsr1h	equ	0xFE2
  1569                           fsr1l	equ	0xFE1
  1570                           bsr	equ	0xFE0
  1571                           postinc2	equ	0xFDE
  1572                           fsr2h	equ	0xFDA
  1573                           fsr2l	equ	0xFD9
  1574                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        51
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      63
    BANK0           160     32      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S67$2$0	PTR unsigned char  size(2) Largest target is 0

    S67$3$0	PTR unsigned char  size(2) Largest target is 0

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S67$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S67$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S67$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S67$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S67$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S67$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_SetFreq_8MHZ
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1936
                              _Open1 *
                              _Open2 *
                       _SetFreq_8MHZ *
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4    1022
                                             14 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4     914
                                             14 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     753
                                             31 COMRAM     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
   _Open2 *
     _GetFreq *
     ___aldiv *
   _SetFreq_8MHZ *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      12        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Apr 23 11:48:15 2014

                                    l32 04DA                                      bsr 000FE0  
                                   u508 0458                                     u509 046C  
                                   u518 048A                                     u615 00D4  
                                   u519 049E                                     u528 04BC  
                                   u625 0126                                     u565 02DA  
                                   u558 028C                                     u559 02A0  
                                   u595 03C6                                     u588 0378  
                                   u589 038C                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                      _EnableRx1interrupt 000000  
                          __CFG_LVP$OFF 000000                                    l1401 01A4  
                                  l1411 022A                                    l1403 01AC  
                                  l1315 04D0                                    l1415 0246  
                                  l1419 0270                                    l1393 0152  
                                  l1387 0104                                    l1399 018A  
                    _EnableRx2interrupt 000000                                    _main 044E  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 0606                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                         __end_of___aldiv 0282  
                                 ?_main 0001                          __CFG_DEBUG$OFF 000000  
                                 _Open1 0282                                   _Open2 036E  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                         __initialization 0550  
                          __end_of_main 04E6                             Open1@BRGval 007E  
                                ??_main 0021                           __activetblptr 000002  
                                ?_Open1 006E                                  ?_Open2 006E  
                            _SendArray1 000000                              _SendArray2 000000  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0020                                  _SPBRG1 000FAF  
                                _SPBRG2 000F75                                  _TX1REG 000FAD  
                                _TX2REG 000F73                              _Oscillator 0080  
                             ??___aldiv 0020                           ?_SetFreq_8MHZ 0001  
                          __pdataCOMRAM 0021                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                            __accesstop 0060                 __end_of__initialization 0594  
                        __pcstackCOMRAM 0001                           __end_of_Open1 036E  
                         __end_of_Open2 044E                            __pidataBANK0 05DD  
                        ??_SetFreq_8MHZ 0020                                 ??_Open1 0072  
                               ??_Open2 0072                             _PinFunction 000F38  
                            _delayCount 003E                           _SetFreq_32MHZ 000000  
                         _SetFreq_16MHZ 000000   __end_of_HighPriority_InterruptHandler 0550  
__size_of_HighPriority_InterruptHandler 0548           _HighPriority_InterruptHandler 0008  
                         _SetFreq_64MHZ 000000                             _SendString1 000000  
                           _SendString2 000000                                 _SPBRGH1 000FB0  
                               _SPBRGH2 000F76                                 _GetFreq 05F4  
                               _OscFreq 0039                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 0021  
                               _Serial2 002D                                 ___aldiv 00A6  
                               __pcinit 0550                                 __ramtop 1000  
                               __ptext0 044E                                 __ptext1 059E  
                               __ptext2 0282                                 __ptext3 036E  
                               __ptext4 00A6                                 __ptext5 05F4  
                      ___aldiv@dividend 0060                          __pintcode_body 04E6  
                  end_of_initialization 0594                    __end_of_SetFreq_8MHZ 05C0  
                         __Lmediumconst 0000                                 int_func 04E6  
                      ___aldiv@quotient 006A                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc2 000FDE  
  __end_of_LowPriority_InterruptHandler 00A2   __size_of_LowPriority_InterruptHandler 008A  
          _LowPriority_InterruptHandler 0018                        __CFG_FOSC$INTIO7 000000  
        ?_HighPriority_InterruptHandler 0001                               Open1@freq 007A  
                             Open2@freq 007A                               Open2@temp 007E  
                         __pidataCOMRAM 05C0           ?_LowPriority_InterruptHandler 0001  
                   start_initialization 0550                               _ReadByte1 000000  
                             _ReadByte2 000000                               _SendByte1 000000  
                             _SendByte2 000000                            _PinDirection 000F92  
                         Open1@BaudRate 006E                             __pdataBANK0 0080  
                         Open2@BaudRate 006E                             __pbssCOMRAM 003E  
                 __size_of_SetFreq_8MHZ 0022                           __pcstackBANK0 0060  
                          _OscFreqIndex 003D                                ?_GetFreq 0060  
                             __pintcode 0008                                ?___aldiv 0060  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 059E                          __size_of_Open1 00EC  
                        __size_of_Open2 00E0          ??_LowPriority_InterruptHandler 0001  
                        _SetFreq_250KHZ 000000                          _SetFreq_500KHZ 000000  
                       ___aldiv@divisor 0064                         ___aldiv@counter 0068  
                              _IPR1bits 000F9F                                _PIE1bits 000F9D  
                              _IPR3bits 000FA5                                _PIE3bits 000FA3  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
                              _RCONbits 000FD0                               copy_data0 0568  
                             copy_data1 0588                        __size_of_GetFreq 0012  
                              __Hrparam 0000         ??_HighPriority_InterruptHandler 0012  
                              __Lrparam 0000                        __size_of___aldiv 01DC  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 0098                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                                intlevel1 0000  
                              intlevel2 0000                              _RCSTA1bits 000FAB  
                            _RCSTA2bits 000F71                              _OSCCONbits 000FD3  
                          ___aldiv@sign 0069  
