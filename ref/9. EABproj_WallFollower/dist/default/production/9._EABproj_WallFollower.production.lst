

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue May 06 18:06:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    33  0000                     
    34 ;; Function _SetFreq_250KHZ is unused but had its address taken
    35  0000                     
    36 ;; Function _SetFreq_500KHZ is unused but had its address taken
    37  0000                     
    38 ;; Function _SetFreq_1MHZ is unused but had its address taken
    39  0000                     
    40 ;; Function _SetFreq_2MHZ is unused but had its address taken
    41  0000                     
    42 ;; Function _SetFreq_4MHZ is unused but had its address taken
    43  0000                     
    44 ;; Function _SetFreq_16MHZ is unused but had its address taken
    45  0000                     
    46 ;; Function _SetFreq_32MHZ is unused but had its address taken
    47  0000                     
    48 ;; Function _SetFreq_64MHZ is unused but had its address taken
    49  0000                     
    50 ;; Function _SendArray1 is unused but had its address taken
    51  0000                     
    52 ;; Function _SendArray2 is unused but had its address taken
    53  0000                     
    54 ;; Function _SendString1 is unused but had its address taken
    55  0000                     
    56 ;; Function _SendString2 is unused but had its address taken
    57  0000                     
    58 ;; Function _ReadByte1 is unused but had its address taken
    59  0000                     
    60 ;; Function _ReadByte2 is unused but had its address taken
    61  0000                     
    62 ;; Function _EnableRx1interrupt is unused but had its address taken
    63  0000                     
    64 ;; Function _EnableRx2interrupt is unused but had its address taken
    65  0000                     
    66 ;; Function _SetTimer0_1Sec is unused but had its address taken
    67  0000                     
    68 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    69  0000                     
    70 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    71  0000                     
    72 ;; Function _SetTimer0_1millSec is unused but had its address taken
    73  0000                     
    74 ;; Function _SetTimer0 is unused but had its address taken
    75  0000                     
    76 ;; Function _Timer0Int is unused but had its address taken
    77  0000                     
    78 ;; Function _SetTimer1 is unused but had its address taken
    79  0000                     
    80 ;; Function _Timer1Int is unused but had its address taken
    81  0000                     
    82 ;; Function _SetTimer2_1millSec is unused but had its address taken
    83  0000                     
    84 ;; Function _SetTimer2_100microSec is unused but had its address taken
    85  0000                     
    86 ;; Function _Timer2Int is unused but had its address taken
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0018DA                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _Serial1
    93  0018DA  159C               	dw	_Open1& (0+65535)
    94  0018DC  18EC               	dw	_SendByte1& (0+65535)
    95  0018DE  0000               	dw	0
    96  0018E0  0000               	dw	0
    97  0018E2  0000               	dw	0
    98  0018E4  0000               	dw	0
    99                           
   100                           ;initializer for _OscFreq
   101  0018E6  4240               	dw	16960
   102  0018E8  000F               	dw	15
   103                           
   104                           ;initializer for _OscFreqIndex
   105  0018EA  03                 	db	3
   106                           
   107                           	psect	idataBANK0
   108  001842                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _Oscillator
   112  001842  0000               	dw	0
   113  001844  0000               	dw	0
   114  001846  0000               	dw	0
   115  001848  0000               	dw	0
   116  00184A  0000               	dw	0
   117  00184C  0000               	dw	0
   118  00184E  186A               	dw	_SetFreq_8MHZ& (0+65535)
   119  001850  0000               	dw	0
   120  001852  0000               	dw	0
   121  001854  0000               	dw	0
   122  001856  18C8               	dw	_GetFreq& (0+65535)
   123                           
   124                           ;initializer for _Serial2
   125  001858  1686               	dw	_Open2& (0+65535)
   126  00185A  18FA               	dw	_SendByte2& (0+65535)
   127  00185C  0000               	dw	0
   128  00185E  0000               	dw	0
   129  001860  0000               	dw	0
   130  001862  0000               	dw	0
   131                           
   132                           ;initializer for _ADC
   133  001864  14A8               	dw	_Open_adc& (0+65535)
   134  001866  18AE               	dw	_SetChannel& (0+65535)
   135  001868  188C               	dw	_ReadData& (0+65535)
   136                           
   137                           	psect	smallconst
   138  001000                     __psmallconst:
   139                           	opt stack 0
   140  001000  00                 	db	0
   141  001001                     _Timer0:
   142                           	opt stack 0
   143  001001  0000               	dw	0
   144  001003  0000               	dw	0
   145  001005  0000               	dw	0
   146  001007  0000               	dw	0
   147  001009  0000               	dw	0
   148  00100B  0000               	dw	0
   149  00100D  3A                 	db	58
   150  00100E  2C                 	db	44
   151  00100F  7E                 	db	126
   152  001010                     __end_of_Timer0:
   153                           	opt stack 0
   154  001010                     _Timer2:
   155                           	opt stack 0
   156  001010  0000               	dw	0
   157  001012  0000               	dw	0
   158  001014  1818               	dw	_SetTimer2& (0+65535)
   159  001016  0000               	dw	0
   160  001018  AA                 	db	170
   161  001019  B3                 	db	179
   162  00101A  3E                 	db	62
   163  00101B  98                 	db	152
   164  00101C  BA                 	db	186
   165  00101D  DC                 	db	220
   166  00101E  FE                 	db	254
   167  00101F                     __end_of_Timer2:
   168                           	opt stack 0
   169  00101F                     _TIMER0_130mSec:
   170                           	opt stack 0
   171  00101F  C1                 	db	193
   172  001020  C4                 	db	196
   173  001021  C5                 	db	197
   174  001022  C6                 	db	198
   175  001023  C7                 	db	199
   176  001024  80                 	db	128
   177  001025  81                 	db	129
   178  001026  82                 	db	130
   179  001027  83                 	db	131
   180  001028  84                 	db	132
   181  001029                     __end_of_TIMER0_130mSec:
   182                           	opt stack 0
   183  001029                     _TIMER0_1Sec:
   184                           	opt stack 0
   185  001029  C4                 	db	196
   186  00102A  C7                 	db	199
   187  00102B  80                 	db	128
   188  00102C  81                 	db	129
   189  00102D  82                 	db	130
   190  00102E  83                 	db	131
   191  00102F  84                 	db	132
   192  001030  85                 	db	133
   193  001031  86                 	db	134
   194  001032  87                 	db	135
   195  001033                     __end_of_TIMER0_1Sec:
   196                           	opt stack 0
   197  001033                     _TIMER2_100usec:
   198                           	opt stack 0
   199  001033  84                 	db	132
   200  001034  84                 	db	132
   201  001035  84                 	db	132
   202  001036  84                 	db	132
   203  001037  84                 	db	132
   204  001038  84                 	db	132
   205  001039  8C                 	db	140
   206  00103A  9C                 	db	156
   207  00103B  BC                 	db	188
   208  00103C  00                 	db	0
   209  00103D                     __end_of_TIMER2_100usec:
   210                           	opt stack 0
   211  00103D                     _TIMER2_1msec:
   212                           	opt stack 0
   213  00103D  84                 	db	132
   214  00103E  84                 	db	132
   215  00103F  84                 	db	132
   216  001040  84                 	db	132
   217  001041  CC                 	db	204
   218  001042  CC                 	db	204
   219  001043  CC                 	db	204
   220  001044  A5                 	db	165
   221  001045  CD                 	db	205
   222  001046  A7                 	db	167
   223  001047                     __end_of_TIMER2_1msec:
   224                           	opt stack 0
   225  001047                     _TIMER2_PR2_1msec:
   226                           	opt stack 0
   227  001047  08                 	db	8
   228  001048  3E                 	db	62
   229  001049  7D                 	db	125
   230  00104A  FA                 	db	250
   231  00104B  32                 	db	50
   232  00104C  64                 	db	100
   233  00104D  C8                 	db	200
   234  00104E  C8                 	db	200
   235  00104F  C8                 	db	200
   236  001050  C8                 	db	200
   237  001051                     __end_of_TIMER2_PR2_1msec:
   238                           	opt stack 0
   239  001051                     _TIMER0_16mSec:
   240                           	opt stack 0
   241  001051  C1                 	db	193
   242  001052  C2                 	db	194
   243  001053  C3                 	db	195
   244  001054  C4                 	db	196
   245  001055  C5                 	db	197
   246  001056  C6                 	db	198
   247  001057  C7                 	db	199
   248  001058  80                 	db	128
   249  001059  81                 	db	129
   250  00105A                     __end_of_TIMER0_16mSec:
   251                           	opt stack 0
   252  00105A                     _TIMER2_PR2_100usec:
   253                           	opt stack 0
   254  00105A  06                 	db	6
   255  00105B  0D                 	db	13
   256  00105C  19                 	db	25
   257  00105D  32                 	db	50
   258  00105E  64                 	db	100
   259  00105F  C8                 	db	200
   260  001060  C8                 	db	200
   261  001061  C8                 	db	200
   262  001062  C8                 	db	200
   263  001063                     __end_of_TIMER2_PR2_100usec:
   264                           	opt stack 0
   265  001063                     _TIMER0_1mSec:
   266                           	opt stack 0
   267  001063  C0                 	db	192
   268  001064  C1                 	db	193
   269  001065  C2                 	db	194
   270  001066  C3                 	db	195
   271  001067  C4                 	db	196
   272  001068  C5                 	db	197
   273  001069                     __end_of_TIMER0_1mSec:
   274                           	opt stack 0
   275  001069                     _Timer1:
   276                           	opt stack 0
   277  001069  0000               	dw	0
   278  00106B  0000               	dw	0
   279  00106D  3A                 	db	58
   280  00106E                     __end_of_Timer1:
   281                           	opt stack 0
   282  0000                     _PinDirection	set	3986
   283  0000                     _PinFunction	set	3896
   284  0000                     _PinWrite	set	3977
   285  0000                     _ADCON0bits	set	4034
   286  0000                     _ADCON1bits	set	4033
   287  0000                     _ADCON2bits	set	4032
   288  0000                     _ADRESH	set	4036
   289  0000                     _ADRESL	set	4035
   290  0000                     _BAUDCON1bits	set	4024
   291  0000                     _BAUDCON2bits	set	3952
   292  0000                     _INTCONbits	set	4082
   293  0000                     _IPR1bits	set	3999
   294  0000                     _IPR3bits	set	4005
   295  0000                     _OSCCON	set	4051
   296  0000                     _OSCCON2bits	set	4050
   297  0000                     _OSCCONbits	set	4051
   298  0000                     _OSCTUNEbits	set	3995
   299  0000                     _PIE1bits	set	3997
   300  0000                     _PIE3bits	set	4003
   301  0000                     _PIR1bits	set	3998
   302  0000                     _PIR3bits	set	4004
   303  0000                     _PR2	set	4027
   304  0000                     _RC1REG	set	4014
   305  0000                     _RC2REG	set	3956
   306  0000                     _RCONbits	set	4048
   307  0000                     _RCSTA1bits	set	4011
   308  0000                     _RCSTA2bits	set	3953
   309  0000                     _SPBRG1	set	4015
   310  0000                     _SPBRG2	set	3957
   311  0000                     _SPBRGH1	set	4016
   312  0000                     _SPBRGH2	set	3958
   313  0000                     _T0CON	set	4053
   314  0000                     _T0CONbits	set	4053
   315  0000                     _T1CONbits	set	4045
   316  0000                     _T2CON	set	4026
   317  0000                     _T2CONbits	set	4026
   318  0000                     _TX1REG	set	4013
   319  0000                     _TX2REG	set	3955
   320  0000                     _TXSTA1bits	set	4012
   321  0000                     _TXSTA2bits	set	3954
   322                           
   323                           ; #config settings
   324  00106E  00                 	db	0	; dummy byte at the end
   325  0000                     
   326                           	psect	cinit
   327  0017CE                     __pcinit:
   328                           	opt stack 0
   329  0017CE                     start_initialization:
   330                           	opt stack 0
   331  0017CE                     __initialization:
   332                           	opt stack 0
   333                           
   334                           ; Clear objects allocated to COMRAM (2 bytes)
   335  0017CE  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   336  0017D0  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   337                           
   338                           ; Initialize objects allocated to BANK0 (40 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  0017D2  0E42               	movlw	low __pidataBANK0
   341  0017D4  6EF6               	movwf	tblptrl,c
   342  0017D6  0E18               	movlw	high __pidataBANK0
   343  0017D8  6EF7               	movwf	tblptrh,c
   344  0017DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  0017DC  6EF8               	movwf	tblptru,c
   346  0017DE  EE00  F060         	lfsr	0,__pdataBANK0
   347  0017E2  EE10 F028          	lfsr	1,40
   348  0017E6                     copy_data0:
   349  0017E6  0009               	tblrd		*+
   350  0017E8  CFF5 FFEE          	movff	tablat,postinc0
   351  0017EC  50E5               	movf	postdec1,w,c
   352  0017EE  50E1               	movf	fsr1l,w,c
   353  0017F0  E1FA               	bnz	copy_data0
   354                           
   355                           ; Initialize objects allocated to COMRAM (17 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357  0017F2  0EDA               	movlw	low __pidataCOMRAM
   358  0017F4  6EF6               	movwf	tblptrl,c
   359  0017F6  0E18               	movlw	high __pidataCOMRAM
   360  0017F8  6EF7               	movwf	tblptrh,c
   361  0017FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362  0017FC  6EF8               	movwf	tblptru,c
   363  0017FE  EE00  F02D         	lfsr	0,__pdataCOMRAM
   364  001802  EE10 F011          	lfsr	1,17
   365  001806                     copy_data1:
   366  001806  0009               	tblrd		*+
   367  001808  CFF5 FFEE          	movff	tablat,postinc0
   368  00180C  50E5               	movf	postdec1,w,c
   369  00180E  50E1               	movf	fsr1l,w,c
   370  001810  E1FA               	bnz	copy_data1
   371  001812                     end_of_initialization:
   372                           	opt stack 0
   373  001812                     __end_of__initialization:
   374                           	opt stack 0
   375  001812  0100               	movlb	0
   376  001814  EF38  F008         	goto	_main	;jump to C main() function
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssCOMRAM
   386  00003E                     __pbssCOMRAM:
   387                           	opt stack 0
   388  00003E                     _delayCount:
   389                           	opt stack 0
   390  00003E                     	ds	2
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	dataCOMRAM
   400  00002D                     __pdataCOMRAM:
   401                           	opt stack 0
   402  00002D                     _Serial1:
   403                           	opt stack 0
   404  00002D                     	ds	12
   405  000039                     _OscFreq:
   406                           	opt stack 0
   407  000039                     	ds	4
   408  00003D                     _OscFreqIndex:
   409                           	opt stack 0
   410  00003D                     	ds	1
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           postdec1	equ	0xFE5
   417                           fsr1l	equ	0xFE1
   418                           
   419                           	psect	dataBANK0
   420  000060                     __pdataBANK0:
   421                           	opt stack 0
   422  000060                     _Oscillator:
   423                           	opt stack 0
   424  000060                     	ds	22
   425  000076                     _Serial2:
   426                           	opt stack 0
   427  000076                     	ds	12
   428  000082                     _ADC:
   429                           	opt stack 0
   430  000082                     	ds	6
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK0
   440  000088                     __pcstackBANK0:
   441                           	opt stack 0
   442  000088                     ___aldiv@counter:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x0
   446  000088                     	ds	1
   447  000089                     ___aldiv@sign:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1
   451  000089                     	ds	1
   452  00008A                     ___aldiv@quotient:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x2
   456  00008A                     	ds	4
   457  00008E                     ??_Open_adc:
   458  00008E                     Open1@BaudRate:
   459                           	opt stack 0
   460  00008E                     Open2@BaudRate:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x6
   464  00008E                     	ds	4
   465  000092                     ??_Open1:
   466  000092                     ??_Open2:
   467  000092                     Open_adc@freq:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xA
   471  000092                     	ds	1
   472  000093                     Open_adc@adcs:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0xB
   476  000093                     	ds	7
   477  00009A                     Open1@freq:
   478                           	opt stack 0
   479  00009A                     Open2@freq:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x12
   483  00009A                     	ds	4
   484  00009E                     Open1@BRGval:
   485                           	opt stack 0
   486  00009E                     Open2@temp:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x16
   490  00009E                     	ds	2
   491  0000A0                     ??_main:
   492                           
   493                           ; 0 bytes @ 0x18
   494  0000A0                     	ds	5
   495  0000A5                     main@MSB:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x1D
   499  0000A5                     	ds	1
   500  0000A6                     main@LSB:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1E
   504  0000A6                     	ds	1
   505  0000A7                     main@ADCvalue:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x1F
   509  0000A7                     	ds	2
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	cstackCOMRAM
   519  000001                     __pcstackCOMRAM:
   520                           	opt stack 0
   521  000001                     ??_LowPriority_InterruptHandler:
   522  000001                     
   523                           ; 1 bytes @ 0x0
   524  000001                     	ds	17
   525  000012                     ??_HighPriority_InterruptHandler:
   526                           
   527                           ; 0 bytes @ 0x11
   528  000012                     	ds	14
   529  000020                     ??_SetChannel:
   530  000020                     ??_SetFreq_8MHZ:
   531  000020                     ?_ReadData:
   532                           	opt stack 0
   533  000020                     ?_GetFreq:
   534                           	opt stack 0
   535  000020                     SendByte1@Data:
   536                           	opt stack 0
   537  000020                     SendByte2@Data:
   538                           	opt stack 0
   539  000020                     SetTimer2@postscalar:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1F
   543  000020                     	ds	1
   544  000021                     SetChannel@channel:
   545                           	opt stack 0
   546  000021                     SetTimer2@period:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x20
   550  000021                     	ds	1
   551  000022                     ??_ReadData:
   552  000022                     ??_SetTimer2:
   553                           
   554                           ; 0 bytes @ 0x21
   555  000022                     	ds	1
   556  000023                     SetTimer2@prescalar:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x22
   560  000023                     	ds	1
   561  000024                     ?___aldiv:
   562                           	opt stack 0
   563  000024                     ReadData@ADCdata:
   564                           	opt stack 0
   565  000024                     ___aldiv@dividend:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x23
   569  000024                     	ds	4
   570  000028                     ___aldiv@divisor:
   571                           	opt stack 0
   572                           
   573                           ; 4 bytes @ 0x27
   574  000028                     	ds	4
   575  00002C                     ??___aldiv:
   576                           
   577                           ; 0 bytes @ 0x2B
   578  00002C                     	ds	1
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           postdec1	equ	0xFE5
   585                           fsr1l	equ	0xFE1
   586                           
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 21 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  ADCvalue        2   31[BANK0 ] short 
   597 ;;  LSB             1   30[BANK0 ] unsigned char 
   598 ;;  MSB             1   29[BANK0 ] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;		None               void
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;Total ram usage:        9 bytes
   613 ;; Hardware stack levels required when called:    4
   614 ;; This function calls:
   615 ;;		_Open1
   616 ;;		_Open2
   617 ;;		_Open_adc
   618 ;;		_ReadData
   619 ;;		_SendByte1
   620 ;;		_SendByte2
   621 ;;		_SetChannel
   622 ;;		_SetFreq_8MHZ
   623 ;;		_SetTimer2
   624 ;; This function is called by:
   625 ;;		Startup code after reset
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text0
   630  001070                     __ptext0:
   631                           	opt stack 0
   632  001070                     _main:
   633                           	opt stack 27
   634                           
   635                           ;main.c: 24: uchar MSB=0,LSB=0;
   636                           
   637                           ;incstack = 0
   638  001070  0100               	movlb	0	; () banked
   639  001072  6FA0               	movwf	??_main& (0+255),b
   640  001074  0E00               	movlw	0
   641  001076  0100               	movlb	0	; () banked
   642  001078  0100               	movlb	0	; () banked
   643  00107A  6FA5               	movwf	main@MSB& (0+255),b
   644  00107C  0100               	movlb	0	; () banked
   645  00107E  51A0               	movf	??_main& (0+255),w,b
   646  001080  0100               	movlb	0	; () banked
   647  001082  6FA0               	movwf	??_main& (0+255),b
   648  001084  0E00               	movlw	0
   649  001086  0100               	movlb	0	; () banked
   650  001088  0100               	movlb	0	; () banked
   651  00108A  6FA6               	movwf	main@LSB& (0+255),b
   652  00108C  0100               	movlb	0	; () banked
   653  00108E  51A0               	movf	??_main& (0+255),w,b
   654                           
   655                           ; BSR set to: 0
   656                           ;main.c: 25: short ADCvalue;
   657                           ;main.c: 28: Oscillator.SetFreq_8MHZ();
   658  001090  D801               	call	u908
   659  001092  D00C               	goto	u909
   660  001094                     u908:
   661  001094  0005               	push	
   662  001096  6EFA               	movwf	pclath,c
   663  001098  0100               	movlb	0	; () banked
   664  00109A  0100               	movlb	0	; () banked
   665  00109C  516C               	movf	(_Oscillator+12)& (0+255),w,b
   666  00109E  6EFD               	movwf	tosl,c
   667  0010A0  0100               	movlb	0	; () banked
   668  0010A2  516D               	movf	(_Oscillator+13)& (0+255),w,b
   669  0010A4  6EFE               	movwf	tosh,c
   670  0010A6  6AFF               	clrf	tosu,c
   671  0010A8  50FA               	movf	pclath,w,c
   672  0010AA  0012               	return		;indir
   673  0010AC                     u909:
   674                           
   675                           ;main.c: 30: Timer2.SetPeriod(Timer2.config.PRESCALER_16,Timer2.config.POSTSCALER_16,255
      +                          ) ;
   676  0010AC  0E14               	movlw	low (_Timer2+4)
   677  0010AE  6EF6               	movwf	tblptrl,c
   678  0010B0  0E10               	movlw	high (_Timer2+4)
   679  0010B2  6EF7               	movwf	tblptrh,c
   680  0010B4  0E00               	movlw	low (__mediumconst shr (0+16))
   681  0010B6  6EF8               	movwf	tblptru,c
   682  0010B8  0009               	tblrd		*+
   683  0010BA  CFF5 F0A0          	movff	tablat,??_main
   684  0010BE  0009               	tblrd		*+
   685  0010C0  CFF5 F0A1          	movff	tablat,??_main+1
   686  0010C4  D801               	call	u918
   687  0010C6  D02A               	goto	u919
   688  0010C8                     u918:
   689  0010C8  0005               	push	
   690  0010CA  6EFA               	movwf	pclath,c
   691  0010CC  0100               	movlb	0	; () banked
   692  0010CE  51A0               	movf	??_main& (0+255),w,b
   693  0010D0  6EFD               	movwf	tosl,c
   694  0010D2  51A1               	movf	(??_main+1)& (0+255),w,b
   695  0010D4  6EFE               	movwf	tosh,c
   696  0010D6  6AFF               	clrf	tosu,c
   697  0010D8  50FA               	movf	pclath,w,c
   698  0010DA  0E1E               	movlw	low (_Timer2+14)
   699  0010DC  6EF6               	movwf	tblptrl,c
   700  0010DE  0E10               	movlw	high (_Timer2+14)
   701  0010E0  6EF7               	movwf	tblptrh,c
   702  0010E2  0E00               	movlw	low (__mediumconst shr (0+16))
   703  0010E4  6EF8               	movwf	tblptru,c
   704  0010E6  0008               	tblrd		*
   705  0010E8  CFF5 F0A2          	movff	tablat,??_main+2
   706  0010EC  0100               	movlb	0	; () banked
   707  0010EE  39A2               	swapf	(??_main+2)& (0+255),w,b
   708  0010F0  0B0F               	andlw	15
   709  0010F2  6E20               	movwf	SetTimer2@postscalar,c
   710  0010F4  0100               	movlb	0	; () banked
   711  0010F6  6FA3               	movwf	(??_main+3)& (0+255),b
   712  0010F8  0EFF               	movlw	255
   713  0010FA  6E21               	movwf	SetTimer2@period,c
   714  0010FC  0100               	movlb	0	; () banked
   715  0010FE  51A3               	movf	(??_main+3)& (0+255),w,b
   716  001100  0E18               	movlw	low (_Timer2+8)
   717  001102  6EF6               	movwf	tblptrl,c
   718  001104  0E10               	movlw	high (_Timer2+8)
   719  001106  6EF7               	movwf	tblptrh,c
   720  001108  0E00               	movlw	low (__mediumconst shr (0+16))
   721  00110A  6EF8               	movwf	tblptru,c
   722  00110C  0008               	tblrd		*
   723  00110E  CFF5 F0A4          	movff	tablat,??_main+4
   724  001112  0100               	movlb	0	; () banked
   725  001114  31A4               	rrcf	(??_main+4)& (0+255),w,b
   726  001116  32E8               	rrcf	wreg,f,c
   727  001118  0B03               	andlw	3
   728  00111A  0012               	return		;indir
   729  00111C                     u919:
   730                           
   731                           ;main.c: 32: Serial2.Open(9600);
   732  00111C  0E80               	movlw	128
   733  00111E  0100               	movlb	0	; () banked
   734  001120  0100               	movlb	0	; () banked
   735  001122  6F8E               	movwf	Open2@BaudRate& (0+255),b
   736  001124  0E25               	movlw	37
   737  001126  0100               	movlb	0	; () banked
   738  001128  6F8F               	movwf	(Open2@BaudRate+1)& (0+255),b
   739  00112A  0E00               	movlw	0
   740  00112C  0100               	movlb	0	; () banked
   741  00112E  6F90               	movwf	(Open2@BaudRate+2)& (0+255),b
   742  001130  0E00               	movlw	0
   743  001132  0100               	movlb	0	; () banked
   744  001134  6F91               	movwf	(Open2@BaudRate+3)& (0+255),b
   745  001136  D801               	call	u928
   746  001138  D00C               	goto	u929
   747  00113A                     u928:
   748  00113A  0005               	push	
   749  00113C  6EFA               	movwf	pclath,c
   750  00113E  0100               	movlb	0	; () banked
   751  001140  0100               	movlb	0	; () banked
   752  001142  5176               	movf	_Serial2& (0+255),w,b
   753  001144  6EFD               	movwf	tosl,c
   754  001146  0100               	movlb	0	; () banked
   755  001148  5177               	movf	(_Serial2+1)& (0+255),w,b
   756  00114A  6EFE               	movwf	tosh,c
   757  00114C  6AFF               	clrf	tosu,c
   758  00114E  50FA               	movf	pclath,w,c
   759  001150  0012               	return		;indir
   760  001152                     u929:
   761                           
   762                           ;main.c: 34: (PinFunction.RC0 = 0, PinDirection.RC0 = 0 );
   763  001152  010F               	movlb	15	; () banked
   764  001154  010F               	movlb	15	; () banked
   765  001156  913A               	bcf	58,0,b	;volatile
   766                           
   767                           ; BSR set to: 15
   768  001158  9094               	bcf	3988,0,c	;volatile
   769                           
   770                           ; BSR set to: 15
   771                           ;main.c: 35: (PinFunction.RA5 = 0, PinDirection.RA5 = 0 );
   772  00115A  010F               	movlb	15	; () banked
   773  00115C  010F               	movlb	15	; () banked
   774  00115E  9B38               	bcf	56,5,b	;volatile
   775                           
   776                           ; BSR set to: 15
   777  001160  9A92               	bcf	3986,5,c	;volatile
   778                           
   779                           ; BSR set to: 15
   780                           ;main.c: 36: (PinFunction.RB4 = 0, PinDirection.RB4 = 0 );
   781  001162  010F               	movlb	15	; () banked
   782  001164  010F               	movlb	15	; () banked
   783  001166  9939               	bcf	57,4,b	;volatile
   784                           
   785                           ; BSR set to: 15
   786  001168  9893               	bcf	3987,4,c	;volatile
   787                           
   788                           ; BSR set to: 15
   789                           ;main.c: 37: (PinFunction.SDO2 = 0, PinDirection.SDO2 = 0 );
   790  00116A  010F               	movlb	15	; () banked
   791  00116C  010F               	movlb	15	; () banked
   792  00116E  9739               	bcf	57,3,b	;volatile
   793                           
   794                           ; BSR set to: 15
   795  001170  9693               	bcf	3987,3,c	;volatile
   796                           
   797                           ; BSR set to: 15
   798                           ;main.c: 38: (PinFunction.RC5 = 0, PinDirection.RC5 = 0 );
   799  001172  010F               	movlb	15	; () banked
   800  001174  010F               	movlb	15	; () banked
   801  001176  9B3A               	bcf	58,5,b	;volatile
   802                           
   803                           ; BSR set to: 15
   804  001178  9A94               	bcf	3988,5,c	;volatile
   805                           
   806                           ; BSR set to: 15
   807                           ;main.c: 41: (PinFunction.AN0 = 1, PinDirection.AN0 = 1 );
   808  00117A  010F               	movlb	15	; () banked
   809  00117C  010F               	movlb	15	; () banked
   810  00117E  8138               	bsf	56,0,b	;volatile
   811                           
   812                           ; BSR set to: 15
   813  001180  8092               	bsf	3986,0,c	;volatile
   814                           
   815                           ; BSR set to: 15
   816                           ;main.c: 42: ADC.SetChannel(0b00000);
   817  001182  D801               	call	u938
   818  001184  D00D               	goto	u939
   819  001186                     u938:
   820  001186  0005               	push	
   821  001188  6EFA               	movwf	pclath,c
   822  00118A  0100               	movlb	0	; () banked
   823  00118C  0100               	movlb	0	; () banked
   824  00118E  5184               	movf	(_ADC+2)& (0+255),w,b
   825  001190  6EFD               	movwf	tosl,c
   826  001192  0100               	movlb	0	; () banked
   827  001194  5185               	movf	(_ADC+3)& (0+255),w,b
   828  001196  6EFE               	movwf	tosh,c
   829  001198  6AFF               	clrf	tosu,c
   830  00119A  50FA               	movf	pclath,w,c
   831  00119C  0E00               	movlw	0
   832  00119E  0012               	return		;indir
   833  0011A0                     u939:
   834                           
   835                           ;main.c: 43: ADC.Open();
   836  0011A0  D801               	call	u948
   837  0011A2  D00C               	goto	l1877
   838  0011A4                     u948:
   839  0011A4  0005               	push	
   840  0011A6  6EFA               	movwf	pclath,c
   841  0011A8  0100               	movlb	0	; () banked
   842  0011AA  0100               	movlb	0	; () banked
   843  0011AC  5182               	movf	_ADC& (0+255),w,b
   844  0011AE  6EFD               	movwf	tosl,c
   845  0011B0  0100               	movlb	0	; () banked
   846  0011B2  5183               	movf	(_ADC+1)& (0+255),w,b
   847  0011B4  6EFE               	movwf	tosh,c
   848  0011B6  6AFF               	clrf	tosu,c
   849  0011B8  50FA               	movf	pclath,w,c
   850  0011BA  0012               	return		;indir
   851  0011BC                     l1877:
   852                           
   853                           ;main.c: 47: {
   854                           ;main.c: 48: ADCvalue = ADC.ReadData();
   855  0011BC  D801               	call	u958
   856  0011BE  D00C               	goto	u959
   857  0011C0                     u958:
   858  0011C0  0005               	push	
   859  0011C2  6EFA               	movwf	pclath,c
   860  0011C4  0100               	movlb	0	; () banked
   861  0011C6  0100               	movlb	0	; () banked
   862  0011C8  5186               	movf	(_ADC+4)& (0+255),w,b
   863  0011CA  6EFD               	movwf	tosl,c
   864  0011CC  0100               	movlb	0	; () banked
   865  0011CE  5187               	movf	(_ADC+5)& (0+255),w,b
   866  0011D0  6EFE               	movwf	tosh,c
   867  0011D2  6AFF               	clrf	tosu,c
   868  0011D4  50FA               	movf	pclath,w,c
   869  0011D6  0012               	return		;indir
   870  0011D8                     u959:
   871  0011D8  C020  F0A7         	movff	?_ReadData,main@ADCvalue
   872  0011DC  C021  F0A8         	movff	?_ReadData+1,main@ADCvalue+1
   873                           
   874                           ;main.c: 49: MSB = ADCvalue>>8;
   875  0011E0  0100               	movlb	0	; () banked
   876  0011E2  C0A8  F0A0         	movff	main@ADCvalue+1,??_main
   877  0011E6  0100               	movlb	0	; () banked
   878  0011E8  6BA1               	clrf	(??_main+1)& (0+255),b
   879  0011EA  BFA0               	btfsc	??_main& (0+255),7,b
   880  0011EC  69A1               	setf	(??_main+1)& (0+255),b
   881  0011EE  0100               	movlb	0	; () banked
   882  0011F0  51A0               	movf	??_main& (0+255),w,b
   883  0011F2  0100               	movlb	0	; () banked
   884  0011F4  0100               	movlb	0	; () banked
   885  0011F6  6FA5               	movwf	main@MSB& (0+255),b
   886                           
   887                           ; BSR set to: 0
   888                           ;main.c: 50: LSB = ADCvalue;
   889  0011F8  C0A7  F0A6         	movff	main@ADCvalue,main@LSB
   890                           
   891                           ; BSR set to: 0
   892                           ;main.c: 51: Serial2.SendByte(MSB);
   893  0011FC  D801               	call	u968
   894  0011FE  D00F               	goto	u969
   895  001200                     u968:
   896  001200  0005               	push	
   897  001202  6EFA               	movwf	pclath,c
   898  001204  0100               	movlb	0	; () banked
   899  001206  0100               	movlb	0	; () banked
   900  001208  5178               	movf	(_Serial2+2)& (0+255),w,b
   901  00120A  6EFD               	movwf	tosl,c
   902  00120C  0100               	movlb	0	; () banked
   903  00120E  5179               	movf	(_Serial2+3)& (0+255),w,b
   904  001210  6EFE               	movwf	tosh,c
   905  001212  6AFF               	clrf	tosu,c
   906  001214  50FA               	movf	pclath,w,c
   907  001216  0100               	movlb	0	; () banked
   908  001218  0100               	movlb	0	; () banked
   909  00121A  51A5               	movf	main@MSB& (0+255),w,b
   910  00121C  0012               	return		;indir
   911  00121E                     u969:
   912                           
   913                           ;main.c: 52: Serial2.SendByte(LSB);
   914  00121E  D801               	call	u978
   915  001220  D00F               	goto	u979
   916  001222                     u978:
   917  001222  0005               	push	
   918  001224  6EFA               	movwf	pclath,c
   919  001226  0100               	movlb	0	; () banked
   920  001228  0100               	movlb	0	; () banked
   921  00122A  5178               	movf	(_Serial2+2)& (0+255),w,b
   922  00122C  6EFD               	movwf	tosl,c
   923  00122E  0100               	movlb	0	; () banked
   924  001230  5179               	movf	(_Serial2+3)& (0+255),w,b
   925  001232  6EFE               	movwf	tosh,c
   926  001234  6AFF               	clrf	tosu,c
   927  001236  50FA               	movf	pclath,w,c
   928  001238  0100               	movlb	0	; () banked
   929  00123A  0100               	movlb	0	; () banked
   930  00123C  51A6               	movf	main@LSB& (0+255),w,b
   931  00123E  0012               	return		;indir
   932  001240                     u979:
   933                           
   934                           ;main.c: 54: if(ADCvalue>24 && ADCvalue<=35)
   935  001240  0100               	movlb	0	; () banked
   936  001242  0100               	movlb	0	; () banked
   937  001244  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
   938  001246  0A80               	xorlw	128
   939  001248  0F80               	addlw	-128
   940  00124A  0E19               	movlw	25
   941  00124C  B4D8               	btfsc	status,2,c
   942  00124E  5DA7               	subwf	main@ADCvalue& (0+255),w,b
   943  001250  A0D8               	btfss	status,0,c
   944  001252  D011               	goto	l1893
   945                           
   946                           ; BSR set to: 0
   947  001254  0100               	movlb	0	; () banked
   948  001256  0100               	movlb	0	; () banked
   949  001258  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
   950  00125A  0A80               	xorlw	128
   951  00125C  6EF3               	movwf	prodl,c
   952  00125E  0E80               	movlw	128
   953  001260  5CF3               	subwf	prodl,w,c
   954  001262  0E24               	movlw	36
   955  001264  B4D8               	btfsc	status,2,c
   956  001266  5DA7               	subwf	main@ADCvalue& (0+255),w,b
   957  001268  B0D8               	btfsc	status,0,c
   958  00126A  D005               	goto	l1893
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 55: {
   962                           ;main.c: 56: PinWrite.RC0=1;
   963  00126C  808B               	bsf	3979,0,c	;volatile
   964                           
   965                           ;main.c: 57: PinWrite.RA5=0;
   966  00126E  9A89               	bcf	3977,5,c	;volatile
   967                           
   968                           ;main.c: 58: PinWrite.RB4=1;
   969  001270  888A               	bsf	3978,4,c	;volatile
   970                           
   971                           ;main.c: 59: PinWrite.SDO2=0;
   972  001272  968A               	bcf	3978,3,c	;volatile
   973                           
   974                           ;main.c: 60: PinWrite.RC5=0;
   975  001274  9A8B               	bcf	3979,5,c	;volatile
   976  001276                     l1893:
   977                           
   978                           ; BSR set to: 0
   979                           ;main.c: 61: }
   980                           ;main.c: 63: if(ADCvalue<=24)
   981  001276  0100               	movlb	0	; () banked
   982  001278  0100               	movlb	0	; () banked
   983  00127A  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
   984  00127C  0A80               	xorlw	128
   985  00127E  6EF3               	movwf	prodl,c
   986  001280  0E80               	movlw	128
   987  001282  5CF3               	subwf	prodl,w,c
   988  001284  0E19               	movlw	25
   989  001286  B4D8               	btfsc	status,2,c
   990  001288  5DA7               	subwf	main@ADCvalue& (0+255),w,b
   991  00128A  A0D8               	btfss	status,0,c
   992  00128C  D023               	goto	l1899
   993  00128E  D02C               	goto	l1901
   994  001290                     l33:
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 66: {
   998                           ;main.c: 67: PinWrite.RC0=1;
   999  001290  808B               	bsf	3979,0,c	;volatile
  1000                           
  1001                           ;main.c: 68: PinWrite.RA5=0;
  1002  001292  9A89               	bcf	3977,5,c	;volatile
  1003                           
  1004                           ;main.c: 69: PinWrite.RB4=0;
  1005  001294  988A               	bcf	3978,4,c	;volatile
  1006                           
  1007                           ;main.c: 70: PinWrite.SDO2=1;
  1008  001296  868A               	bsf	3978,3,c	;volatile
  1009                           
  1010                           ;main.c: 71: PinWrite.RC5=1;
  1011  001298  8A8B               	bsf	3979,5,c	;volatile
  1012                           
  1013                           ;main.c: 73: PIR1bits.TMR2IF=0;
  1014  00129A  929E               	bcf	3998,1,c	;volatile
  1015  00129C                     l34:
  1016  00129C  A29E               	btfss	3998,1,c	;volatile
  1017  00129E  D7FE               	goto	l34
  1018                           
  1019                           ;main.c: 76: PinWrite.RC0=1;
  1020  0012A0  808B               	bsf	3979,0,c	;volatile
  1021                           
  1022                           ;main.c: 77: PinWrite.RA5=0;
  1023  0012A2  9A89               	bcf	3977,5,c	;volatile
  1024                           
  1025                           ;main.c: 78: PinWrite.RB4=1;
  1026  0012A4  888A               	bsf	3978,4,c	;volatile
  1027                           
  1028                           ;main.c: 79: PinWrite.SDO2=0;
  1029  0012A6  968A               	bcf	3978,3,c	;volatile
  1030                           
  1031                           ;main.c: 80: PinWrite.RC5=0;
  1032  0012A8  9A8B               	bcf	3979,5,c	;volatile
  1033                           
  1034                           ;main.c: 82: PIR1bits.TMR2IF=0;
  1035  0012AA  929E               	bcf	3998,1,c	;volatile
  1036  0012AC                     l37:
  1037  0012AC  A29E               	btfss	3998,1,c	;volatile
  1038  0012AE  D7FE               	goto	l37
  1039                           
  1040                           ;main.c: 85: ADCvalue = ADC.ReadData();
  1041  0012B0  D801               	call	u1038
  1042  0012B2  D00C               	goto	u1039
  1043  0012B4                     u1038:
  1044  0012B4  0005               	push	
  1045  0012B6  6EFA               	movwf	pclath,c
  1046  0012B8  0100               	movlb	0	; () banked
  1047  0012BA  0100               	movlb	0	; () banked
  1048  0012BC  5186               	movf	(_ADC+4)& (0+255),w,b
  1049  0012BE  6EFD               	movwf	tosl,c
  1050  0012C0  0100               	movlb	0	; () banked
  1051  0012C2  5187               	movf	(_ADC+5)& (0+255),w,b
  1052  0012C4  6EFE               	movwf	tosh,c
  1053  0012C6  6AFF               	clrf	tosu,c
  1054  0012C8  50FA               	movf	pclath,w,c
  1055  0012CA  0012               	return		;indir
  1056  0012CC                     u1039:
  1057  0012CC  C020  F0A7         	movff	?_ReadData,main@ADCvalue
  1058  0012D0  C021  F0A8         	movff	?_ReadData+1,main@ADCvalue+1
  1059  0012D4                     l1899:
  1060  0012D4  0100               	movlb	0	; () banked
  1061  0012D6  0100               	movlb	0	; () banked
  1062  0012D8  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
  1063  0012DA  0A80               	xorlw	128
  1064  0012DC  0F80               	addlw	-128
  1065  0012DE  0E1B               	movlw	27
  1066  0012E0  B4D8               	btfsc	status,2,c
  1067  0012E2  5DA7               	subwf	main@ADCvalue& (0+255),w,b
  1068  0012E4  A0D8               	btfss	status,0,c
  1069  0012E6  D7D4               	goto	l33
  1070  0012E8                     l1901:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;main.c: 86: }
  1074                           ;main.c: 87: }
  1075                           ;main.c: 89: if(ADCvalue >35)
  1076  0012E8  0100               	movlb	0	; () banked
  1077  0012EA  0100               	movlb	0	; () banked
  1078  0012EC  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
  1079  0012EE  0A80               	xorlw	128
  1080  0012F0  0F80               	addlw	-128
  1081  0012F2  0E24               	movlw	36
  1082  0012F4  B4D8               	btfsc	status,2,c
  1083  0012F6  5DA7               	subwf	main@ADCvalue& (0+255),w,b
  1084  0012F8  B0D8               	btfsc	status,0,c
  1085  0012FA  D023               	goto	l1907
  1086  0012FC  D75F               	goto	l1877
  1087  0012FE                     l43:
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;main.c: 92: {
  1091                           ;main.c: 93: PinWrite.RC0=0;
  1092  0012FE  908B               	bcf	3979,0,c	;volatile
  1093                           
  1094                           ;main.c: 94: PinWrite.RA5=1;
  1095  001300  8A89               	bsf	3977,5,c	;volatile
  1096                           
  1097                           ;main.c: 95: PinWrite.RB4=1;
  1098  001302  888A               	bsf	3978,4,c	;volatile
  1099                           
  1100                           ;main.c: 96: PinWrite.SDO2=0;
  1101  001304  968A               	bcf	3978,3,c	;volatile
  1102                           
  1103                           ;main.c: 97: PinWrite.RC5=0;
  1104  001306  9A8B               	bcf	3979,5,c	;volatile
  1105                           
  1106                           ;main.c: 99: PIR1bits.TMR2IF=0;
  1107  001308  929E               	bcf	3998,1,c	;volatile
  1108  00130A                     l44:
  1109  00130A  A29E               	btfss	3998,1,c	;volatile
  1110  00130C  D7FE               	goto	l44
  1111                           
  1112                           ;main.c: 102: PinWrite.RC0=1;
  1113  00130E  808B               	bsf	3979,0,c	;volatile
  1114                           
  1115                           ;main.c: 103: PinWrite.RA5=0;
  1116  001310  9A89               	bcf	3977,5,c	;volatile
  1117                           
  1118                           ;main.c: 104: PinWrite.RB4=1;
  1119  001312  888A               	bsf	3978,4,c	;volatile
  1120                           
  1121                           ;main.c: 105: PinWrite.SDO2=0;
  1122  001314  968A               	bcf	3978,3,c	;volatile
  1123                           
  1124                           ;main.c: 106: PinWrite.RC5=0;
  1125  001316  9A8B               	bcf	3979,5,c	;volatile
  1126                           
  1127                           ;main.c: 108: PIR1bits.TMR2IF=0;
  1128  001318  929E               	bcf	3998,1,c	;volatile
  1129  00131A                     l47:
  1130  00131A  A29E               	btfss	3998,1,c	;volatile
  1131  00131C  D7FE               	goto	l47
  1132                           
  1133                           ;main.c: 111: ADCvalue = ADC.ReadData();
  1134  00131E  D801               	call	u1088
  1135  001320  D00C               	goto	u1089
  1136  001322                     u1088:
  1137  001322  0005               	push	
  1138  001324  6EFA               	movwf	pclath,c
  1139  001326  0100               	movlb	0	; () banked
  1140  001328  0100               	movlb	0	; () banked
  1141  00132A  5186               	movf	(_ADC+4)& (0+255),w,b
  1142  00132C  6EFD               	movwf	tosl,c
  1143  00132E  0100               	movlb	0	; () banked
  1144  001330  5187               	movf	(_ADC+5)& (0+255),w,b
  1145  001332  6EFE               	movwf	tosh,c
  1146  001334  6AFF               	clrf	tosu,c
  1147  001336  50FA               	movf	pclath,w,c
  1148  001338  0012               	return		;indir
  1149  00133A                     u1089:
  1150  00133A  C020  F0A7         	movff	?_ReadData,main@ADCvalue
  1151  00133E  C021  F0A8         	movff	?_ReadData+1,main@ADCvalue+1
  1152  001342                     l1907:
  1153  001342  0100               	movlb	0	; () banked
  1154  001344  0100               	movlb	0	; () banked
  1155  001346  51A8               	movf	(main@ADCvalue+1)& (0+255),w,b
  1156  001348  0A80               	xorlw	128
  1157  00134A  6EF3               	movwf	prodl,c
  1158  00134C  0E80               	movlw	128
  1159  00134E  5CF3               	subwf	prodl,w,c
  1160  001350  0E22               	movlw	34
  1161  001352  B4D8               	btfsc	status,2,c
  1162  001354  5DA7               	subwf	main@ADCvalue& (0+255),w,b
  1163  001356  A0D8               	btfss	status,0,c
  1164  001358  D731               	goto	l1877
  1165  00135A  D7D1               	goto	l43
  1166  00135C                     __end_of_main:
  1167                           	opt stack 0
  1168                           tosu	equ	0xFFF
  1169                           tosh	equ	0xFFE
  1170                           tosl	equ	0xFFD
  1171                           pclath	equ	0xFFA
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           prodl	equ	0xFF3
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _SetTimer2 *****************
  1184 ;; Defined at:
  1185 ;;		line 149 in file "EAB_Timer.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  prescalar       1    wreg     unsigned char 
  1188 ;;  postscalar      1   31[COMRAM] unsigned char 
  1189 ;;  period          1   32[COMRAM] unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  prescalar       1   34[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      unsigned char 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;Total ram usage:        4 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    2
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text1
  1216  001818                     __ptext1:
  1217                           	opt stack 0
  1218  001818                     _SetTimer2:
  1219                           	opt stack 28
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;incstack = 0
  1223                           ;SetTimer2@prescalar stored from wreg
  1224  001818  CFE8 F023          	movff	wreg,SetTimer2@prescalar
  1225  00181C  50BA               	movf	4026,w,c	;volatile
  1226  00181E  1823               	xorwf	SetTimer2@prescalar,w,c
  1227  001820  0BFC               	andlw	-4
  1228  001822  1823               	xorwf	SetTimer2@prescalar,w,c
  1229  001824  6EBA               	movwf	4026,c	;volatile
  1230  001826  C020  F022         	movff	SetTimer2@postscalar,??_SetTimer2
  1231  00182A  4622               	rlncf	??_SetTimer2,f,c
  1232  00182C  4622               	rlncf	??_SetTimer2,f,c
  1233  00182E  4622               	rlncf	??_SetTimer2,f,c
  1234  001830  50BA               	movf	4026,w,c	;volatile
  1235  001832  1822               	xorwf	??_SetTimer2,w,c
  1236  001834  0B87               	andlw	-121
  1237  001836  1822               	xorwf	??_SetTimer2,w,c
  1238  001838  6EBA               	movwf	4026,c	;volatile
  1239  00183A  84BA               	bsf	4026,2,c	;volatile
  1240  00183C  C021  FFBB         	movff	SetTimer2@period,4027	;volatile
  1241  001840  0012               	return	
  1242  001842                     __end_of_SetTimer2:
  1243                           	opt stack 0
  1244                           tosu	equ	0xFFF
  1245                           tosh	equ	0xFFE
  1246                           tosl	equ	0xFFD
  1247                           pclath	equ	0xFFA
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           prodl	equ	0xFF3
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           fsr1l	equ	0xFE1
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _SetFreq_8MHZ *****************
  1260 ;; Defined at:
  1261 ;;		line 85 in file "EAB_Oscillator.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    2
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text2
  1290  00186A                     __ptext2:
  1291                           	opt stack 0
  1292  00186A                     _SetFreq_8MHZ:
  1293                           	opt stack 28
  1294                           
  1295                           ;incstack = 0
  1296  00186A  50D3               	movf	4051,w,c	;volatile
  1297  00186C  0B8C               	andlw	140
  1298  00186E  0962               	iorlw	98
  1299  001870  6ED3               	movwf	4051,c	;volatile
  1300  001872  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
  1301  001874  0E06               	movlw	6
  1302  001876  6E3D               	movwf	_OscFreqIndex,c
  1303  001878  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
  1304  00187A  0E00               	movlw	0
  1305  00187C  6E39               	movwf	_OscFreq,c
  1306  00187E  0E12               	movlw	18
  1307  001880  6E3A               	movwf	_OscFreq+1,c
  1308  001882  0E7A               	movlw	122
  1309  001884  6E3B               	movwf	_OscFreq+2,c
  1310  001886  0E00               	movlw	0
  1311  001888  6E3C               	movwf	_OscFreq+3,c
  1312  00188A  0012               	return	
  1313  00188C                     __end_of_SetFreq_8MHZ:
  1314                           	opt stack 0
  1315                           tosu	equ	0xFFF
  1316                           tosh	equ	0xFFE
  1317                           tosl	equ	0xFFD
  1318                           pclath	equ	0xFFA
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           prodl	equ	0xFF3
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _SetChannel *****************
  1331 ;; Defined at:
  1332 ;;		line 66 in file "EAB_ADC.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  channel         1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  channel         1   32[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361  0018AE                     __ptext3:
  1362                           	opt stack 0
  1363  0018AE                     _SetChannel:
  1364                           	opt stack 28
  1365                           
  1366                           ;incstack = 0
  1367                           ;SetChannel@channel stored from wreg
  1368  0018AE  CFE8 F021          	movff	wreg,SetChannel@channel
  1369  0018B2  C021  F020         	movff	SetChannel@channel,??_SetChannel
  1370  0018B6  4620               	rlncf	??_SetChannel,f,c
  1371  0018B8  4620               	rlncf	??_SetChannel,f,c
  1372  0018BA  50C2               	movf	4034,w,c	;volatile
  1373  0018BC  1820               	xorwf	??_SetChannel,w,c
  1374  0018BE  0B83               	andlw	-125
  1375  0018C0  1820               	xorwf	??_SetChannel,w,c
  1376  0018C2  6EC2               	movwf	4034,c	;volatile
  1377  0018C4  82C2               	bsf	4034,1,c	;volatile
  1378  0018C6  0012               	return	
  1379  0018C8                     __end_of_SetChannel:
  1380                           	opt stack 0
  1381                           tosu	equ	0xFFF
  1382                           tosh	equ	0xFFE
  1383                           tosl	equ	0xFFD
  1384                           pclath	equ	0xFFA
  1385                           tblptru	equ	0xFF8
  1386                           tblptrh	equ	0xFF7
  1387                           tblptrl	equ	0xFF6
  1388                           tablat	equ	0xFF5
  1389                           prodl	equ	0xFF3
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _SendByte1 *****************
  1397 ;; Defined at:
  1398 ;;		line 87 in file "EAB_Serial.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  Data            1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  Data            1   31[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    2
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text4
  1427  0018EC                     __ptext4:
  1428                           	opt stack 0
  1429  0018EC                     _SendByte1:
  1430                           	opt stack 28
  1431                           
  1432                           ;incstack = 0
  1433                           ;SendByte1@Data stored from wreg
  1434  0018EC  CFE8 F020          	movff	wreg,SendByte1@Data
  1435  0018F0                     l260:
  1436  0018F0  A2AC               	btfss	4012,1,c	;volatile
  1437  0018F2  D7FE               	goto	l260
  1438  0018F4  C020  FFAD         	movff	SendByte1@Data,4013	;volatile
  1439  0018F8  0012               	return	
  1440  0018FA                     __end_of_SendByte1:
  1441                           	opt stack 0
  1442                           tosu	equ	0xFFF
  1443                           tosh	equ	0xFFE
  1444                           tosl	equ	0xFFD
  1445                           pclath	equ	0xFFA
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           prodl	equ	0xFF3
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           postdec1	equ	0xFE5
  1454                           fsr1l	equ	0xFE1
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _SendByte2 *****************
  1458 ;; Defined at:
  1459 ;;		line 94 in file "EAB_Serial.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  Data            1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  Data            1   31[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      unsigned char 
  1466 ;; Registers used:
  1467 ;;		wreg
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    2
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text5
  1488  0018FA                     __ptext5:
  1489                           	opt stack 0
  1490  0018FA                     _SendByte2:
  1491                           	opt stack 28
  1492                           
  1493                           ;incstack = 0
  1494                           ;SendByte2@Data stored from wreg
  1495  0018FA  CFE8 F020          	movff	wreg,SendByte2@Data
  1496  0018FE                     l266:
  1497  0018FE  A272               	btfss	3954,1,c	;volatile
  1498  001900  D7FE               	goto	l266
  1499  001902  C020  FF73         	movff	SendByte2@Data,3955	;volatile
  1500  001906  0012               	return	
  1501  001908                     __end_of_SendByte2:
  1502                           	opt stack 0
  1503                           tosu	equ	0xFFF
  1504                           tosh	equ	0xFFE
  1505                           tosl	equ	0xFFD
  1506                           pclath	equ	0xFFA
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           prodl	equ	0xFF3
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           postdec1	equ	0xFE5
  1515                           fsr1l	equ	0xFE1
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _ReadData *****************
  1519 ;; Defined at:
  1520 ;;		line 73 in file "EAB_ADC.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  ADCdata         2   35[COMRAM] short 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2   31[COMRAM] short 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:        6 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text6
  1549  00188C                     __ptext6:
  1550                           	opt stack 0
  1551  00188C                     _ReadData:
  1552                           	opt stack 28
  1553                           
  1554                           ;incstack = 0
  1555  00188C  50C3               	movf	4035,w,c	;volatile
  1556  00188E  CFC4 F022          	movff	4036,??_ReadData	;volatile
  1557  001892  6A23               	clrf	(??_ReadData+1)& (0+255),c
  1558  001894  C022  F023         	movff	??_ReadData,??_ReadData+1
  1559  001898  6A22               	clrf	??_ReadData,c
  1560  00189A  1022               	iorwf	??_ReadData,w,c
  1561  00189C  6E24               	movwf	ReadData@ADCdata,c
  1562  00189E  5023               	movf	??_ReadData+1,w,c
  1563  0018A0  6E25               	movwf	ReadData@ADCdata+1,c
  1564  0018A2  82C2               	bsf	4034,1,c	;volatile
  1565  0018A4  C024  F020         	movff	ReadData@ADCdata,?_ReadData
  1566  0018A8  C025  F021         	movff	ReadData@ADCdata+1,?_ReadData+1
  1567  0018AC  0012               	return	
  1568  0018AE                     __end_of_ReadData:
  1569                           	opt stack 0
  1570                           tosu	equ	0xFFF
  1571                           tosh	equ	0xFFE
  1572                           tosl	equ	0xFFD
  1573                           pclath	equ	0xFFA
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           prodl	equ	0xFF3
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1l	equ	0xFE1
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function _Open_adc *****************
  1586 ;; Defined at:
  1587 ;;		line 23 in file "EAB_ADC.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  adcs            1   11[BANK0 ] unsigned char 
  1592 ;;  freq            1   10[BANK0 ] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      unsigned char 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;Total ram usage:        6 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		_GetFreq
  1611 ;;		___aldiv
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text7
  1618  0014A8                     __ptext7:
  1619                           	opt stack 0
  1620  0014A8                     _Open_adc:
  1621                           	opt stack 27
  1622                           
  1623                           ;incstack = 0
  1624  0014A8  D801               	call	u1108
  1625  0014AA  D00C               	goto	u1109
  1626  0014AC                     u1108:
  1627  0014AC  0005               	push	
  1628  0014AE  6EFA               	movwf	pclath,c
  1629  0014B0  0100               	movlb	0	; () banked
  1630  0014B2  0100               	movlb	0	; () banked
  1631  0014B4  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1632  0014B6  6EFD               	movwf	tosl,c
  1633  0014B8  0100               	movlb	0	; () banked
  1634  0014BA  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1635  0014BC  6EFE               	movwf	tosh,c
  1636  0014BE  6AFF               	clrf	tosu,c
  1637  0014C0  50FA               	movf	pclath,w,c
  1638  0014C2  0012               	return		;indir
  1639  0014C4                     u1109:
  1640  0014C4  C020  F024         	movff	?_GetFreq,___aldiv@dividend
  1641  0014C8  C021  F025         	movff	?_GetFreq+1,___aldiv@dividend+1
  1642  0014CC  C022  F026         	movff	?_GetFreq+2,___aldiv@dividend+2
  1643  0014D0  C023  F027         	movff	?_GetFreq+3,___aldiv@dividend+3
  1644  0014D4  0E40               	movlw	64
  1645  0014D6  6E28               	movwf	___aldiv@divisor,c
  1646  0014D8  0E42               	movlw	66
  1647  0014DA  6E29               	movwf	___aldiv@divisor+1,c
  1648  0014DC  0E0F               	movlw	15
  1649  0014DE  6E2A               	movwf	___aldiv@divisor+2,c
  1650  0014E0  0E00               	movlw	0
  1651  0014E2  6E2B               	movwf	___aldiv@divisor+3,c
  1652  0014E4  ECAE  F009         	call	___aldiv
  1653  0014E8  C024  F08E         	movff	?___aldiv,??_Open_adc
  1654  0014EC  C025  F08F         	movff	?___aldiv+1,??_Open_adc+1
  1655  0014F0  C026  F090         	movff	?___aldiv+2,??_Open_adc+2
  1656  0014F4  C027  F091         	movff	?___aldiv+3,??_Open_adc+3
  1657  0014F8  0100               	movlb	0	; () banked
  1658  0014FA  518E               	movf	??_Open_adc& (0+255),w,b
  1659  0014FC  0100               	movlb	0	; () banked
  1660  0014FE  0100               	movlb	0	; () banked
  1661  001500  6F92               	movwf	Open_adc@freq& (0+255),b
  1662  001502  D01D               	goto	l1929
  1663  001504                     l1915:
  1664                           
  1665                           ; BSR set to: 0
  1666  001504  0100               	movlb	0	; () banked
  1667  001506  6F8E               	movwf	??_Open_adc& (0+255),b
  1668  001508  0E00               	movlw	0
  1669  00150A  D013               	goto	L5
  1670  00150C                     l1917:
  1671                           
  1672                           ; BSR set to: 0
  1673  00150C  0100               	movlb	0	; () banked
  1674  00150E  6F8E               	movwf	??_Open_adc& (0+255),b
  1675  001510  0E04               	movlw	4
  1676  001512  D00F               	goto	L5
  1677  001514                     l1919:
  1678                           
  1679                           ; BSR set to: 0
  1680  001514  0100               	movlb	0	; () banked
  1681  001516  6F8E               	movwf	??_Open_adc& (0+255),b
  1682  001518  0E01               	movlw	1
  1683  00151A  D00B               	goto	L5
  1684  00151C                     l1921:
  1685                           
  1686                           ; BSR set to: 0
  1687  00151C  0100               	movlb	0	; () banked
  1688  00151E  6F8E               	movwf	??_Open_adc& (0+255),b
  1689  001520  0E05               	movlw	5
  1690  001522  D007               	goto	L5
  1691  001524                     l1923:
  1692                           
  1693                           ; BSR set to: 0
  1694  001524  0100               	movlb	0	; () banked
  1695  001526  6F8E               	movwf	??_Open_adc& (0+255),b
  1696  001528  0E02               	movlw	2
  1697  00152A  D003               	goto	L5
  1698  00152C                     l1925:
  1699                           
  1700                           ; BSR set to: 0
  1701  00152C  0100               	movlb	0	; () banked
  1702  00152E  6F8E               	movwf	??_Open_adc& (0+255),b
  1703  001530  0E06               	movlw	6
  1704  001532                     L5:
  1705  001532  0100               	movlb	0	; () banked
  1706  001534  0100               	movlb	0	; () banked
  1707  001536  6F93               	movwf	Open_adc@adcs& (0+255),b
  1708  001538  0100               	movlb	0	; () banked
  1709  00153A  518E               	movf	??_Open_adc& (0+255),w,b
  1710  00153C  D01B               	goto	l1931
  1711  00153E                     l1929:
  1712                           
  1713                           ; BSR set to: 0
  1714  00153E  0100               	movlb	0	; () banked
  1715  001540  0100               	movlb	0	; () banked
  1716  001542  5192               	movf	Open_adc@freq& (0+255),w,b
  1717                           
  1718                           ; Switch size 1, requested type "space"
  1719                           ; Number of cases is 8, Range of values is 0 to 64
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte           25    13 (average)
  1723                           ;	Chosen strategy is simple_byte
  1724  001544  0A00               	xorlw	0	; case 0
  1725  001546  B4D8               	btfsc	status,2,c
  1726  001548  D7DD               	goto	l1915
  1727  00154A  0A01               	xorlw	1	; case 1
  1728  00154C  B4D8               	btfsc	status,2,c
  1729  00154E  D7DA               	goto	l1915
  1730  001550  0A03               	xorlw	3	; case 2
  1731  001552  B4D8               	btfsc	status,2,c
  1732  001554  D7D7               	goto	l1915
  1733  001556  0A06               	xorlw	6	; case 4
  1734  001558  B4D8               	btfsc	status,2,c
  1735  00155A  D7D8               	goto	l1917
  1736  00155C  0A0C               	xorlw	12	; case 8
  1737  00155E  B4D8               	btfsc	status,2,c
  1738  001560  D7D9               	goto	l1919
  1739  001562  0A18               	xorlw	24	; case 16
  1740  001564  B4D8               	btfsc	status,2,c
  1741  001566  D7DA               	goto	l1921
  1742  001568  0A30               	xorlw	48	; case 32
  1743  00156A  B4D8               	btfsc	status,2,c
  1744  00156C  D7DB               	goto	l1923
  1745  00156E  0A60               	xorlw	96	; case 64
  1746  001570  B4D8               	btfsc	status,2,c
  1747  001572  D7DC               	goto	l1925
  1748  001574                     l1931:
  1749                           
  1750                           ; BSR set to: 0
  1751  001574  50C0               	movf	4032,w,c	;volatile
  1752  001576  0100               	movlb	0	; () banked
  1753  001578  0100               	movlb	0	; () banked
  1754  00157A  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1755  00157C  0BF8               	andlw	-8
  1756  00157E  0100               	movlb	0	; () banked
  1757  001580  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1758  001582  6EC0               	movwf	4032,c	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761  001584  50C0               	movf	4032,w,c	;volatile
  1762  001586  0BC7               	andlw	-57
  1763  001588  0928               	iorlw	40
  1764  00158A  6EC0               	movwf	4032,c	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767  00158C  0EF3               	movlw	-13
  1768  00158E  16C1               	andwf	4033,f,c	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771  001590  0EFC               	movlw	-4
  1772  001592  16C1               	andwf	4033,f,c	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775  001594  8EC0               	bsf	4032,7,c	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778  001596  80C2               	bsf	4034,0,c	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781  001598  82C2               	bsf	4034,1,c	;volatile
  1782  00159A  0012               	return	
  1783  00159C                     __end_of_Open_adc:
  1784                           	opt stack 0
  1785                           tosu	equ	0xFFF
  1786                           tosh	equ	0xFFE
  1787                           tosl	equ	0xFFD
  1788                           pclath	equ	0xFFA
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodl	equ	0xFF3
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1l	equ	0xFE1
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _Open1 *****************
  1801 ;; Defined at:
  1802 ;;		line 33 in file "EAB_Serial.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  BaudRate        4    6[BANK0 ] long 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  freq            4   18[BANK0 ] long 
  1807 ;;  BRGval          2   22[BANK0 ] int 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      unsigned char 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:       18 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    3
  1824 ;; This function calls:
  1825 ;;		_GetFreq
  1826 ;;		___aldiv
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text8
  1833  00159C                     __ptext8:
  1834                           	opt stack 0
  1835  00159C                     _Open1:
  1836                           	opt stack 27
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;incstack = 0
  1840  00159C  D801               	call	u1118
  1841  00159E  D00C               	goto	u1119
  1842  0015A0                     u1118:
  1843  0015A0  0005               	push	
  1844  0015A2  6EFA               	movwf	pclath,c
  1845  0015A4  0100               	movlb	0	; () banked
  1846  0015A6  0100               	movlb	0	; () banked
  1847  0015A8  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1848  0015AA  6EFD               	movwf	tosl,c
  1849  0015AC  0100               	movlb	0	; () banked
  1850  0015AE  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1851  0015B0  6EFE               	movwf	tosh,c
  1852  0015B2  6AFF               	clrf	tosu,c
  1853  0015B4  50FA               	movf	pclath,w,c
  1854  0015B6  0012               	return		;indir
  1855  0015B8                     u1119:
  1856  0015B8  C020  F09A         	movff	?_GetFreq,Open1@freq
  1857  0015BC  C021  F09B         	movff	?_GetFreq+1,Open1@freq+1
  1858  0015C0  C022  F09C         	movff	?_GetFreq+2,Open1@freq+2
  1859  0015C4  C023  F09D         	movff	?_GetFreq+3,Open1@freq+3
  1860  0015C8  C09A  F024         	movff	Open1@freq,___aldiv@dividend
  1861  0015CC  C09B  F025         	movff	Open1@freq+1,___aldiv@dividend+1
  1862  0015D0  C09C  F026         	movff	Open1@freq+2,___aldiv@dividend+2
  1863  0015D4  C09D  F027         	movff	Open1@freq+3,___aldiv@dividend+3
  1864  0015D8  0100               	movlb	0	; () banked
  1865  0015DA  C08E  F092         	movff	Open1@BaudRate,??_Open1
  1866  0015DE  0100               	movlb	0	; () banked
  1867  0015E0  C08F  F093         	movff	Open1@BaudRate+1,??_Open1+1
  1868  0015E4  0100               	movlb	0	; () banked
  1869  0015E6  C090  F094         	movff	Open1@BaudRate+2,??_Open1+2
  1870  0015EA  0100               	movlb	0	; () banked
  1871  0015EC  C091  F095         	movff	Open1@BaudRate+3,??_Open1+3
  1872  0015F0  0E02               	movlw	2
  1873  0015F2                     u1125:
  1874  0015F2  90D8               	bcf	status,0,c
  1875  0015F4  0100               	movlb	0	; () banked
  1876  0015F6  3792               	rlcf	??_Open1& (0+255),f,b
  1877  0015F8  3793               	rlcf	(??_Open1+1)& (0+255),f,b
  1878  0015FA  3794               	rlcf	(??_Open1+2)& (0+255),f,b
  1879  0015FC  3795               	rlcf	(??_Open1+3)& (0+255),f,b
  1880  0015FE  2EE8               	decfsz	wreg,f,c
  1881  001600  D7F8               	goto	u1125
  1882  001602  C092  F028         	movff	??_Open1,___aldiv@divisor
  1883  001606  C093  F029         	movff	??_Open1+1,___aldiv@divisor+1
  1884  00160A  C094  F02A         	movff	??_Open1+2,___aldiv@divisor+2
  1885  00160E  C095  F02B         	movff	??_Open1+3,___aldiv@divisor+3
  1886  001612  ECAE  F009         	call	___aldiv	;wreg free
  1887  001616  C024  F096         	movff	?___aldiv,??_Open1+4
  1888  00161A  C025  F097         	movff	?___aldiv+1,??_Open1+5
  1889  00161E  C026  F098         	movff	?___aldiv+2,??_Open1+6
  1890  001622  C027  F099         	movff	?___aldiv+3,??_Open1+7
  1891  001626  0EFF               	movlw	255
  1892  001628  0100               	movlb	0	; () banked
  1893  00162A  2596               	addwf	(??_Open1+4)& (0+255),w,b
  1894  00162C  0100               	movlb	0	; () banked
  1895  00162E  0100               	movlb	0	; () banked
  1896  001630  6F9E               	movwf	Open1@BRGval& (0+255),b
  1897  001632  0EFF               	movlw	255
  1898  001634  0100               	movlb	0	; () banked
  1899  001636  2197               	addwfc	(??_Open1+5)& (0+255),w,b
  1900  001638  0100               	movlb	0	; () banked
  1901  00163A  6F9F               	movwf	(Open1@BRGval+1)& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904  00163C  0100               	movlb	0	; () banked
  1905  00163E  0100               	movlb	0	; () banked
  1906  001640  519F               	movf	(Open1@BRGval+1)& (0+255),w,b
  1907  001642  0A80               	xorlw	128
  1908  001644  0F80               	addlw	-128
  1909  001646  0E01               	movlw	1
  1910  001648  B4D8               	btfsc	status,2,c
  1911  00164A  5D9E               	subwf	Open1@BRGval& (0+255),w,b
  1912  00164C  A0D8               	btfss	status,0,c
  1913  00164E  0012               	return	
  1914                           
  1915                           ; BSR set to: 0
  1916  001650  86B8               	bsf	4024,3,c	;volatile
  1917  001652  84AC               	bsf	4012,2,c	;volatile
  1918  001654  98AC               	bcf	4012,4,c	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921  001656  0100               	movlb	0	; () banked
  1922  001658  C09F  F092         	movff	Open1@BRGval+1,??_Open1
  1923  00165C  C092  F093         	movff	??_Open1,??_Open1+1
  1924  001660  0100               	movlb	0	; () banked
  1925  001662  6B94               	clrf	(??_Open1+2)& (0+255),b
  1926  001664  0100               	movlb	0	; () banked
  1927  001666  5193               	movf	(??_Open1+1)& (0+255),w,b
  1928  001668  6EB0               	movwf	4016,c	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931  00166A  C09E  FFAF         	movff	Open1@BRGval,4015	;volatile
  1932                           
  1933                           ; BSR set to: 0
  1934  00166E  010F               	movlb	15	; () banked
  1935  001670  010F               	movlb	15	; () banked
  1936  001672  9D3A               	bcf	58,6,b	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939  001674  010F               	movlb	15	; () banked
  1940  001676  010F               	movlb	15	; () banked
  1941  001678  9F3A               	bcf	58,7,b	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944  00167A  8C94               	bsf	3988,6,c	;volatile
  1945                           
  1946                           ; BSR set to: 15
  1947  00167C  8E94               	bsf	3988,7,c	;volatile
  1948                           
  1949                           ; BSR set to: 15
  1950  00167E  8AAC               	bsf	4012,5,c	;volatile
  1951                           
  1952                           ; BSR set to: 15
  1953  001680  88AB               	bsf	4011,4,c	;volatile
  1954                           
  1955                           ; BSR set to: 15
  1956  001682  8EAB               	bsf	4011,7,c	;volatile
  1957  001684  0012               	return	
  1958  001686                     __end_of_Open1:
  1959                           	opt stack 0
  1960                           tosu	equ	0xFFF
  1961                           tosh	equ	0xFFE
  1962                           tosl	equ	0xFFD
  1963                           pclath	equ	0xFFA
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           prodl	equ	0xFF3
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1l	equ	0xFE1
  1973                           status	equ	0xFD8
  1974                           
  1975 ;; *************** function _Open2 *****************
  1976 ;; Defined at:
  1977 ;;		line 61 in file "EAB_Serial.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  BaudRate        4    6[BANK0 ] long 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  freq            4   18[BANK0 ] long 
  1982 ;;  temp            2   22[BANK0 ] int 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      unsigned char 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:       18 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		_GetFreq
  2001 ;;		___aldiv
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text9
  2008  001686                     __ptext9:
  2009                           	opt stack 0
  2010  001686                     _Open2:
  2011                           	opt stack 27
  2012                           
  2013                           ;incstack = 0
  2014  001686  D801               	call	u1148
  2015  001688  D00C               	goto	u1149
  2016  00168A                     u1148:
  2017  00168A  0005               	push	
  2018  00168C  6EFA               	movwf	pclath,c
  2019  00168E  0100               	movlb	0	; () banked
  2020  001690  0100               	movlb	0	; () banked
  2021  001692  5174               	movf	(_Oscillator+20)& (0+255),w,b
  2022  001694  6EFD               	movwf	tosl,c
  2023  001696  0100               	movlb	0	; () banked
  2024  001698  5175               	movf	(_Oscillator+21)& (0+255),w,b
  2025  00169A  6EFE               	movwf	tosh,c
  2026  00169C  6AFF               	clrf	tosu,c
  2027  00169E  50FA               	movf	pclath,w,c
  2028  0016A0  0012               	return		;indir
  2029  0016A2                     u1149:
  2030  0016A2  C020  F09A         	movff	?_GetFreq,Open2@freq
  2031  0016A6  C021  F09B         	movff	?_GetFreq+1,Open2@freq+1
  2032  0016AA  C022  F09C         	movff	?_GetFreq+2,Open2@freq+2
  2033  0016AE  C023  F09D         	movff	?_GetFreq+3,Open2@freq+3
  2034  0016B2  C09A  F024         	movff	Open2@freq,___aldiv@dividend
  2035  0016B6  C09B  F025         	movff	Open2@freq+1,___aldiv@dividend+1
  2036  0016BA  C09C  F026         	movff	Open2@freq+2,___aldiv@dividend+2
  2037  0016BE  C09D  F027         	movff	Open2@freq+3,___aldiv@dividend+3
  2038  0016C2  0100               	movlb	0	; () banked
  2039  0016C4  C08E  F092         	movff	Open2@BaudRate,??_Open2
  2040  0016C8  0100               	movlb	0	; () banked
  2041  0016CA  C08F  F093         	movff	Open2@BaudRate+1,??_Open2+1
  2042  0016CE  0100               	movlb	0	; () banked
  2043  0016D0  C090  F094         	movff	Open2@BaudRate+2,??_Open2+2
  2044  0016D4  0100               	movlb	0	; () banked
  2045  0016D6  C091  F095         	movff	Open2@BaudRate+3,??_Open2+3
  2046  0016DA  0E02               	movlw	2
  2047  0016DC                     u1155:
  2048  0016DC  90D8               	bcf	status,0,c
  2049  0016DE  0100               	movlb	0	; () banked
  2050  0016E0  3792               	rlcf	??_Open2& (0+255),f,b
  2051  0016E2  3793               	rlcf	(??_Open2+1)& (0+255),f,b
  2052  0016E4  3794               	rlcf	(??_Open2+2)& (0+255),f,b
  2053  0016E6  3795               	rlcf	(??_Open2+3)& (0+255),f,b
  2054  0016E8  2EE8               	decfsz	wreg,f,c
  2055  0016EA  D7F8               	goto	u1155
  2056  0016EC  C092  F028         	movff	??_Open2,___aldiv@divisor
  2057  0016F0  C093  F029         	movff	??_Open2+1,___aldiv@divisor+1
  2058  0016F4  C094  F02A         	movff	??_Open2+2,___aldiv@divisor+2
  2059  0016F8  C095  F02B         	movff	??_Open2+3,___aldiv@divisor+3
  2060  0016FC  ECAE  F009         	call	___aldiv	;wreg free
  2061  001700  C024  F096         	movff	?___aldiv,??_Open2+4
  2062  001704  C025  F097         	movff	?___aldiv+1,??_Open2+5
  2063  001708  C026  F098         	movff	?___aldiv+2,??_Open2+6
  2064  00170C  C027  F099         	movff	?___aldiv+3,??_Open2+7
  2065  001710  0EFF               	movlw	255
  2066  001712  0100               	movlb	0	; () banked
  2067  001714  2596               	addwf	(??_Open2+4)& (0+255),w,b
  2068  001716  0100               	movlb	0	; () banked
  2069  001718  0100               	movlb	0	; () banked
  2070  00171A  6F9E               	movwf	Open2@temp& (0+255),b
  2071  00171C  0EFF               	movlw	255
  2072  00171E  0100               	movlb	0	; () banked
  2073  001720  2197               	addwfc	(??_Open2+5)& (0+255),w,b
  2074  001722  0100               	movlb	0	; () banked
  2075  001724  6F9F               	movwf	(Open2@temp+1)& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078  001726  0100               	movlb	0	; () banked
  2079  001728  0100               	movlb	0	; () banked
  2080  00172A  519F               	movf	(Open2@temp+1)& (0+255),w,b
  2081  00172C  0A80               	xorlw	128
  2082  00172E  0F80               	addlw	-128
  2083  001730  0E01               	movlw	1
  2084  001732  B4D8               	btfsc	status,2,c
  2085  001734  5D9E               	subwf	Open2@temp& (0+255),w,b
  2086  001736  A0D8               	btfss	status,0,c
  2087  001738  0012               	return	
  2088                           
  2089                           ; BSR set to: 0
  2090  00173A  8670               	bsf	3952,3,c	;volatile
  2091  00173C  8472               	bsf	3954,2,c	;volatile
  2092  00173E  9872               	bcf	3954,4,c	;volatile
  2093                           
  2094                           ; BSR set to: 0
  2095  001740  0100               	movlb	0	; () banked
  2096  001742  C09F  F092         	movff	Open2@temp+1,??_Open2
  2097  001746  C092  F093         	movff	??_Open2,??_Open2+1
  2098  00174A  0100               	movlb	0	; () banked
  2099  00174C  6B94               	clrf	(??_Open2+2)& (0+255),b
  2100  00174E  0100               	movlb	0	; () banked
  2101  001750  5193               	movf	(??_Open2+1)& (0+255),w,b
  2102  001752  6E76               	movwf	3958,c	;volatile
  2103                           
  2104                           ; BSR set to: 0
  2105  001754  C09E  FF75         	movff	Open2@temp,3957	;volatile
  2106                           
  2107                           ; BSR set to: 0
  2108  001758  8C93               	bsf	3987,6,c	;volatile
  2109                           
  2110                           ; BSR set to: 0
  2111  00175A  8E93               	bsf	3987,7,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  00175C  8A72               	bsf	3954,5,c	;volatile
  2115                           
  2116                           ; BSR set to: 0
  2117  00175E  8871               	bsf	3953,4,c	;volatile
  2118                           
  2119                           ; BSR set to: 0
  2120  001760  8E71               	bsf	3953,7,c	;volatile
  2121  001762  0012               	return	
  2122  001764                     __end_of_Open2:
  2123                           	opt stack 0
  2124                           tosu	equ	0xFFF
  2125                           tosh	equ	0xFFE
  2126                           tosl	equ	0xFFD
  2127                           pclath	equ	0xFFA
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodl	equ	0xFF3
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function ___aldiv *****************
  2140 ;; Defined at:
  2141 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\aldiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  dividend        4   35[COMRAM] long 
  2144 ;;  divisor         4   39[COMRAM] long 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        4    2[BANK0 ] long 
  2147 ;;  sign            1    1[BANK0 ] unsigned char 
  2148 ;;  counter         1    0[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  4   35[COMRAM] long 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:       15 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_Open_adc
  2169 ;;		_Open1
  2170 ;;		_Open2
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text10
  2175  00135C                     __ptext10:
  2176                           	opt stack 0
  2177  00135C                     ___aldiv:
  2178                           	opt stack 27
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;incstack = 0
  2182  00135C  6E2C               	movwf	??___aldiv& (0+255),c
  2183  00135E  0E00               	movlw	0
  2184  001360  0100               	movlb	0	; () banked
  2185  001362  0100               	movlb	0	; () banked
  2186  001364  6F89               	movwf	___aldiv@sign& (0+255),b
  2187  001366  502C               	movf	??___aldiv& (0+255),w,c
  2188                           
  2189                           ; BSR set to: 0
  2190  001368  502B               	movf	___aldiv@divisor+3,w,c
  2191  00136A  0A80               	xorlw	128
  2192  00136C  0F80               	addlw	128
  2193  00136E  E108               	bnz	u1175
  2194  001370  0E00               	movlw	0
  2195  001372  5C2A               	subwf	___aldiv@divisor+2,w,c
  2196  001374  E105               	bnz	u1175
  2197  001376  0E00               	movlw	0
  2198  001378  5C29               	subwf	___aldiv@divisor+1,w,c
  2199  00137A  E102               	bnz	u1175
  2200  00137C  0E00               	movlw	0
  2201  00137E  5C28               	subwf	___aldiv@divisor,w,c
  2202  001380                     u1175:
  2203  001380  B0D8               	btfsc	status,0,c
  2204  001382  D00E               	goto	l2013
  2205                           
  2206                           ; BSR set to: 0
  2207  001384  1E2B               	comf	___aldiv@divisor+3,f,c
  2208  001386  1E2A               	comf	___aldiv@divisor+2,f,c
  2209  001388  1E29               	comf	___aldiv@divisor+1,f,c
  2210  00138A  6C28               	negf	___aldiv@divisor,c
  2211  00138C  0E00               	movlw	0
  2212  00138E  2229               	addwfc	___aldiv@divisor+1,f,c
  2213  001390  222A               	addwfc	___aldiv@divisor+2,f,c
  2214  001392  222B               	addwfc	___aldiv@divisor+3,f,c
  2215                           
  2216                           ; BSR set to: 0
  2217  001394  6E2C               	movwf	??___aldiv& (0+255),c
  2218  001396  0E01               	movlw	1
  2219  001398  0100               	movlb	0	; () banked
  2220  00139A  0100               	movlb	0	; () banked
  2221  00139C  6F89               	movwf	___aldiv@sign& (0+255),b
  2222  00139E  502C               	movf	??___aldiv& (0+255),w,c
  2223  0013A0                     l2013:
  2224                           
  2225                           ; BSR set to: 0
  2226  0013A0  5027               	movf	___aldiv@dividend+3,w,c
  2227  0013A2  0A80               	xorlw	128
  2228  0013A4  0F80               	addlw	128
  2229  0013A6  E108               	bnz	u1185
  2230  0013A8  0E00               	movlw	0
  2231  0013AA  5C26               	subwf	___aldiv@dividend+2,w,c
  2232  0013AC  E105               	bnz	u1185
  2233  0013AE  0E00               	movlw	0
  2234  0013B0  5C25               	subwf	___aldiv@dividend+1,w,c
  2235  0013B2  E102               	bnz	u1185
  2236  0013B4  0E00               	movlw	0
  2237  0013B6  5C24               	subwf	___aldiv@dividend,w,c
  2238  0013B8                     u1185:
  2239  0013B8  B0D8               	btfsc	status,0,c
  2240  0013BA  D00C               	goto	l2019
  2241                           
  2242                           ; BSR set to: 0
  2243  0013BC  1E27               	comf	___aldiv@dividend+3,f,c
  2244  0013BE  1E26               	comf	___aldiv@dividend+2,f,c
  2245  0013C0  1E25               	comf	___aldiv@dividend+1,f,c
  2246  0013C2  6C24               	negf	___aldiv@dividend,c
  2247  0013C4  0E00               	movlw	0
  2248  0013C6  2225               	addwfc	___aldiv@dividend+1,f,c
  2249  0013C8  2226               	addwfc	___aldiv@dividend+2,f,c
  2250  0013CA  2227               	addwfc	___aldiv@dividend+3,f,c
  2251                           
  2252                           ; BSR set to: 0
  2253  0013CC  0E01               	movlw	1
  2254  0013CE  0100               	movlb	0	; () banked
  2255  0013D0  0100               	movlb	0	; () banked
  2256  0013D2  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  2257  0013D4                     l2019:
  2258                           
  2259                           ; BSR set to: 0
  2260  0013D4  0E00               	movlw	0
  2261  0013D6  0100               	movlb	0	; () banked
  2262  0013D8  0100               	movlb	0	; () banked
  2263  0013DA  6F8A               	movwf	___aldiv@quotient& (0+255),b
  2264  0013DC  0E00               	movlw	0
  2265  0013DE  0100               	movlb	0	; () banked
  2266  0013E0  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  2267  0013E2  0E00               	movlw	0
  2268  0013E4  0100               	movlb	0	; () banked
  2269  0013E6  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  2270  0013E8  0E00               	movlw	0
  2271  0013EA  0100               	movlb	0	; () banked
  2272  0013EC  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  2273                           
  2274                           ; BSR set to: 0
  2275  0013EE  502B               	movf	___aldiv@divisor+3,w,c
  2276  0013F0  1028               	iorwf	___aldiv@divisor,w,c
  2277  0013F2  1029               	iorwf	___aldiv@divisor+1,w,c
  2278  0013F4  102A               	iorwf	___aldiv@divisor+2,w,c
  2279  0013F6  B4D8               	btfsc	status,2,c
  2280  0013F8  D039               	goto	l2041
  2281                           
  2282                           ; BSR set to: 0
  2283  0013FA  6E2C               	movwf	??___aldiv& (0+255),c
  2284  0013FC  0E01               	movlw	1
  2285  0013FE  0100               	movlb	0	; () banked
  2286  001400  0100               	movlb	0	; () banked
  2287  001402  6F88               	movwf	___aldiv@counter& (0+255),b
  2288  001404  502C               	movf	??___aldiv& (0+255),w,c
  2289  001406  D008               	goto	l2027
  2290  001408                     l2025:
  2291                           
  2292                           ; BSR set to: 0
  2293  001408  90D8               	bcf	status,0,c
  2294  00140A  3628               	rlcf	___aldiv@divisor,f,c
  2295  00140C  3629               	rlcf	___aldiv@divisor+1,f,c
  2296  00140E  362A               	rlcf	___aldiv@divisor+2,f,c
  2297  001410  362B               	rlcf	___aldiv@divisor+3,f,c
  2298  001412  0100               	movlb	0	; () banked
  2299  001414  0100               	movlb	0	; () banked
  2300  001416  2B88               	incf	___aldiv@counter& (0+255),f,b
  2301  001418                     l2027:
  2302                           
  2303                           ; BSR set to: 0
  2304  001418  AE2B               	btfss	___aldiv@divisor+3,7,c
  2305  00141A  D7F6               	goto	l2025
  2306  00141C                     l2029:
  2307                           
  2308                           ; BSR set to: 0
  2309  00141C  0100               	movlb	0	; () banked
  2310  00141E  90D8               	bcf	status,0,c
  2311  001420  0100               	movlb	0	; () banked
  2312  001422  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  2313  001424  0100               	movlb	0	; () banked
  2314  001426  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2315  001428  0100               	movlb	0	; () banked
  2316  00142A  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2317  00142C  0100               	movlb	0	; () banked
  2318  00142E  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2319                           
  2320                           ; BSR set to: 0
  2321  001430  5028               	movf	___aldiv@divisor,w,c
  2322  001432  5C24               	subwf	___aldiv@dividend,w,c
  2323  001434  5029               	movf	___aldiv@divisor+1,w,c
  2324  001436  5825               	subwfb	___aldiv@dividend+1,w,c
  2325  001438  502A               	movf	___aldiv@divisor+2,w,c
  2326  00143A  5826               	subwfb	___aldiv@dividend+2,w,c
  2327  00143C  502B               	movf	___aldiv@divisor+3,w,c
  2328  00143E  5827               	subwfb	___aldiv@dividend+3,w,c
  2329  001440  A0D8               	btfss	status,0,c
  2330  001442  D00B               	goto	l2037
  2331                           
  2332                           ; BSR set to: 0
  2333  001444  5028               	movf	___aldiv@divisor,w,c
  2334  001446  5E24               	subwf	___aldiv@dividend,f,c
  2335  001448  5029               	movf	___aldiv@divisor+1,w,c
  2336  00144A  5A25               	subwfb	___aldiv@dividend+1,f,c
  2337  00144C  502A               	movf	___aldiv@divisor+2,w,c
  2338  00144E  5A26               	subwfb	___aldiv@dividend+2,f,c
  2339  001450  502B               	movf	___aldiv@divisor+3,w,c
  2340  001452  5A27               	subwfb	___aldiv@dividend+3,f,c
  2341                           
  2342                           ; BSR set to: 0
  2343  001454  0100               	movlb	0	; () banked
  2344  001456  0100               	movlb	0	; () banked
  2345  001458  818A               	bsf	___aldiv@quotient& (0+255),0,b
  2346  00145A                     l2037:
  2347                           
  2348                           ; BSR set to: 0
  2349  00145A  90D8               	bcf	status,0,c
  2350  00145C  322B               	rrcf	___aldiv@divisor+3,f,c
  2351  00145E  322A               	rrcf	___aldiv@divisor+2,f,c
  2352  001460  3229               	rrcf	___aldiv@divisor+1,f,c
  2353  001462  3228               	rrcf	___aldiv@divisor,f,c
  2354                           
  2355                           ; BSR set to: 0
  2356  001464  0100               	movlb	0	; () banked
  2357  001466  0100               	movlb	0	; () banked
  2358  001468  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  2359  00146A  D7D8               	goto	l2029
  2360  00146C                     l2041:
  2361                           
  2362                           ; BSR set to: 0
  2363  00146C  0100               	movlb	0	; () banked
  2364  00146E  0100               	movlb	0	; () banked
  2365  001470  5189               	movf	___aldiv@sign& (0+255),w,b
  2366  001472  B4D8               	btfsc	status,2,c
  2367  001474  D010               	goto	l2045
  2368                           
  2369                           ; BSR set to: 0
  2370  001476  0100               	movlb	0	; () banked
  2371  001478  0100               	movlb	0	; () banked
  2372  00147A  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2373  00147C  0100               	movlb	0	; () banked
  2374  00147E  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2375  001480  0100               	movlb	0	; () banked
  2376  001482  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2377  001484  0100               	movlb	0	; () banked
  2378  001486  6D8A               	negf	___aldiv@quotient& (0+255),b
  2379  001488  0E00               	movlw	0
  2380  00148A  0100               	movlb	0	; () banked
  2381  00148C  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2382  00148E  0100               	movlb	0	; () banked
  2383  001490  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2384  001492  0100               	movlb	0	; () banked
  2385  001494  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2386  001496                     l2045:
  2387                           
  2388                           ; BSR set to: 0
  2389  001496  C08A  F024         	movff	___aldiv@quotient,?___aldiv
  2390  00149A  C08B  F025         	movff	___aldiv@quotient+1,?___aldiv+1
  2391  00149E  C08C  F026         	movff	___aldiv@quotient+2,?___aldiv+2
  2392  0014A2  C08D  F027         	movff	___aldiv@quotient+3,?___aldiv+3
  2393  0014A6  0012               	return	
  2394  0014A8                     __end_of___aldiv:
  2395                           	opt stack 0
  2396                           tosu	equ	0xFFF
  2397                           tosh	equ	0xFFE
  2398                           tosl	equ	0xFFD
  2399                           pclath	equ	0xFFA
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           prodl	equ	0xFF3
  2405                           postinc0	equ	0xFEE
  2406                           wreg	equ	0xFE8
  2407                           postdec1	equ	0xFE5
  2408                           fsr1l	equ	0xFE1
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function _GetFreq *****************
  2412 ;; Defined at:
  2413 ;;		line 128 in file "EAB_Oscillator.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  4   31[COMRAM] long 
  2420 ;; Registers used:
  2421 ;;		None
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:        4 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    2
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_Open_adc
  2438 ;;		_Open1
  2439 ;;		_Open2
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text11
  2444  0018C8                     __ptext11:
  2445                           	opt stack 0
  2446  0018C8                     _GetFreq:
  2447                           	opt stack 27
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;incstack = 0
  2451  0018C8  C039  F020         	movff	_OscFreq,?_GetFreq
  2452  0018CC  C03A  F021         	movff	_OscFreq+1,?_GetFreq+1
  2453  0018D0  C03B  F022         	movff	_OscFreq+2,?_GetFreq+2
  2454  0018D4  C03C  F023         	movff	_OscFreq+3,?_GetFreq+3
  2455  0018D8  0012               	return	
  2456  0018DA                     __end_of_GetFreq:
  2457                           	opt stack 0
  2458                           tosu	equ	0xFFF
  2459                           tosh	equ	0xFFE
  2460                           tosl	equ	0xFFD
  2461                           pclath	equ	0xFFA
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodl	equ	0xFF3
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1l	equ	0xFE1
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _LowPriority_InterruptHandler *****************
  2474 ;; Defined at:
  2475 ;;		line 21 in file "EAB_InterruptHandler.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;		None               void
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;Total ram usage:       17 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		Interrupt level 1
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	intcodelo
  2504  000018                     __pintcodelo:
  2505                           	opt stack 0
  2506  000018                     _LowPriority_InterruptHandler:
  2507                           	opt stack 27
  2508                           
  2509                           ;incstack = 0
  2510  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2511  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2512  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2513  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2514  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2515  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2516  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2517  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2518  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2519  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2520  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2521  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2522  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2523  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2524  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2525  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2526  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2527  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2528  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2529  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2530  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2531  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2532  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2533  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2534  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2535  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2536  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2537  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2538  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2539  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2540  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2541  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2542  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2543  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2544  0000A0  0010               	retfie	
  2545  0000A2                     __end_of_LowPriority_InterruptHandler:
  2546                           	opt stack 0
  2547                           tosu	equ	0xFFF
  2548                           tosh	equ	0xFFE
  2549                           tosl	equ	0xFFD
  2550                           pclatu	equ	0xFFB
  2551                           pclath	equ	0xFFA
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           postinc0	equ	0xFEE
  2559                           fsr0h	equ	0xFEA
  2560                           fsr0l	equ	0xFE9
  2561                           wreg	equ	0xFE8
  2562                           postdec1	equ	0xFE5
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           bsr	equ	0xFE0
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _HighPriority_InterruptHandler *****************
  2571 ;; Defined at:
  2572 ;;		line 14 in file "EAB_InterruptHandler.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		None
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;Total ram usage:       14 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		Interrupt level 2
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	intcode
  2600  000008                     __pintcode:
  2601                           	opt stack 0
  2602  000008                     _HighPriority_InterruptHandler:
  2603                           	opt stack 27
  2604                           
  2605                           ;incstack = 0
  2606  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  2607  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  2608  000010  EFB2  F00B         	goto	int_func
  2609                           tosu	equ	0xFFF
  2610                           tosh	equ	0xFFE
  2611                           tosl	equ	0xFFD
  2612                           pclatu	equ	0xFFB
  2613                           pclath	equ	0xFFA
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           postinc0	equ	0xFEE
  2621                           fsr0h	equ	0xFEA
  2622                           fsr0l	equ	0xFE9
  2623                           wreg	equ	0xFE8
  2624                           postdec1	equ	0xFE5
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           bsr	equ	0xFE0
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632                           	psect	intcode_body
  2633  001764                     __pintcode_body:
  2634                           	opt stack 27
  2635  001764                     int_func:
  2636                           	opt stack 27
  2637  001764  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  2638  001768  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  2639  00176C  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  2640  001770  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  2641  001774  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  2642  001778  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  2643  00177C  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  2644  001780  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  2645  001784  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  2646  001788  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  2647  00178C  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  2648  001790  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  2649  001794  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  2650  001798  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  2651  00179C  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  2652  0017A0  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  2653  0017A4  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  2654  0017A8  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  2655  0017AC  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  2656  0017B0  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  2657  0017B4  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  2658  0017B8  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  2659  0017BC  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  2660  0017C0  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  2661  0017C4  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  2662  0017C8  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  2663  0017CC  0011               	retfie		f
  2664  0017CE                     __end_of_HighPriority_InterruptHandler:
  2665                           	opt stack 0
  2666                           tosu	equ	0xFFF
  2667                           tosh	equ	0xFFE
  2668                           tosl	equ	0xFFD
  2669                           pclatu	equ	0xFFB
  2670                           pclath	equ	0xFFA
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           postinc0	equ	0xFEE
  2678                           fsr0h	equ	0xFEA
  2679                           fsr0l	equ	0xFE9
  2680                           wreg	equ	0xFE8
  2681                           postdec1	equ	0xFE5
  2682                           fsr1h	equ	0xFE2
  2683                           fsr1l	equ	0xFE1
  2684                           bsr	equ	0xFE0
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           tosu	equ	0xFFF
  2689                           tosh	equ	0xFFE
  2690                           tosl	equ	0xFFD
  2691                           pclatu	equ	0xFFB
  2692                           pclath	equ	0xFFA
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           postinc0	equ	0xFEE
  2700                           fsr0h	equ	0xFEA
  2701                           fsr0l	equ	0xFE9
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           bsr	equ	0xFE0
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711                           	psect	rparam
  2712  0000                     tosu	equ	0xFFF
  2713                           tosh	equ	0xFFE
  2714                           tosl	equ	0xFFD
  2715                           pclatu	equ	0xFFB
  2716                           pclath	equ	0xFFA
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           postinc0	equ	0xFEE
  2724                           fsr0h	equ	0xFEA
  2725                           fsr0l	equ	0xFE9
  2726                           wreg	equ	0xFE8
  2727                           postdec1	equ	0xFE5
  2728                           fsr1h	equ	0xFE2
  2729                           fsr1l	equ	0xFE1
  2730                           bsr	equ	0xFE0
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        57
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      63
    BANK0           160     33      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S132$2$0	PTR unsigned char  size(2) Largest target is 0

    S132$3$0	PTR unsigned char  size(2) Largest target is 0

    S1901$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S1901$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    S1855$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S1855$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S1855$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S1855$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S1855$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S1855$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S242$ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    ADC.ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    S242$SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    ADC.SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    S242$Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    ADC.Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    S132$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S132$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S132$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S132$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S132$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S132$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S85$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S85$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S85$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S85$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv
    ___aldiv->_GetFreq

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3758
                                             24 BANK0      9     9      0
                              _Open1 *
                              _Open2 *
                           _Open_adc *
                           _ReadData *
                          _SendByte1 *
                          _SendByte2 *
                         _SetChannel *
                       _SetFreq_8MHZ *
                          _SetTimer2 *
 ---------------------------------------------------------------------------------
 (1) _SetTimer2                                            4     2      2     152
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetChannel                                           2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SendByte2                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte1                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             6     4      2      23
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Open_adc                                             6     6      0     996
                                              6 BANK0      6     6      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4    1122
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4    1068
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     907
                                             35 COMRAM     9     1      8
                                              0 BANK0      6     6      0
                            _GetFreq (ARG) *
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open2 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open_adc *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _ReadData *
   _SendByte1 *
   _SendByte2 *
   _SetChannel *
   _SetFreq_8MHZ *
   _SetTimer2 *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      49       5       45.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      12        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue May 06 18:06:59 2014

                                    l33 1290                                      l34 129C  
                                    l43 12FE                                      l44 130A  
                                    l37 12AC                                      l47 131A  
                                    bsr 000FE0                                     l260 18F0  
                                   _ADC 0082                                     l266 18FE  
                                   _PR2 000FBB                                     u908 1094  
                                   u909 10AC                                     u918 10C8  
                                   u919 111C                                     u928 113A  
                                   u929 1152                                     u938 1186  
                                   u939 11A0                                     u948 11A4  
                                   u958 11C0                                     u959 11D8  
                                   u968 1200                                     u969 121E  
                                   u978 1222                                     u979 1240  
                                   tosl 000FFD                                     wreg 000FE8  
                            _TXSTA1bits 000FAC                              _TXSTA2bits 000F72  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l2013 13A0  
                                  l2025 1408                                    l2041 146C  
                                  l2027 1418                                    l2019 13D4  
                                  l2045 1496                                    l2037 145A  
                                  l2029 141C                                    l1901 12E8  
                                  l1921 151C                                    l1923 1524  
                                  l1915 1504                                    l1931 1574  
                                  l1907 1342                                    l1925 152C  
                                  l1917 150C                                    l1919 1514  
                                  l1929 153E                                    l1893 1276  
                                  l1877 11BC                                    l1899 12D4  
                                  u1108 14AC                                    u1125 15F2  
                                  u1109 14C4                                    u1118 15A0  
                                  u1038 12B4                                    u1119 15B8  
                                  u1039 12CC                                    u1155 16DC  
                                  u1148 168A                                    u1149 16A2  
                                  u1175 1380                                    u1088 1322  
                                  u1185 13B8                                    u1089 133A  
                    _EnableRx2interrupt 000000                          _TIMER2_100usec 1033  
                                  _main 1070                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  fsr2l 000FD9                   __end_of_TIMER0_16mSec 105A  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 18DA                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                         __end_of___aldiv 14A8  
                                 ?_main 0001                                   _T0CON 000FD5  
                                 _T2CON 000FBA                          __CFG_DEBUG$OFF 000000  
                __end_of_TIMER0_130mSec 1029                                   _Open1 159C  
                                 _Open2 1686                  __end_of_TIMER2_100usec 103D  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                         __initialization 17CE  
                          __end_of_main 135C                       SetChannel@channel 0021  
                           Open1@BRGval 009E                        __end_of_ReadData 18AE  
                                ??_main 00A0                        __end_of_Open_adc 159C  
                         __activetblptr 000003                   _SetTimer0_130milliSec 000000  
            __end_of_TIMER2_PR2_100usec 1063                              _SetChannel 18AE  
                                ?_Open1 008E                                  ?_Open2 008E  
                            _SendArray1 000000                              _SendArray2 000000  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0024                                  _SPBRG1 000FAF  
                                _SPBRG2 000F75                                  _TX1REG 000FAD  
                                _TX2REG 000F73                              _Oscillator 0060  
                                _Timer0 1001                                  _Timer1 1069  
                                _Timer2 1010                      __size_of_SendByte1 000E  
                    __size_of_SendByte2 000E                               ??___aldiv 002C  
                    __size_of_SetTimer2 002A                           ?_SetFreq_8MHZ 0001  
                  _SetTimer0_16milliSec 000000                            __pdataCOMRAM 002D  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                            __accesstop 0060                 __end_of__initialization 1812  
                 _SetTimer2_100microSec 000000                          __pcstackCOMRAM 0001  
                         __end_of_Open1 1686                           __end_of_Open2 1764  
                          __pidataBANK0 1842                          ??_SetFreq_8MHZ 0020  
                           ?_SetChannel 0001                                 ??_Open1 0092  
                               ??_Open2 0092                         ReadData@ADCdata 0024  
                     __end_of_SendByte1 18FA                       __end_of_SendByte2 1908  
                           _PinFunction 000F38                       __end_of_SetTimer2 1842  
                             ?_ReadData 0020                              _delayCount 003E  
                             ?_Open_adc 0001                           _SetFreq_32MHZ 000000  
                         _SetFreq_16MHZ 000000   __end_of_HighPriority_InterruptHandler 17CE  
__size_of_HighPriority_InterruptHandler 17C6           _HighPriority_InterruptHandler 0008  
                         _SetFreq_64MHZ 000000                             _SendString1 000000  
                           _SendString2 000000                                 _SPBRGH1 000FB0  
                               _SPBRGH2 000F76                        _TIMER2_PR2_1msec 1047  
                            ??_ReadData 0022                                 _GetFreq 18C8  
                               _OscFreq 0039                              ??_Open_adc 008E  
                               __Hparam 0000                                 __Lparam 0000  
                               _Serial1 002D                                 _Serial2 0076  
                   __size_of_SetChannel 001A                                 ___aldiv 135C  
                          __psmallconst 1000                                 __pcinit 17CE  
                               __ramtop 1000                                 __ptext0 1070  
                               __ptext1 1818                                 __ptext2 186A  
                               __ptext3 18AE                                 __ptext4 18EC  
                               __ptext5 18FA                                 __ptext6 188C  
                               __ptext7 14A8                                 __ptext8 159C  
                               __ptext9 1686                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                               _T2CONbits 000FBA  
                      ___aldiv@dividend 0024                                 main@LSB 00A6  
                               main@MSB 00A5                          __pintcode_body 1764  
                  end_of_initialization 1812                    __end_of_SetFreq_8MHZ 188C  
                               int_func 1764                      _TIMER2_PR2_100usec 105A  
                      ___aldiv@quotient 008A                                 postdec1 000FE5  
                               postinc0 000FEE    __end_of_LowPriority_InterruptHandler 00A2  
 __size_of_LowPriority_InterruptHandler 008A            _LowPriority_InterruptHandler 0018  
                      __CFG_FOSC$INTIO7 000000          ?_HighPriority_InterruptHandler 0001  
                         _TIMER0_16mSec 1051                    __end_of_TIMER0_1mSec 1069  
                  __end_of_TIMER2_1msec 1047                          __end_of_Timer0 1010  
                        __end_of_Timer1 106E                          __end_of_Timer2 101F  
                             Open1@freq 009A                               Open2@freq 009A  
                             Open2@temp 009E                           __pidataCOMRAM 18DA  
         ?_LowPriority_InterruptHandler 0001                            ??_SetChannel 0020  
                   start_initialization 17CE                               _ReadByte1 000000  
                             _ReadByte2 000000                               _SendByte1 18EC  
                             _SendByte2 18FA                            _PinDirection 000F92  
                          Open_adc@adcs 0093                               _SetTimer0 000000  
                             _SetTimer1 000000                               _SetTimer2 1818  
                          Open_adc@freq 0092                       __size_of_ReadData 0022  
                             _Timer0Int 000000                               _Timer1Int 000000  
                             _Timer2Int 000000                           Open1@BaudRate 008E  
                    __end_of_SetChannel 18C8                       __size_of_Open_adc 00F4  
              __end_of_TIMER2_PR2_1msec 1051                      _SetTimer0_1millSec 000000  
                           __pdataBANK0 0060                           Open2@BaudRate 008E  
                    _SetTimer2_1millSec 000000                             __pbssCOMRAM 003E  
                 __size_of_SetFreq_8MHZ 0022                           __pcstackBANK0 0088  
                          _OscFreqIndex 003D                                ?_GetFreq 0020  
                            ?_SendByte1 0001                              ?_SendByte2 0001  
                            ?_SetTimer2 0020                               __pintcode 0008  
                              ?___aldiv 0024                            _SetFreq_1MHZ 000000  
                          _SetFreq_2MHZ 000000                            _SetFreq_4MHZ 000000  
                           __pintcodelo 0018                            _SetFreq_8MHZ 186A  
                           __smallconst 1000                          __size_of_Open1 00EA  
                        __size_of_Open2 00DE          ??_LowPriority_InterruptHandler 0001  
                        _SetFreq_250KHZ 000000                          _SetFreq_500KHZ 000000  
                       ___aldiv@divisor 0028                         ___aldiv@counter 0088  
                              _IPR1bits 000F9F                                _PIE1bits 000F9D  
                              _IPR3bits 000FA5                                _PIE3bits 000FA3  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
                              _RCONbits 000FD0                         SetTimer2@period 0021  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                     __end_of_TIMER0_1Sec 1033  
                          _TIMER0_1mSec 1063                            _TIMER2_1msec 103D  
                             copy_data0 17E6                               copy_data1 1806  
                              _ReadData 188C                             ??_SendByte1 0020  
                           ??_SendByte2 0020                        __size_of_GetFreq 0012  
                           ??_SetTimer2 0022                                _PinWrite 000F89  
                              _Open_adc 14A8                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                      __size_of___aldiv 014C                                __ptext10 135C  
                              __ptext11 18C8                     SetTimer2@postscalar 0020  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 02EC                             _TIMER0_1Sec 1029  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                    SetTimer2@prescalar 0023                          _SetTimer0_1Sec 000000  
                              intlevel1 0000                                intlevel2 0000  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F71  
                            _OSCCONbits 000FD3                            main@ADCvalue 00A7  
                          ___aldiv@sign 0089                           SendByte1@Data 0020  
                         SendByte2@Data 0020  
