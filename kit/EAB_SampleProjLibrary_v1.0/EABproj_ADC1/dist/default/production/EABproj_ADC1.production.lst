

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Aug 18 00:32:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    33  0000                     
    34 ;; Function _SetFreq_250KHZ is unused but had its address taken
    35  0000                     
    36 ;; Function _SetFreq_500KHZ is unused but had its address taken
    37  0000                     
    38 ;; Function _SetFreq_1MHZ is unused but had its address taken
    39  0000                     
    40 ;; Function _SetFreq_2MHZ is unused but had its address taken
    41  0000                     
    42 ;; Function _SetFreq_4MHZ is unused but had its address taken
    43  0000                     
    44 ;; Function _SetFreq_16MHZ is unused but had its address taken
    45  0000                     
    46 ;; Function _SetFreq_32MHZ is unused but had its address taken
    47  0000                     
    48 ;; Function _SetFreq_64MHZ is unused but had its address taken
    49  0000                     
    50 ;; Function _SendArray1 is unused but had its address taken
    51  0000                     
    52 ;; Function _SendArray2 is unused but had its address taken
    53  0000                     
    54 ;; Function _SendString1 is unused but had its address taken
    55  0000                     
    56 ;; Function _SendString2 is unused but had its address taken
    57  0000                     
    58 ;; Function _ReadByte1 is unused but had its address taken
    59  0000                     
    60 ;; Function _ReadByte2 is unused but had its address taken
    61  0000                     
    62 ;; Function _EnableRx1interrupt is unused but had its address taken
    63  0000                     
    64 ;; Function _EnableRx2interrupt is unused but had its address taken
    65  0000                     
    66 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    67  0000                     
    68 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    69  0000                     
    70 ;; Function _SetTimer0_1millSec is unused but had its address taken
    71  0000                     
    72 ;; Function _SetTimer0 is unused but had its address taken
    73  0000                     
    74 ;; Function _Timer0Int is unused but had its address taken
    75  0000                     
    76 ;; Function _SetTimer1 is unused but had its address taken
    77  0000                     
    78 ;; Function _Timer1Int is unused but had its address taken
    79  0000                     
    80 ;; Function _SetTimer2_1millSec is unused but had its address taken
    81  0000                     
    82 ;; Function _SetTimer2_100microSec is unused but had its address taken
    83  0000                     
    84 ;; Function _SetTimer2 is unused but had its address taken
    85  0000                     
    86 ;; Function _Timer2Int is unused but had its address taken
    87  0000                     
    88                           	psect	idataCOMRAM
    89  001750                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _Serial1
    93  001750  141E               	dw	_Open1& (0+65535)
    94  001752  1762               	dw	_SendByte1& (0+65535)
    95  001754  0000               	dw	0
    96  001756  0000               	dw	0
    97  001758  0000               	dw	0
    98  00175A  0000               	dw	0
    99                           
   100                           ;initializer for _OscFreq
   101  00175C  4240               	dw	16960
   102  00175E  000F               	dw	15
   103                           
   104                           ;initializer for _OscFreqIndex
   105  001760  03                 	db	3
   106                           
   107                           	psect	idataBANK0
   108  00169A                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _Oscillator
   112  00169A  0000               	dw	0
   113  00169C  0000               	dw	0
   114  00169E  0000               	dw	0
   115  0016A0  0000               	dw	0
   116  0016A2  0000               	dw	0
   117  0016A4  0000               	dw	0
   118  0016A6  16C2               	dw	_SetFreq_8MHZ& (0+65535)
   119  0016A8  0000               	dw	0
   120  0016AA  0000               	dw	0
   121  0016AC  0000               	dw	0
   122  0016AE  173E               	dw	_GetFreq& (0+65535)
   123                           
   124                           ;initializer for _Serial2
   125  0016B0  1508               	dw	_Open2& (0+65535)
   126  0016B2  1770               	dw	_SendByte2& (0+65535)
   127  0016B4  0000               	dw	0
   128  0016B6  0000               	dw	0
   129  0016B8  0000               	dw	0
   130  0016BA  0000               	dw	0
   131                           
   132                           ;initializer for _ADC
   133  0016BC  132A               	dw	_Open_adc& (0+65535)
   134  0016BE  1724               	dw	_SetChannel& (0+65535)
   135  0016C0  16E4               	dw	_ReadData& (0+65535)
   136                           
   137                           	psect	smallconst
   138  001000                     __psmallconst:
   139                           	opt stack 0
   140  001000  00                 	db	0
   141  001001                     _Timer0:
   142                           	opt stack 0
   143  001001  1706               	dw	_SetTimer0_1Sec& (0+65535)
   144  001003  0000               	dw	0
   145  001005  0000               	dw	0
   146  001007  0000               	dw	0
   147  001009  0000               	dw	0
   148  00100B  0000               	dw	0
   149  00100D  3A                 	db	58
   150  00100E  2C                 	db	44
   151  00100F  7E                 	db	126
   152  001010                     __end_of_Timer0:
   153                           	opt stack 0
   154  001010                     _Timer2:
   155                           	opt stack 0
   156  001010  0000               	dw	0
   157  001012  0000               	dw	0
   158  001014  0000               	dw	0
   159  001016  0000               	dw	0
   160  001018  AA                 	db	170
   161  001019  B3                 	db	179
   162  00101A  3E                 	db	62
   163  00101B  98                 	db	152
   164  00101C  BA                 	db	186
   165  00101D  DC                 	db	220
   166  00101E  FE                 	db	254
   167  00101F                     __end_of_Timer2:
   168                           	opt stack 0
   169  00101F                     _TIMER0_130mSec:
   170                           	opt stack 0
   171  00101F  C1                 	db	193
   172  001020  C4                 	db	196
   173  001021  C5                 	db	197
   174  001022  C6                 	db	198
   175  001023  C7                 	db	199
   176  001024  80                 	db	128
   177  001025  81                 	db	129
   178  001026  82                 	db	130
   179  001027  83                 	db	131
   180  001028  84                 	db	132
   181  001029                     __end_of_TIMER0_130mSec:
   182                           	opt stack 0
   183  001029                     _TIMER0_1Sec:
   184                           	opt stack 0
   185  001029  C4                 	db	196
   186  00102A  C7                 	db	199
   187  00102B  80                 	db	128
   188  00102C  81                 	db	129
   189  00102D  82                 	db	130
   190  00102E  83                 	db	131
   191  00102F  84                 	db	132
   192  001030  85                 	db	133
   193  001031  86                 	db	134
   194  001032  87                 	db	135
   195  001033                     __end_of_TIMER0_1Sec:
   196                           	opt stack 0
   197  001033                     _TIMER2_100usec:
   198                           	opt stack 0
   199  001033  84                 	db	132
   200  001034  84                 	db	132
   201  001035  84                 	db	132
   202  001036  84                 	db	132
   203  001037  84                 	db	132
   204  001038  84                 	db	132
   205  001039  8C                 	db	140
   206  00103A  9C                 	db	156
   207  00103B  BC                 	db	188
   208  00103C  00                 	db	0
   209  00103D                     __end_of_TIMER2_100usec:
   210                           	opt stack 0
   211  00103D                     _TIMER2_1msec:
   212                           	opt stack 0
   213  00103D  84                 	db	132
   214  00103E  84                 	db	132
   215  00103F  84                 	db	132
   216  001040  84                 	db	132
   217  001041  CC                 	db	204
   218  001042  CC                 	db	204
   219  001043  CC                 	db	204
   220  001044  A5                 	db	165
   221  001045  CD                 	db	205
   222  001046  A7                 	db	167
   223  001047                     __end_of_TIMER2_1msec:
   224                           	opt stack 0
   225  001047                     _TIMER2_PR2_1msec:
   226                           	opt stack 0
   227  001047  08                 	db	8
   228  001048  3E                 	db	62
   229  001049  7D                 	db	125
   230  00104A  FA                 	db	250
   231  00104B  32                 	db	50
   232  00104C  64                 	db	100
   233  00104D  C8                 	db	200
   234  00104E  C8                 	db	200
   235  00104F  C8                 	db	200
   236  001050  C8                 	db	200
   237  001051                     __end_of_TIMER2_PR2_1msec:
   238                           	opt stack 0
   239  001051                     _TIMER0_16mSec:
   240                           	opt stack 0
   241  001051  C1                 	db	193
   242  001052  C2                 	db	194
   243  001053  C3                 	db	195
   244  001054  C4                 	db	196
   245  001055  C5                 	db	197
   246  001056  C6                 	db	198
   247  001057  C7                 	db	199
   248  001058  80                 	db	128
   249  001059  81                 	db	129
   250  00105A                     __end_of_TIMER0_16mSec:
   251                           	opt stack 0
   252  00105A                     _TIMER2_PR2_100usec:
   253                           	opt stack 0
   254  00105A  06                 	db	6
   255  00105B  0D                 	db	13
   256  00105C  19                 	db	25
   257  00105D  32                 	db	50
   258  00105E  64                 	db	100
   259  00105F  C8                 	db	200
   260  001060  C8                 	db	200
   261  001061  C8                 	db	200
   262  001062  C8                 	db	200
   263  001063                     __end_of_TIMER2_PR2_100usec:
   264                           	opt stack 0
   265  001063                     _TIMER0_1mSec:
   266                           	opt stack 0
   267  001063  C0                 	db	192
   268  001064  C1                 	db	193
   269  001065  C2                 	db	194
   270  001066  C3                 	db	195
   271  001067  C4                 	db	196
   272  001068  C5                 	db	197
   273  001069                     __end_of_TIMER0_1mSec:
   274                           	opt stack 0
   275  001069                     _Timer1:
   276                           	opt stack 0
   277  001069  0000               	dw	0
   278  00106B  0000               	dw	0
   279  00106D  3A                 	db	58
   280  00106E                     __end_of_Timer1:
   281                           	opt stack 0
   282  0000                     _PinDirection	set	3986
   283  0000                     _PinFunction	set	3896
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1bits	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _ADRESL	set	4035
   289  0000                     _BAUDCON1bits	set	4024
   290  0000                     _BAUDCON2bits	set	3952
   291  0000                     _INTCONbits	set	4082
   292  0000                     _IPR1bits	set	3999
   293  0000                     _IPR3bits	set	4005
   294  0000                     _OSCCON	set	4051
   295  0000                     _OSCCON2bits	set	4050
   296  0000                     _OSCCONbits	set	4051
   297  0000                     _OSCTUNEbits	set	3995
   298  0000                     _PIE1bits	set	3997
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR1bits	set	3998
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PR2	set	4027
   303  0000                     _RC1REG	set	4014
   304  0000                     _RC2REG	set	3956
   305  0000                     _RCONbits	set	4048
   306  0000                     _RCSTA1bits	set	4011
   307  0000                     _RCSTA2bits	set	3953
   308  0000                     _SPBRG1	set	4015
   309  0000                     _SPBRG2	set	3957
   310  0000                     _SPBRGH1	set	4016
   311  0000                     _SPBRGH2	set	3958
   312  0000                     _T0CON	set	4053
   313  0000                     _T0CONbits	set	4053
   314  0000                     _T1CONbits	set	4045
   315  0000                     _T2CON	set	4026
   316  0000                     _T2CONbits	set	4026
   317  0000                     _TX1REG	set	4013
   318  0000                     _TX2REG	set	3955
   319  0000                     _TXSTA1bits	set	4012
   320  0000                     _TXSTA2bits	set	3954
   321                           
   322                           ; #config settings
   323  00106E  00                 	db	0	; dummy byte at the end
   324  0000                     
   325                           	psect	cinit
   326  001650                     __pcinit:
   327                           	opt stack 0
   328  001650                     start_initialization:
   329                           	opt stack 0
   330  001650                     __initialization:
   331                           	opt stack 0
   332                           
   333                           ; Clear objects allocated to COMRAM (2 bytes)
   334  001650  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   335  001652  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   336                           
   337                           ; Initialize objects allocated to BANK0 (40 bytes)
   338                           ; load TBLPTR registers with __pidataBANK0
   339  001654  0E9A               	movlw	low __pidataBANK0
   340  001656  6EF6               	movwf	tblptrl,c
   341  001658  0E16               	movlw	high __pidataBANK0
   342  00165A  6EF7               	movwf	tblptrh,c
   343  00165C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   344  00165E  6EF8               	movwf	tblptru,c
   345  001660  EE00  F060         	lfsr	0,__pdataBANK0
   346  001664  EE10 F028          	lfsr	1,40
   347  001668                     copy_data0:
   348  001668  0009               	tblrd		*+
   349  00166A  CFF5 FFEE          	movff	tablat,postinc0
   350  00166E  50E5               	movf	postdec1,w,c
   351  001670  50E1               	movf	fsr1l,w,c
   352  001672  E1FA               	bnz	copy_data0
   353                           
   354                           ; Initialize objects allocated to COMRAM (17 bytes)
   355                           ; load TBLPTR registers with __pidataCOMRAM
   356  001674  0E50               	movlw	low __pidataCOMRAM
   357  001676  6EF6               	movwf	tblptrl,c
   358  001678  0E17               	movlw	high __pidataCOMRAM
   359  00167A  6EF7               	movwf	tblptrh,c
   360  00167C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   361  00167E  6EF8               	movwf	tblptru,c
   362  001680  EE00  F02D         	lfsr	0,__pdataCOMRAM
   363  001684  EE10 F011          	lfsr	1,17
   364  001688                     copy_data1:
   365  001688  0009               	tblrd		*+
   366  00168A  CFF5 FFEE          	movff	tablat,postinc0
   367  00168E  50E5               	movf	postdec1,w,c
   368  001690  50E1               	movf	fsr1l,w,c
   369  001692  E1FA               	bnz	copy_data1
   370  001694                     end_of_initialization:
   371                           	opt stack 0
   372  001694                     __end_of__initialization:
   373                           	opt stack 0
   374  001694  0100               	movlb	0
   375  001696  EF38  F008         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssCOMRAM
   385  00003E                     __pbssCOMRAM:
   386                           	opt stack 0
   387  00003E                     _delayCount:
   388                           	opt stack 0
   389  00003E                     	ds	2
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	dataCOMRAM
   399  00002D                     __pdataCOMRAM:
   400                           	opt stack 0
   401  00002D                     _Serial1:
   402                           	opt stack 0
   403  00002D                     	ds	12
   404  000039                     _OscFreq:
   405                           	opt stack 0
   406  000039                     	ds	4
   407  00003D                     _OscFreqIndex:
   408                           	opt stack 0
   409  00003D                     	ds	1
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	dataBANK0
   419  000060                     __pdataBANK0:
   420                           	opt stack 0
   421  000060                     _Oscillator:
   422                           	opt stack 0
   423  000060                     	ds	22
   424  000076                     _Serial2:
   425                           	opt stack 0
   426  000076                     	ds	12
   427  000082                     _ADC:
   428                           	opt stack 0
   429  000082                     	ds	6
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438                           	psect	cstackBANK0
   439  000088                     __pcstackBANK0:
   440                           	opt stack 0
   441  000088                     ___aldiv@counter:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x0
   445  000088                     	ds	1
   446  000089                     ___aldiv@sign:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1
   450  000089                     	ds	1
   451  00008A                     ___aldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x2
   455  00008A                     	ds	4
   456  00008E                     ??_Open_adc:
   457  00008E                     Open1@BaudRate:
   458                           	opt stack 0
   459  00008E                     Open2@BaudRate:
   460                           	opt stack 0
   461                           
   462                           ; 4 bytes @ 0x6
   463  00008E                     	ds	4
   464  000092                     ??_Open1:
   465  000092                     ??_Open2:
   466  000092                     Open_adc@freq:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0xA
   470  000092                     	ds	1
   471  000093                     Open_adc@adcs:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0xB
   475  000093                     	ds	7
   476  00009A                     Open1@freq:
   477                           	opt stack 0
   478  00009A                     Open2@freq:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482  00009A                     	ds	4
   483  00009E                     Open1@BRGval:
   484                           	opt stack 0
   485  00009E                     Open2@temp:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x16
   489  00009E                     	ds	2
   490  0000A0                     ??_main:
   491                           
   492                           ; 0 bytes @ 0x18
   493  0000A0                     	ds	2
   494  0000A2                     main@MSB:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1A
   498  0000A2                     	ds	1
   499  0000A3                     main@LSB:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1B
   503  0000A3                     	ds	1
   504  0000A4                     main@ADCvalue:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1C
   508  0000A4                     	ds	2
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	cstackCOMRAM
   518  000001                     __pcstackCOMRAM:
   519                           	opt stack 0
   520  000001                     ??_LowPriority_InterruptHandler:
   521  000001                     
   522                           ; 1 bytes @ 0x0
   523  000001                     	ds	17
   524  000012                     ??_HighPriority_InterruptHandler:
   525                           
   526                           ; 0 bytes @ 0x11
   527  000012                     	ds	14
   528  000020                     ??_SetChannel:
   529  000020                     ??_SetFreq_8MHZ:
   530  000020                     ?_ReadData:
   531                           	opt stack 0
   532  000020                     ?_GetFreq:
   533                           	opt stack 0
   534  000020                     SendByte1@Data:
   535                           	opt stack 0
   536  000020                     SendByte2@Data:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1F
   540  000020                     	ds	1
   541  000021                     SetChannel@channel:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x20
   545  000021                     	ds	1
   546  000022                     ??_ReadData:
   547                           
   548                           ; 0 bytes @ 0x21
   549  000022                     	ds	2
   550  000024                     ?___aldiv:
   551                           	opt stack 0
   552  000024                     ReadData@ADCdata:
   553                           	opt stack 0
   554  000024                     ___aldiv@dividend:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x23
   558  000024                     	ds	4
   559  000028                     ___aldiv@divisor:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x27
   563  000028                     	ds	4
   564  00002C                     ??___aldiv:
   565                           
   566                           ; 0 bytes @ 0x2B
   567  00002C                     	ds	1
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 27 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  ADCvalue        2   28[BANK0 ] short 
   586 ;;  LSB             1   27[BANK0 ] unsigned char 
   587 ;;  MSB             1   26[BANK0 ] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;		None               void
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;Total ram usage:        6 bytes
   602 ;; Hardware stack levels required when called:    4
   603 ;; This function calls:
   604 ;;		_Open1
   605 ;;		_Open2
   606 ;;		_Open_adc
   607 ;;		_ReadData
   608 ;;		_SendByte1
   609 ;;		_SendByte2
   610 ;;		_SetChannel
   611 ;;		_SetFreq_8MHZ
   612 ;;		_SetTimer0_1Sec
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text0
   619  001070                     __ptext0:
   620                           	opt stack 0
   621  001070                     _main:
   622                           	opt stack 27
   623                           
   624                           ;main.c: 30: uchar MSB=0, LSB=0;
   625                           
   626                           ;incstack = 0
   627  001070  0100               	movlb	0	; () banked
   628  001072  6FA0               	movwf	??_main& (0+255),b
   629  001074  0E00               	movlw	0
   630  001076  0100               	movlb	0	; () banked
   631  001078  0100               	movlb	0	; () banked
   632  00107A  6FA2               	movwf	main@MSB& (0+255),b
   633  00107C  0100               	movlb	0	; () banked
   634  00107E  51A0               	movf	??_main& (0+255),w,b
   635  001080  0100               	movlb	0	; () banked
   636  001082  6FA0               	movwf	??_main& (0+255),b
   637  001084  0E00               	movlw	0
   638  001086  0100               	movlb	0	; () banked
   639  001088  0100               	movlb	0	; () banked
   640  00108A  6FA3               	movwf	main@LSB& (0+255),b
   641  00108C  0100               	movlb	0	; () banked
   642  00108E  51A0               	movf	??_main& (0+255),w,b
   643                           
   644                           ; BSR set to: 0
   645                           ;main.c: 31: short ADCvalue;
   646                           ;main.c: 34: Oscillator.SetFreq_8MHZ();
   647  001090  D801               	call	u688
   648  001092  D00C               	goto	u689
   649  001094                     u688:
   650  001094  0005               	push	
   651  001096  6EFA               	movwf	pclath,c
   652  001098  0100               	movlb	0	; () banked
   653  00109A  0100               	movlb	0	; () banked
   654  00109C  516C               	movf	(_Oscillator+12)& (0+255),w,b
   655  00109E  6EFD               	movwf	tosl,c
   656  0010A0  0100               	movlb	0	; () banked
   657  0010A2  516D               	movf	(_Oscillator+13)& (0+255),w,b
   658  0010A4  6EFE               	movwf	tosh,c
   659  0010A6  6AFF               	clrf	tosu,c
   660  0010A8  50FA               	movf	pclath,w,c
   661  0010AA  0012               	return		;indir
   662  0010AC                     u689:
   663                           
   664                           ;main.c: 35: Timer0.SetPeriod_1Sec();
   665  0010AC  0E01               	movlw	low _Timer0
   666  0010AE  6EF6               	movwf	tblptrl,c
   667  0010B0  0E10               	movlw	high _Timer0
   668  0010B2  6EF7               	movwf	tblptrh,c
   669  0010B4  0E00               	movlw	low (_Timer0 shr (0+16))
   670  0010B6  6EF8               	movwf	tblptru,c
   671  0010B8  0009               	tblrd		*+
   672  0010BA  CFF5 F0A0          	movff	tablat,??_main
   673  0010BE  0009               	tblrd		*+
   674  0010C0  CFF5 F0A1          	movff	tablat,??_main+1
   675  0010C4  D801               	call	u698
   676  0010C6  D00A               	goto	u699
   677  0010C8                     u698:
   678  0010C8  0005               	push	
   679  0010CA  6EFA               	movwf	pclath,c
   680  0010CC  0100               	movlb	0	; () banked
   681  0010CE  51A0               	movf	??_main& (0+255),w,b
   682  0010D0  6EFD               	movwf	tosl,c
   683  0010D2  51A1               	movf	(??_main+1)& (0+255),w,b
   684  0010D4  6EFE               	movwf	tosh,c
   685  0010D6  6AFF               	clrf	tosu,c
   686  0010D8  50FA               	movf	pclath,w,c
   687  0010DA  0012               	return		;indir
   688  0010DC                     u699:
   689                           
   690                           ;main.c: 36: Serial2.Open(9600);
   691  0010DC  0E80               	movlw	128
   692  0010DE  0100               	movlb	0	; () banked
   693  0010E0  0100               	movlb	0	; () banked
   694  0010E2  6F8E               	movwf	Open2@BaudRate& (0+255),b
   695  0010E4  0E25               	movlw	37
   696  0010E6  0100               	movlb	0	; () banked
   697  0010E8  6F8F               	movwf	(Open2@BaudRate+1)& (0+255),b
   698  0010EA  0E00               	movlw	0
   699  0010EC  0100               	movlb	0	; () banked
   700  0010EE  6F90               	movwf	(Open2@BaudRate+2)& (0+255),b
   701  0010F0  0E00               	movlw	0
   702  0010F2  0100               	movlb	0	; () banked
   703  0010F4  6F91               	movwf	(Open2@BaudRate+3)& (0+255),b
   704  0010F6  D801               	call	u708
   705  0010F8  D00C               	goto	u709
   706  0010FA                     u708:
   707  0010FA  0005               	push	
   708  0010FC  6EFA               	movwf	pclath,c
   709  0010FE  0100               	movlb	0	; () banked
   710  001100  0100               	movlb	0	; () banked
   711  001102  5176               	movf	_Serial2& (0+255),w,b
   712  001104  6EFD               	movwf	tosl,c
   713  001106  0100               	movlb	0	; () banked
   714  001108  5177               	movf	(_Serial2+1)& (0+255),w,b
   715  00110A  6EFE               	movwf	tosh,c
   716  00110C  6AFF               	clrf	tosu,c
   717  00110E  50FA               	movf	pclath,w,c
   718  001110  0012               	return		;indir
   719  001112                     u709:
   720                           
   721                           ;main.c: 40: (PinFunction.AN2 = 1, PinDirection.AN2 = 1 );
   722  001112  010F               	movlb	15	; () banked
   723  001114  010F               	movlb	15	; () banked
   724  001116  8538               	bsf	56,2,b	;volatile
   725                           
   726                           ; BSR set to: 15
   727  001118  8492               	bsf	3986,2,c	;volatile
   728                           
   729                           ; BSR set to: 15
   730                           ;main.c: 41: ADC.SetChannel(0b00010);
   731  00111A  D801               	call	u718
   732  00111C  D00D               	goto	u719
   733  00111E                     u718:
   734  00111E  0005               	push	
   735  001120  6EFA               	movwf	pclath,c
   736  001122  0100               	movlb	0	; () banked
   737  001124  0100               	movlb	0	; () banked
   738  001126  5184               	movf	(_ADC+2)& (0+255),w,b
   739  001128  6EFD               	movwf	tosl,c
   740  00112A  0100               	movlb	0	; () banked
   741  00112C  5185               	movf	(_ADC+3)& (0+255),w,b
   742  00112E  6EFE               	movwf	tosh,c
   743  001130  6AFF               	clrf	tosu,c
   744  001132  50FA               	movf	pclath,w,c
   745  001134  0E02               	movlw	2
   746  001136  0012               	return		;indir
   747  001138                     u719:
   748                           
   749                           ;main.c: 42: ADC.Open();
   750  001138  D801               	call	u728
   751  00113A  D00C               	goto	l1755
   752  00113C                     u728:
   753  00113C  0005               	push	
   754  00113E  6EFA               	movwf	pclath,c
   755  001140  0100               	movlb	0	; () banked
   756  001142  0100               	movlb	0	; () banked
   757  001144  5182               	movf	_ADC& (0+255),w,b
   758  001146  6EFD               	movwf	tosl,c
   759  001148  0100               	movlb	0	; () banked
   760  00114A  5183               	movf	(_ADC+1)& (0+255),w,b
   761  00114C  6EFE               	movwf	tosh,c
   762  00114E  6AFF               	clrf	tosu,c
   763  001150  50FA               	movf	pclath,w,c
   764  001152  0012               	return		;indir
   765  001154                     l1755:
   766                           
   767                           ;main.c: 46: {
   768                           ;main.c: 48: if(INTCONbits.TMR0IF)
   769  001154  A4F2               	btfss	intcon,2,c	;volatile
   770  001156  D7FE               	goto	l1755
   771                           
   772                           ;main.c: 49: {
   773                           ;main.c: 50: INTCONbits.TMR0IF = 0;
   774  001158  94F2               	bcf	intcon,2,c	;volatile
   775                           
   776                           ;main.c: 51: ADCvalue = ADC.ReadData();
   777  00115A  D801               	call	u748
   778  00115C  D00C               	goto	u749
   779  00115E                     u748:
   780  00115E  0005               	push	
   781  001160  6EFA               	movwf	pclath,c
   782  001162  0100               	movlb	0	; () banked
   783  001164  0100               	movlb	0	; () banked
   784  001166  5186               	movf	(_ADC+4)& (0+255),w,b
   785  001168  6EFD               	movwf	tosl,c
   786  00116A  0100               	movlb	0	; () banked
   787  00116C  5187               	movf	(_ADC+5)& (0+255),w,b
   788  00116E  6EFE               	movwf	tosh,c
   789  001170  6AFF               	clrf	tosu,c
   790  001172  50FA               	movf	pclath,w,c
   791  001174  0012               	return		;indir
   792  001176                     u749:
   793  001176  C020  F0A4         	movff	?_ReadData,main@ADCvalue
   794  00117A  C021  F0A5         	movff	?_ReadData+1,main@ADCvalue+1
   795                           
   796                           ;main.c: 52: MSB = ADCvalue>>8;
   797  00117E  0100               	movlb	0	; () banked
   798  001180  C0A5  F0A0         	movff	main@ADCvalue+1,??_main
   799  001184  0100               	movlb	0	; () banked
   800  001186  6BA1               	clrf	(??_main+1)& (0+255),b
   801  001188  BFA0               	btfsc	??_main& (0+255),7,b
   802  00118A  69A1               	setf	(??_main+1)& (0+255),b
   803  00118C  0100               	movlb	0	; () banked
   804  00118E  51A0               	movf	??_main& (0+255),w,b
   805  001190  0100               	movlb	0	; () banked
   806  001192  0100               	movlb	0	; () banked
   807  001194  6FA2               	movwf	main@MSB& (0+255),b
   808                           
   809                           ; BSR set to: 0
   810                           ;main.c: 53: LSB = ADCvalue;
   811  001196  C0A4  F0A3         	movff	main@ADCvalue,main@LSB
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 54: Serial2.SendByte(MSB);
   815  00119A  D801               	call	u758
   816  00119C  D00F               	goto	u759
   817  00119E                     u758:
   818  00119E  0005               	push	
   819  0011A0  6EFA               	movwf	pclath,c
   820  0011A2  0100               	movlb	0	; () banked
   821  0011A4  0100               	movlb	0	; () banked
   822  0011A6  5178               	movf	(_Serial2+2)& (0+255),w,b
   823  0011A8  6EFD               	movwf	tosl,c
   824  0011AA  0100               	movlb	0	; () banked
   825  0011AC  5179               	movf	(_Serial2+3)& (0+255),w,b
   826  0011AE  6EFE               	movwf	tosh,c
   827  0011B0  6AFF               	clrf	tosu,c
   828  0011B2  50FA               	movf	pclath,w,c
   829  0011B4  0100               	movlb	0	; () banked
   830  0011B6  0100               	movlb	0	; () banked
   831  0011B8  51A2               	movf	main@MSB& (0+255),w,b
   832  0011BA  0012               	return		;indir
   833  0011BC                     u759:
   834                           
   835                           ;main.c: 55: Serial2.SendByte(LSB);
   836  0011BC  D801               	call	u768
   837  0011BE  D7CA               	goto	l1755
   838  0011C0                     u768:
   839  0011C0  0005               	push	
   840  0011C2  6EFA               	movwf	pclath,c
   841  0011C4  0100               	movlb	0	; () banked
   842  0011C6  0100               	movlb	0	; () banked
   843  0011C8  5178               	movf	(_Serial2+2)& (0+255),w,b
   844  0011CA  6EFD               	movwf	tosl,c
   845  0011CC  0100               	movlb	0	; () banked
   846  0011CE  5179               	movf	(_Serial2+3)& (0+255),w,b
   847  0011D0  6EFE               	movwf	tosh,c
   848  0011D2  6AFF               	clrf	tosu,c
   849  0011D4  50FA               	movf	pclath,w,c
   850  0011D6  0100               	movlb	0	; () banked
   851  0011D8  0100               	movlb	0	; () banked
   852  0011DA  51A3               	movf	main@LSB& (0+255),w,b
   853  0011DC  0012               	return		;indir
   854  0011DE                     __end_of_main:
   855                           	opt stack 0
   856                           tosu	equ	0xFFF
   857                           tosh	equ	0xFFE
   858                           tosl	equ	0xFFD
   859                           pclath	equ	0xFFA
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           intcon	equ	0xFF2
   865                           postinc0	equ	0xFEE
   866                           postdec1	equ	0xFE5
   867                           fsr1l	equ	0xFE1
   868                           
   869 ;; *************** function _SetTimer0_1Sec *****************
   870 ;; Defined at:
   871 ;;		line 54 in file "EAB_Timer.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      unsigned char 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    2
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text1
   900  001706                     __ptext1:
   901                           	opt stack 0
   902  001706                     _SetTimer0_1Sec:
   903                           	opt stack 28
   904                           
   905                           ;incstack = 0
   906  001706  503D               	movf	_OscFreqIndex,w,c
   907  001708  0D01               	mullw	1
   908  00170A  0E29               	movlw	low _TIMER0_1Sec
   909  00170C  24F3               	addwf	prodl,w,c
   910  00170E  6EF6               	movwf	tblptrl,c
   911  001710  0E10               	movlw	high _TIMER0_1Sec
   912  001712  20F4               	addwfc	prodh,w,c
   913  001714  6EF7               	movwf	tblptrh,c
   914  001716  6AF8               	clrf	tblptru,c
   915  001718  0E00               	movlw	low (__mediumconst shr (0+16))
   916  00171A  22F8               	addwfc	tblptru,f,c
   917  00171C  0008               	tblrd		*
   918  00171E  CFF5 FFD5          	movff	tablat,4053	;volatile
   919  001722  0012               	return	
   920  001724                     __end_of_SetTimer0_1Sec:
   921                           	opt stack 0
   922                           tosu	equ	0xFFF
   923                           tosh	equ	0xFFE
   924                           tosl	equ	0xFFD
   925                           pclath	equ	0xFFA
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           prodh	equ	0xFF4
   931                           prodl	equ	0xFF3
   932                           intcon	equ	0xFF2
   933                           postinc0	equ	0xFEE
   934                           postdec1	equ	0xFE5
   935                           fsr1l	equ	0xFE1
   936                           
   937 ;; *************** function _SetFreq_8MHZ *****************
   938 ;; Defined at:
   939 ;;		line 85 in file "EAB_Oscillator.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      unsigned char 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    2
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968  0016C2                     __ptext2:
   969                           	opt stack 0
   970  0016C2                     _SetFreq_8MHZ:
   971                           	opt stack 28
   972                           
   973                           ;incstack = 0
   974  0016C2  50D3               	movf	4051,w,c	;volatile
   975  0016C4  0B8C               	andlw	140
   976  0016C6  0962               	iorlw	98
   977  0016C8  6ED3               	movwf	4051,c	;volatile
   978  0016CA  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   979  0016CC  0E06               	movlw	6
   980  0016CE  6E3D               	movwf	_OscFreqIndex,c
   981  0016D0  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   982  0016D2  0E00               	movlw	0
   983  0016D4  6E39               	movwf	_OscFreq,c
   984  0016D6  0E12               	movlw	18
   985  0016D8  6E3A               	movwf	_OscFreq+1,c
   986  0016DA  0E7A               	movlw	122
   987  0016DC  6E3B               	movwf	_OscFreq+2,c
   988  0016DE  0E00               	movlw	0
   989  0016E0  6E3C               	movwf	_OscFreq+3,c
   990  0016E2  0012               	return	
   991  0016E4                     __end_of_SetFreq_8MHZ:
   992                           	opt stack 0
   993                           tosu	equ	0xFFF
   994                           tosh	equ	0xFFE
   995                           tosl	equ	0xFFD
   996                           pclath	equ	0xFFA
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           prodh	equ	0xFF4
  1002                           prodl	equ	0xFF3
  1003                           intcon	equ	0xFF2
  1004                           postinc0	equ	0xFEE
  1005                           postdec1	equ	0xFE5
  1006                           fsr1l	equ	0xFE1
  1007                           
  1008 ;; *************** function _SetChannel *****************
  1009 ;; Defined at:
  1010 ;;		line 66 in file "EAB_ADC.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  channel         1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  channel         1   32[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        2 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text3
  1039  001724                     __ptext3:
  1040                           	opt stack 0
  1041  001724                     _SetChannel:
  1042                           	opt stack 28
  1043                           
  1044                           ;incstack = 0
  1045                           ;SetChannel@channel stored from wreg
  1046  001724  CFE8 F021          	movff	wreg,SetChannel@channel
  1047  001728  C021  F020         	movff	SetChannel@channel,??_SetChannel
  1048  00172C  4620               	rlncf	??_SetChannel,f,c
  1049  00172E  4620               	rlncf	??_SetChannel,f,c
  1050  001730  50C2               	movf	4034,w,c	;volatile
  1051  001732  1820               	xorwf	??_SetChannel,w,c
  1052  001734  0B83               	andlw	-125
  1053  001736  1820               	xorwf	??_SetChannel,w,c
  1054  001738  6EC2               	movwf	4034,c	;volatile
  1055  00173A  82C2               	bsf	4034,1,c	;volatile
  1056  00173C  0012               	return	
  1057  00173E                     __end_of_SetChannel:
  1058                           	opt stack 0
  1059                           tosu	equ	0xFFF
  1060                           tosh	equ	0xFFE
  1061                           tosl	equ	0xFFD
  1062                           pclath	equ	0xFFA
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           intcon	equ	0xFF2
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec1	equ	0xFE5
  1073                           fsr1l	equ	0xFE1
  1074                           
  1075 ;; *************** function _SendByte1 *****************
  1076 ;; Defined at:
  1077 ;;		line 87 in file "EAB_Serial.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  Data            1    wreg     unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  Data            1   31[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    2
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text4
  1106  001762                     __ptext4:
  1107                           	opt stack 0
  1108  001762                     _SendByte1:
  1109                           	opt stack 28
  1110                           
  1111                           ;incstack = 0
  1112                           ;SendByte1@Data stored from wreg
  1113  001762  CFE8 F020          	movff	wreg,SendByte1@Data
  1114  001766                     l238:
  1115  001766  A2AC               	btfss	4012,1,c	;volatile
  1116  001768  D7FE               	goto	l238
  1117  00176A  C020  FFAD         	movff	SendByte1@Data,4013	;volatile
  1118  00176E  0012               	return	
  1119  001770                     __end_of_SendByte1:
  1120                           	opt stack 0
  1121                           tosu	equ	0xFFF
  1122                           tosh	equ	0xFFE
  1123                           tosl	equ	0xFFD
  1124                           pclath	equ	0xFFA
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           prodh	equ	0xFF4
  1130                           prodl	equ	0xFF3
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           
  1137 ;; *************** function _SendByte2 *****************
  1138 ;; Defined at:
  1139 ;;		line 94 in file "EAB_Serial.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  Data            1    wreg     unsigned char 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  Data            1   31[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        1 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    2
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text5
  1168  001770                     __ptext5:
  1169                           	opt stack 0
  1170  001770                     _SendByte2:
  1171                           	opt stack 28
  1172                           
  1173                           ;incstack = 0
  1174                           ;SendByte2@Data stored from wreg
  1175  001770  CFE8 F020          	movff	wreg,SendByte2@Data
  1176  001774                     l244:
  1177  001774  A272               	btfss	3954,1,c	;volatile
  1178  001776  D7FE               	goto	l244
  1179  001778  C020  FF73         	movff	SendByte2@Data,3955	;volatile
  1180  00177C  0012               	return	
  1181  00177E                     __end_of_SendByte2:
  1182                           	opt stack 0
  1183                           tosu	equ	0xFFF
  1184                           tosh	equ	0xFFE
  1185                           tosl	equ	0xFFD
  1186                           pclath	equ	0xFFA
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           intcon	equ	0xFF2
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           
  1199 ;; *************** function _ReadData *****************
  1200 ;; Defined at:
  1201 ;;		line 73 in file "EAB_ADC.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  ADCdata         2   35[COMRAM] short 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  2   31[COMRAM] short 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:        6 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    2
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text6
  1230  0016E4                     __ptext6:
  1231                           	opt stack 0
  1232  0016E4                     _ReadData:
  1233                           	opt stack 28
  1234                           
  1235                           ;incstack = 0
  1236  0016E4  50C3               	movf	4035,w,c	;volatile
  1237  0016E6  CFC4 F022          	movff	4036,??_ReadData	;volatile
  1238  0016EA  6A23               	clrf	(??_ReadData+1)& (0+255),c
  1239  0016EC  C022  F023         	movff	??_ReadData,??_ReadData+1
  1240  0016F0  6A22               	clrf	??_ReadData,c
  1241  0016F2  1022               	iorwf	??_ReadData,w,c
  1242  0016F4  6E24               	movwf	ReadData@ADCdata,c
  1243  0016F6  5023               	movf	??_ReadData+1,w,c
  1244  0016F8  6E25               	movwf	ReadData@ADCdata+1,c
  1245  0016FA  82C2               	bsf	4034,1,c	;volatile
  1246  0016FC  C024  F020         	movff	ReadData@ADCdata,?_ReadData
  1247  001700  C025  F021         	movff	ReadData@ADCdata+1,?_ReadData+1
  1248  001704  0012               	return	
  1249  001706                     __end_of_ReadData:
  1250                           	opt stack 0
  1251                           tosu	equ	0xFFF
  1252                           tosh	equ	0xFFE
  1253                           tosl	equ	0xFFD
  1254                           pclath	equ	0xFFA
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           prodh	equ	0xFF4
  1260                           prodl	equ	0xFF3
  1261                           intcon	equ	0xFF2
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1l	equ	0xFE1
  1266                           
  1267 ;; *************** function _Open_adc *****************
  1268 ;; Defined at:
  1269 ;;		line 23 in file "EAB_ADC.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  adcs            1   11[BANK0 ] unsigned char 
  1274 ;;  freq            1   10[BANK0 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      unsigned char 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        6 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    3
  1291 ;; This function calls:
  1292 ;;		_GetFreq
  1293 ;;		___aldiv
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text7
  1300  00132A                     __ptext7:
  1301                           	opt stack 0
  1302  00132A                     _Open_adc:
  1303                           	opt stack 27
  1304                           
  1305                           ;incstack = 0
  1306  00132A  D801               	call	u778
  1307  00132C  D00C               	goto	u779
  1308  00132E                     u778:
  1309  00132E  0005               	push	
  1310  001330  6EFA               	movwf	pclath,c
  1311  001332  0100               	movlb	0	; () banked
  1312  001334  0100               	movlb	0	; () banked
  1313  001336  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1314  001338  6EFD               	movwf	tosl,c
  1315  00133A  0100               	movlb	0	; () banked
  1316  00133C  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1317  00133E  6EFE               	movwf	tosh,c
  1318  001340  6AFF               	clrf	tosu,c
  1319  001342  50FA               	movf	pclath,w,c
  1320  001344  0012               	return		;indir
  1321  001346                     u779:
  1322  001346  C020  F024         	movff	?_GetFreq,___aldiv@dividend
  1323  00134A  C021  F025         	movff	?_GetFreq+1,___aldiv@dividend+1
  1324  00134E  C022  F026         	movff	?_GetFreq+2,___aldiv@dividend+2
  1325  001352  C023  F027         	movff	?_GetFreq+3,___aldiv@dividend+3
  1326  001356  0E40               	movlw	64
  1327  001358  6E28               	movwf	___aldiv@divisor,c
  1328  00135A  0E42               	movlw	66
  1329  00135C  6E29               	movwf	___aldiv@divisor+1,c
  1330  00135E  0E0F               	movlw	15
  1331  001360  6E2A               	movwf	___aldiv@divisor+2,c
  1332  001362  0E00               	movlw	0
  1333  001364  6E2B               	movwf	___aldiv@divisor+3,c
  1334  001366  ECEF  F008         	call	___aldiv
  1335  00136A  C024  F08E         	movff	?___aldiv,??_Open_adc
  1336  00136E  C025  F08F         	movff	?___aldiv+1,??_Open_adc+1
  1337  001372  C026  F090         	movff	?___aldiv+2,??_Open_adc+2
  1338  001376  C027  F091         	movff	?___aldiv+3,??_Open_adc+3
  1339  00137A  0100               	movlb	0	; () banked
  1340  00137C  518E               	movf	??_Open_adc& (0+255),w,b
  1341  00137E  0100               	movlb	0	; () banked
  1342  001380  0100               	movlb	0	; () banked
  1343  001382  6F92               	movwf	Open_adc@freq& (0+255),b
  1344  001384  D01D               	goto	l1789
  1345  001386                     l1775:
  1346                           
  1347                           ; BSR set to: 0
  1348  001386  0100               	movlb	0	; () banked
  1349  001388  6F8E               	movwf	??_Open_adc& (0+255),b
  1350  00138A  0E00               	movlw	0
  1351  00138C  D013               	goto	L5
  1352  00138E                     l1777:
  1353                           
  1354                           ; BSR set to: 0
  1355  00138E  0100               	movlb	0	; () banked
  1356  001390  6F8E               	movwf	??_Open_adc& (0+255),b
  1357  001392  0E04               	movlw	4
  1358  001394  D00F               	goto	L5
  1359  001396                     l1779:
  1360                           
  1361                           ; BSR set to: 0
  1362  001396  0100               	movlb	0	; () banked
  1363  001398  6F8E               	movwf	??_Open_adc& (0+255),b
  1364  00139A  0E01               	movlw	1
  1365  00139C  D00B               	goto	L5
  1366  00139E                     l1781:
  1367                           
  1368                           ; BSR set to: 0
  1369  00139E  0100               	movlb	0	; () banked
  1370  0013A0  6F8E               	movwf	??_Open_adc& (0+255),b
  1371  0013A2  0E05               	movlw	5
  1372  0013A4  D007               	goto	L5
  1373  0013A6                     l1783:
  1374                           
  1375                           ; BSR set to: 0
  1376  0013A6  0100               	movlb	0	; () banked
  1377  0013A8  6F8E               	movwf	??_Open_adc& (0+255),b
  1378  0013AA  0E02               	movlw	2
  1379  0013AC  D003               	goto	L5
  1380  0013AE                     l1785:
  1381                           
  1382                           ; BSR set to: 0
  1383  0013AE  0100               	movlb	0	; () banked
  1384  0013B0  6F8E               	movwf	??_Open_adc& (0+255),b
  1385  0013B2  0E06               	movlw	6
  1386  0013B4                     L5:
  1387  0013B4  0100               	movlb	0	; () banked
  1388  0013B6  0100               	movlb	0	; () banked
  1389  0013B8  6F93               	movwf	Open_adc@adcs& (0+255),b
  1390  0013BA  0100               	movlb	0	; () banked
  1391  0013BC  518E               	movf	??_Open_adc& (0+255),w,b
  1392  0013BE  D01B               	goto	l1791
  1393  0013C0                     l1789:
  1394                           
  1395                           ; BSR set to: 0
  1396  0013C0  0100               	movlb	0	; () banked
  1397  0013C2  0100               	movlb	0	; () banked
  1398  0013C4  5192               	movf	Open_adc@freq& (0+255),w,b
  1399                           
  1400                           ; Switch size 1, requested type "space"
  1401                           ; Number of cases is 8, Range of values is 0 to 64
  1402                           ; switch strategies available:
  1403                           ; Name         Instructions Cycles
  1404                           ; simple_byte           25    13 (average)
  1405                           ;	Chosen strategy is simple_byte
  1406  0013C6  0A00               	xorlw	0	; case 0
  1407  0013C8  B4D8               	btfsc	status,2,c
  1408  0013CA  D7DD               	goto	l1775
  1409  0013CC  0A01               	xorlw	1	; case 1
  1410  0013CE  B4D8               	btfsc	status,2,c
  1411  0013D0  D7DA               	goto	l1775
  1412  0013D2  0A03               	xorlw	3	; case 2
  1413  0013D4  B4D8               	btfsc	status,2,c
  1414  0013D6  D7D7               	goto	l1775
  1415  0013D8  0A06               	xorlw	6	; case 4
  1416  0013DA  B4D8               	btfsc	status,2,c
  1417  0013DC  D7D8               	goto	l1777
  1418  0013DE  0A0C               	xorlw	12	; case 8
  1419  0013E0  B4D8               	btfsc	status,2,c
  1420  0013E2  D7D9               	goto	l1779
  1421  0013E4  0A18               	xorlw	24	; case 16
  1422  0013E6  B4D8               	btfsc	status,2,c
  1423  0013E8  D7DA               	goto	l1781
  1424  0013EA  0A30               	xorlw	48	; case 32
  1425  0013EC  B4D8               	btfsc	status,2,c
  1426  0013EE  D7DB               	goto	l1783
  1427  0013F0  0A60               	xorlw	96	; case 64
  1428  0013F2  B4D8               	btfsc	status,2,c
  1429  0013F4  D7DC               	goto	l1785
  1430  0013F6                     l1791:
  1431                           
  1432                           ; BSR set to: 0
  1433  0013F6  50C0               	movf	4032,w,c	;volatile
  1434  0013F8  0100               	movlb	0	; () banked
  1435  0013FA  0100               	movlb	0	; () banked
  1436  0013FC  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1437  0013FE  0BF8               	andlw	-8
  1438  001400  0100               	movlb	0	; () banked
  1439  001402  1993               	xorwf	Open_adc@adcs& (0+255),w,b
  1440  001404  6EC0               	movwf	4032,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443  001406  50C0               	movf	4032,w,c	;volatile
  1444  001408  0BC7               	andlw	-57
  1445  00140A  0928               	iorlw	40
  1446  00140C  6EC0               	movwf	4032,c	;volatile
  1447                           
  1448                           ; BSR set to: 0
  1449  00140E  0EF3               	movlw	-13
  1450  001410  16C1               	andwf	4033,f,c	;volatile
  1451                           
  1452                           ; BSR set to: 0
  1453  001412  0EFC               	movlw	-4
  1454  001414  16C1               	andwf	4033,f,c	;volatile
  1455                           
  1456                           ; BSR set to: 0
  1457  001416  8EC0               	bsf	4032,7,c	;volatile
  1458                           
  1459                           ; BSR set to: 0
  1460  001418  80C2               	bsf	4034,0,c	;volatile
  1461                           
  1462                           ; BSR set to: 0
  1463  00141A  82C2               	bsf	4034,1,c	;volatile
  1464  00141C  0012               	return	
  1465  00141E                     __end_of_Open_adc:
  1466                           	opt stack 0
  1467                           tosu	equ	0xFFF
  1468                           tosh	equ	0xFFE
  1469                           tosl	equ	0xFFD
  1470                           pclath	equ	0xFFA
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           prodh	equ	0xFF4
  1476                           prodl	equ	0xFF3
  1477                           intcon	equ	0xFF2
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _Open1 *****************
  1485 ;; Defined at:
  1486 ;;		line 33 in file "EAB_Serial.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  BaudRate        4    6[BANK0 ] long 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  freq            4   18[BANK0 ] long 
  1491 ;;  BRGval          2   22[BANK0 ] int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      unsigned char 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:       18 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    3
  1508 ;; This function calls:
  1509 ;;		_GetFreq
  1510 ;;		___aldiv
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text8
  1517  00141E                     __ptext8:
  1518                           	opt stack 0
  1519  00141E                     _Open1:
  1520                           	opt stack 27
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;incstack = 0
  1524  00141E  D801               	call	u788
  1525  001420  D00C               	goto	u789
  1526  001422                     u788:
  1527  001422  0005               	push	
  1528  001424  6EFA               	movwf	pclath,c
  1529  001426  0100               	movlb	0	; () banked
  1530  001428  0100               	movlb	0	; () banked
  1531  00142A  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1532  00142C  6EFD               	movwf	tosl,c
  1533  00142E  0100               	movlb	0	; () banked
  1534  001430  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1535  001432  6EFE               	movwf	tosh,c
  1536  001434  6AFF               	clrf	tosu,c
  1537  001436  50FA               	movf	pclath,w,c
  1538  001438  0012               	return		;indir
  1539  00143A                     u789:
  1540  00143A  C020  F09A         	movff	?_GetFreq,Open1@freq
  1541  00143E  C021  F09B         	movff	?_GetFreq+1,Open1@freq+1
  1542  001442  C022  F09C         	movff	?_GetFreq+2,Open1@freq+2
  1543  001446  C023  F09D         	movff	?_GetFreq+3,Open1@freq+3
  1544  00144A  C09A  F024         	movff	Open1@freq,___aldiv@dividend
  1545  00144E  C09B  F025         	movff	Open1@freq+1,___aldiv@dividend+1
  1546  001452  C09C  F026         	movff	Open1@freq+2,___aldiv@dividend+2
  1547  001456  C09D  F027         	movff	Open1@freq+3,___aldiv@dividend+3
  1548  00145A  0100               	movlb	0	; () banked
  1549  00145C  C08E  F092         	movff	Open1@BaudRate,??_Open1
  1550  001460  0100               	movlb	0	; () banked
  1551  001462  C08F  F093         	movff	Open1@BaudRate+1,??_Open1+1
  1552  001466  0100               	movlb	0	; () banked
  1553  001468  C090  F094         	movff	Open1@BaudRate+2,??_Open1+2
  1554  00146C  0100               	movlb	0	; () banked
  1555  00146E  C091  F095         	movff	Open1@BaudRate+3,??_Open1+3
  1556  001472  0E02               	movlw	2
  1557  001474                     u795:
  1558  001474  90D8               	bcf	status,0,c
  1559  001476  0100               	movlb	0	; () banked
  1560  001478  3792               	rlcf	??_Open1& (0+255),f,b
  1561  00147A  3793               	rlcf	(??_Open1+1)& (0+255),f,b
  1562  00147C  3794               	rlcf	(??_Open1+2)& (0+255),f,b
  1563  00147E  3795               	rlcf	(??_Open1+3)& (0+255),f,b
  1564  001480  2EE8               	decfsz	wreg,f,c
  1565  001482  D7F8               	goto	u795
  1566  001484  C092  F028         	movff	??_Open1,___aldiv@divisor
  1567  001488  C093  F029         	movff	??_Open1+1,___aldiv@divisor+1
  1568  00148C  C094  F02A         	movff	??_Open1+2,___aldiv@divisor+2
  1569  001490  C095  F02B         	movff	??_Open1+3,___aldiv@divisor+3
  1570  001494  ECEF  F008         	call	___aldiv	;wreg free
  1571  001498  C024  F096         	movff	?___aldiv,??_Open1+4
  1572  00149C  C025  F097         	movff	?___aldiv+1,??_Open1+5
  1573  0014A0  C026  F098         	movff	?___aldiv+2,??_Open1+6
  1574  0014A4  C027  F099         	movff	?___aldiv+3,??_Open1+7
  1575  0014A8  0EFF               	movlw	255
  1576  0014AA  0100               	movlb	0	; () banked
  1577  0014AC  2596               	addwf	(??_Open1+4)& (0+255),w,b
  1578  0014AE  0100               	movlb	0	; () banked
  1579  0014B0  0100               	movlb	0	; () banked
  1580  0014B2  6F9E               	movwf	Open1@BRGval& (0+255),b
  1581  0014B4  0EFF               	movlw	255
  1582  0014B6  0100               	movlb	0	; () banked
  1583  0014B8  2197               	addwfc	(??_Open1+5)& (0+255),w,b
  1584  0014BA  0100               	movlb	0	; () banked
  1585  0014BC  6F9F               	movwf	(Open1@BRGval+1)& (0+255),b
  1586                           
  1587                           ; BSR set to: 0
  1588  0014BE  0100               	movlb	0	; () banked
  1589  0014C0  0100               	movlb	0	; () banked
  1590  0014C2  519F               	movf	(Open1@BRGval+1)& (0+255),w,b
  1591  0014C4  0A80               	xorlw	128
  1592  0014C6  0F80               	addlw	-128
  1593  0014C8  0E01               	movlw	1
  1594  0014CA  B4D8               	btfsc	status,2,c
  1595  0014CC  5D9E               	subwf	Open1@BRGval& (0+255),w,b
  1596  0014CE  A0D8               	btfss	status,0,c
  1597  0014D0  0012               	return	
  1598                           
  1599                           ; BSR set to: 0
  1600  0014D2  86B8               	bsf	4024,3,c	;volatile
  1601  0014D4  84AC               	bsf	4012,2,c	;volatile
  1602  0014D6  98AC               	bcf	4012,4,c	;volatile
  1603                           
  1604                           ; BSR set to: 0
  1605  0014D8  0100               	movlb	0	; () banked
  1606  0014DA  C09F  F092         	movff	Open1@BRGval+1,??_Open1
  1607  0014DE  C092  F093         	movff	??_Open1,??_Open1+1
  1608  0014E2  0100               	movlb	0	; () banked
  1609  0014E4  6B94               	clrf	(??_Open1+2)& (0+255),b
  1610  0014E6  0100               	movlb	0	; () banked
  1611  0014E8  5193               	movf	(??_Open1+1)& (0+255),w,b
  1612  0014EA  6EB0               	movwf	4016,c	;volatile
  1613                           
  1614                           ; BSR set to: 0
  1615  0014EC  C09E  FFAF         	movff	Open1@BRGval,4015	;volatile
  1616                           
  1617                           ; BSR set to: 0
  1618  0014F0  010F               	movlb	15	; () banked
  1619  0014F2  010F               	movlb	15	; () banked
  1620  0014F4  9D3A               	bcf	58,6,b	;volatile
  1621                           
  1622                           ; BSR set to: 15
  1623  0014F6  010F               	movlb	15	; () banked
  1624  0014F8  010F               	movlb	15	; () banked
  1625  0014FA  9F3A               	bcf	58,7,b	;volatile
  1626                           
  1627                           ; BSR set to: 15
  1628  0014FC  8C94               	bsf	3988,6,c	;volatile
  1629                           
  1630                           ; BSR set to: 15
  1631  0014FE  8E94               	bsf	3988,7,c	;volatile
  1632                           
  1633                           ; BSR set to: 15
  1634  001500  8AAC               	bsf	4012,5,c	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637  001502  88AB               	bsf	4011,4,c	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640  001504  8EAB               	bsf	4011,7,c	;volatile
  1641  001506  0012               	return	
  1642  001508                     __end_of_Open1:
  1643                           	opt stack 0
  1644                           tosu	equ	0xFFF
  1645                           tosh	equ	0xFFE
  1646                           tosl	equ	0xFFD
  1647                           pclath	equ	0xFFA
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           prodh	equ	0xFF4
  1653                           prodl	equ	0xFF3
  1654                           intcon	equ	0xFF2
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           postdec1	equ	0xFE5
  1658                           fsr1l	equ	0xFE1
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _Open2 *****************
  1662 ;; Defined at:
  1663 ;;		line 61 in file "EAB_Serial.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  BaudRate        4    6[BANK0 ] long 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  freq            4   18[BANK0 ] long 
  1668 ;;  temp            2   22[BANK0 ] int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:       18 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		_GetFreq
  1687 ;;		___aldiv
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text9
  1694  001508                     __ptext9:
  1695                           	opt stack 0
  1696  001508                     _Open2:
  1697                           	opt stack 27
  1698                           
  1699                           ;incstack = 0
  1700  001508  D801               	call	u818
  1701  00150A  D00C               	goto	u819
  1702  00150C                     u818:
  1703  00150C  0005               	push	
  1704  00150E  6EFA               	movwf	pclath,c
  1705  001510  0100               	movlb	0	; () banked
  1706  001512  0100               	movlb	0	; () banked
  1707  001514  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1708  001516  6EFD               	movwf	tosl,c
  1709  001518  0100               	movlb	0	; () banked
  1710  00151A  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1711  00151C  6EFE               	movwf	tosh,c
  1712  00151E  6AFF               	clrf	tosu,c
  1713  001520  50FA               	movf	pclath,w,c
  1714  001522  0012               	return		;indir
  1715  001524                     u819:
  1716  001524  C020  F09A         	movff	?_GetFreq,Open2@freq
  1717  001528  C021  F09B         	movff	?_GetFreq+1,Open2@freq+1
  1718  00152C  C022  F09C         	movff	?_GetFreq+2,Open2@freq+2
  1719  001530  C023  F09D         	movff	?_GetFreq+3,Open2@freq+3
  1720  001534  C09A  F024         	movff	Open2@freq,___aldiv@dividend
  1721  001538  C09B  F025         	movff	Open2@freq+1,___aldiv@dividend+1
  1722  00153C  C09C  F026         	movff	Open2@freq+2,___aldiv@dividend+2
  1723  001540  C09D  F027         	movff	Open2@freq+3,___aldiv@dividend+3
  1724  001544  0100               	movlb	0	; () banked
  1725  001546  C08E  F092         	movff	Open2@BaudRate,??_Open2
  1726  00154A  0100               	movlb	0	; () banked
  1727  00154C  C08F  F093         	movff	Open2@BaudRate+1,??_Open2+1
  1728  001550  0100               	movlb	0	; () banked
  1729  001552  C090  F094         	movff	Open2@BaudRate+2,??_Open2+2
  1730  001556  0100               	movlb	0	; () banked
  1731  001558  C091  F095         	movff	Open2@BaudRate+3,??_Open2+3
  1732  00155C  0E02               	movlw	2
  1733  00155E                     u825:
  1734  00155E  90D8               	bcf	status,0,c
  1735  001560  0100               	movlb	0	; () banked
  1736  001562  3792               	rlcf	??_Open2& (0+255),f,b
  1737  001564  3793               	rlcf	(??_Open2+1)& (0+255),f,b
  1738  001566  3794               	rlcf	(??_Open2+2)& (0+255),f,b
  1739  001568  3795               	rlcf	(??_Open2+3)& (0+255),f,b
  1740  00156A  2EE8               	decfsz	wreg,f,c
  1741  00156C  D7F8               	goto	u825
  1742  00156E  C092  F028         	movff	??_Open2,___aldiv@divisor
  1743  001572  C093  F029         	movff	??_Open2+1,___aldiv@divisor+1
  1744  001576  C094  F02A         	movff	??_Open2+2,___aldiv@divisor+2
  1745  00157A  C095  F02B         	movff	??_Open2+3,___aldiv@divisor+3
  1746  00157E  ECEF  F008         	call	___aldiv	;wreg free
  1747  001582  C024  F096         	movff	?___aldiv,??_Open2+4
  1748  001586  C025  F097         	movff	?___aldiv+1,??_Open2+5
  1749  00158A  C026  F098         	movff	?___aldiv+2,??_Open2+6
  1750  00158E  C027  F099         	movff	?___aldiv+3,??_Open2+7
  1751  001592  0EFF               	movlw	255
  1752  001594  0100               	movlb	0	; () banked
  1753  001596  2596               	addwf	(??_Open2+4)& (0+255),w,b
  1754  001598  0100               	movlb	0	; () banked
  1755  00159A  0100               	movlb	0	; () banked
  1756  00159C  6F9E               	movwf	Open2@temp& (0+255),b
  1757  00159E  0EFF               	movlw	255
  1758  0015A0  0100               	movlb	0	; () banked
  1759  0015A2  2197               	addwfc	(??_Open2+5)& (0+255),w,b
  1760  0015A4  0100               	movlb	0	; () banked
  1761  0015A6  6F9F               	movwf	(Open2@temp+1)& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764  0015A8  0100               	movlb	0	; () banked
  1765  0015AA  0100               	movlb	0	; () banked
  1766  0015AC  519F               	movf	(Open2@temp+1)& (0+255),w,b
  1767  0015AE  0A80               	xorlw	128
  1768  0015B0  0F80               	addlw	-128
  1769  0015B2  0E01               	movlw	1
  1770  0015B4  B4D8               	btfsc	status,2,c
  1771  0015B6  5D9E               	subwf	Open2@temp& (0+255),w,b
  1772  0015B8  A0D8               	btfss	status,0,c
  1773  0015BA  0012               	return	
  1774                           
  1775                           ; BSR set to: 0
  1776  0015BC  8670               	bsf	3952,3,c	;volatile
  1777  0015BE  8472               	bsf	3954,2,c	;volatile
  1778  0015C0  9872               	bcf	3954,4,c	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781  0015C2  0100               	movlb	0	; () banked
  1782  0015C4  C09F  F092         	movff	Open2@temp+1,??_Open2
  1783  0015C8  C092  F093         	movff	??_Open2,??_Open2+1
  1784  0015CC  0100               	movlb	0	; () banked
  1785  0015CE  6B94               	clrf	(??_Open2+2)& (0+255),b
  1786  0015D0  0100               	movlb	0	; () banked
  1787  0015D2  5193               	movf	(??_Open2+1)& (0+255),w,b
  1788  0015D4  6E76               	movwf	3958,c	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791  0015D6  C09E  FF75         	movff	Open2@temp,3957	;volatile
  1792                           
  1793                           ; BSR set to: 0
  1794  0015DA  8C93               	bsf	3987,6,c	;volatile
  1795                           
  1796                           ; BSR set to: 0
  1797  0015DC  8E93               	bsf	3987,7,c	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800  0015DE  8A72               	bsf	3954,5,c	;volatile
  1801                           
  1802                           ; BSR set to: 0
  1803  0015E0  8871               	bsf	3953,4,c	;volatile
  1804                           
  1805                           ; BSR set to: 0
  1806  0015E2  8E71               	bsf	3953,7,c	;volatile
  1807  0015E4  0012               	return	
  1808  0015E6                     __end_of_Open2:
  1809                           	opt stack 0
  1810                           tosu	equ	0xFFF
  1811                           tosh	equ	0xFFE
  1812                           tosl	equ	0xFFD
  1813                           pclath	equ	0xFFA
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           prodh	equ	0xFF4
  1819                           prodl	equ	0xFF3
  1820                           intcon	equ	0xFF2
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1l	equ	0xFE1
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function ___aldiv *****************
  1828 ;; Defined at:
  1829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  dividend        4   35[COMRAM] long 
  1832 ;;  divisor         4   39[COMRAM] long 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  quotient        4    2[BANK0 ] long 
  1835 ;;  sign            1    1[BANK0 ] unsigned char 
  1836 ;;  counter         1    0[BANK0 ] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  4   35[COMRAM] long 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;Total ram usage:       15 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    2
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_Open_adc
  1857 ;;		_Open1
  1858 ;;		_Open2
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text10
  1863  0011DE                     __ptext10:
  1864                           	opt stack 0
  1865  0011DE                     ___aldiv:
  1866                           	opt stack 27
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;incstack = 0
  1870  0011DE  6E2C               	movwf	??___aldiv& (0+255),c
  1871  0011E0  0E00               	movlw	0
  1872  0011E2  0100               	movlb	0	; () banked
  1873  0011E4  0100               	movlb	0	; () banked
  1874  0011E6  6F89               	movwf	___aldiv@sign& (0+255),b
  1875  0011E8  502C               	movf	??___aldiv& (0+255),w,c
  1876                           
  1877                           ; BSR set to: 0
  1878  0011EA  502B               	movf	___aldiv@divisor+3,w,c
  1879  0011EC  0A80               	xorlw	128
  1880  0011EE  0F80               	addlw	128
  1881  0011F0  E108               	bnz	u845
  1882  0011F2  0E00               	movlw	0
  1883  0011F4  5C2A               	subwf	___aldiv@divisor+2,w,c
  1884  0011F6  E105               	bnz	u845
  1885  0011F8  0E00               	movlw	0
  1886  0011FA  5C29               	subwf	___aldiv@divisor+1,w,c
  1887  0011FC  E102               	bnz	u845
  1888  0011FE  0E00               	movlw	0
  1889  001200  5C28               	subwf	___aldiv@divisor,w,c
  1890  001202                     u845:
  1891  001202  B0D8               	btfsc	status,0,c
  1892  001204  D00E               	goto	l1873
  1893                           
  1894                           ; BSR set to: 0
  1895  001206  1E2B               	comf	___aldiv@divisor+3,f,c
  1896  001208  1E2A               	comf	___aldiv@divisor+2,f,c
  1897  00120A  1E29               	comf	___aldiv@divisor+1,f,c
  1898  00120C  6C28               	negf	___aldiv@divisor,c
  1899  00120E  0E00               	movlw	0
  1900  001210  2229               	addwfc	___aldiv@divisor+1,f,c
  1901  001212  222A               	addwfc	___aldiv@divisor+2,f,c
  1902  001214  222B               	addwfc	___aldiv@divisor+3,f,c
  1903                           
  1904                           ; BSR set to: 0
  1905  001216  6E2C               	movwf	??___aldiv& (0+255),c
  1906  001218  0E01               	movlw	1
  1907  00121A  0100               	movlb	0	; () banked
  1908  00121C  0100               	movlb	0	; () banked
  1909  00121E  6F89               	movwf	___aldiv@sign& (0+255),b
  1910  001220  502C               	movf	??___aldiv& (0+255),w,c
  1911  001222                     l1873:
  1912                           
  1913                           ; BSR set to: 0
  1914  001222  5027               	movf	___aldiv@dividend+3,w,c
  1915  001224  0A80               	xorlw	128
  1916  001226  0F80               	addlw	128
  1917  001228  E108               	bnz	u855
  1918  00122A  0E00               	movlw	0
  1919  00122C  5C26               	subwf	___aldiv@dividend+2,w,c
  1920  00122E  E105               	bnz	u855
  1921  001230  0E00               	movlw	0
  1922  001232  5C25               	subwf	___aldiv@dividend+1,w,c
  1923  001234  E102               	bnz	u855
  1924  001236  0E00               	movlw	0
  1925  001238  5C24               	subwf	___aldiv@dividend,w,c
  1926  00123A                     u855:
  1927  00123A  B0D8               	btfsc	status,0,c
  1928  00123C  D00C               	goto	l1879
  1929                           
  1930                           ; BSR set to: 0
  1931  00123E  1E27               	comf	___aldiv@dividend+3,f,c
  1932  001240  1E26               	comf	___aldiv@dividend+2,f,c
  1933  001242  1E25               	comf	___aldiv@dividend+1,f,c
  1934  001244  6C24               	negf	___aldiv@dividend,c
  1935  001246  0E00               	movlw	0
  1936  001248  2225               	addwfc	___aldiv@dividend+1,f,c
  1937  00124A  2226               	addwfc	___aldiv@dividend+2,f,c
  1938  00124C  2227               	addwfc	___aldiv@dividend+3,f,c
  1939                           
  1940                           ; BSR set to: 0
  1941  00124E  0E01               	movlw	1
  1942  001250  0100               	movlb	0	; () banked
  1943  001252  0100               	movlb	0	; () banked
  1944  001254  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  1945  001256                     l1879:
  1946                           
  1947                           ; BSR set to: 0
  1948  001256  0E00               	movlw	0
  1949  001258  0100               	movlb	0	; () banked
  1950  00125A  0100               	movlb	0	; () banked
  1951  00125C  6F8A               	movwf	___aldiv@quotient& (0+255),b
  1952  00125E  0E00               	movlw	0
  1953  001260  0100               	movlb	0	; () banked
  1954  001262  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1955  001264  0E00               	movlw	0
  1956  001266  0100               	movlb	0	; () banked
  1957  001268  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1958  00126A  0E00               	movlw	0
  1959  00126C  0100               	movlb	0	; () banked
  1960  00126E  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1961                           
  1962                           ; BSR set to: 0
  1963  001270  502B               	movf	___aldiv@divisor+3,w,c
  1964  001272  1028               	iorwf	___aldiv@divisor,w,c
  1965  001274  1029               	iorwf	___aldiv@divisor+1,w,c
  1966  001276  102A               	iorwf	___aldiv@divisor+2,w,c
  1967  001278  B4D8               	btfsc	status,2,c
  1968  00127A  D039               	goto	l1901
  1969                           
  1970                           ; BSR set to: 0
  1971  00127C  6E2C               	movwf	??___aldiv& (0+255),c
  1972  00127E  0E01               	movlw	1
  1973  001280  0100               	movlb	0	; () banked
  1974  001282  0100               	movlb	0	; () banked
  1975  001284  6F88               	movwf	___aldiv@counter& (0+255),b
  1976  001286  502C               	movf	??___aldiv& (0+255),w,c
  1977  001288  D008               	goto	l1887
  1978  00128A                     l1885:
  1979                           
  1980                           ; BSR set to: 0
  1981  00128A  90D8               	bcf	status,0,c
  1982  00128C  3628               	rlcf	___aldiv@divisor,f,c
  1983  00128E  3629               	rlcf	___aldiv@divisor+1,f,c
  1984  001290  362A               	rlcf	___aldiv@divisor+2,f,c
  1985  001292  362B               	rlcf	___aldiv@divisor+3,f,c
  1986  001294  0100               	movlb	0	; () banked
  1987  001296  0100               	movlb	0	; () banked
  1988  001298  2B88               	incf	___aldiv@counter& (0+255),f,b
  1989  00129A                     l1887:
  1990                           
  1991                           ; BSR set to: 0
  1992  00129A  AE2B               	btfss	___aldiv@divisor+3,7,c
  1993  00129C  D7F6               	goto	l1885
  1994  00129E                     l1889:
  1995                           
  1996                           ; BSR set to: 0
  1997  00129E  0100               	movlb	0	; () banked
  1998  0012A0  90D8               	bcf	status,0,c
  1999  0012A2  0100               	movlb	0	; () banked
  2000  0012A4  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  2001  0012A6  0100               	movlb	0	; () banked
  2002  0012A8  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2003  0012AA  0100               	movlb	0	; () banked
  2004  0012AC  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2005  0012AE  0100               	movlb	0	; () banked
  2006  0012B0  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2007                           
  2008                           ; BSR set to: 0
  2009  0012B2  5028               	movf	___aldiv@divisor,w,c
  2010  0012B4  5C24               	subwf	___aldiv@dividend,w,c
  2011  0012B6  5029               	movf	___aldiv@divisor+1,w,c
  2012  0012B8  5825               	subwfb	___aldiv@dividend+1,w,c
  2013  0012BA  502A               	movf	___aldiv@divisor+2,w,c
  2014  0012BC  5826               	subwfb	___aldiv@dividend+2,w,c
  2015  0012BE  502B               	movf	___aldiv@divisor+3,w,c
  2016  0012C0  5827               	subwfb	___aldiv@dividend+3,w,c
  2017  0012C2  A0D8               	btfss	status,0,c
  2018  0012C4  D00B               	goto	l1897
  2019                           
  2020                           ; BSR set to: 0
  2021  0012C6  5028               	movf	___aldiv@divisor,w,c
  2022  0012C8  5E24               	subwf	___aldiv@dividend,f,c
  2023  0012CA  5029               	movf	___aldiv@divisor+1,w,c
  2024  0012CC  5A25               	subwfb	___aldiv@dividend+1,f,c
  2025  0012CE  502A               	movf	___aldiv@divisor+2,w,c
  2026  0012D0  5A26               	subwfb	___aldiv@dividend+2,f,c
  2027  0012D2  502B               	movf	___aldiv@divisor+3,w,c
  2028  0012D4  5A27               	subwfb	___aldiv@dividend+3,f,c
  2029                           
  2030                           ; BSR set to: 0
  2031  0012D6  0100               	movlb	0	; () banked
  2032  0012D8  0100               	movlb	0	; () banked
  2033  0012DA  818A               	bsf	___aldiv@quotient& (0+255),0,b
  2034  0012DC                     l1897:
  2035                           
  2036                           ; BSR set to: 0
  2037  0012DC  90D8               	bcf	status,0,c
  2038  0012DE  322B               	rrcf	___aldiv@divisor+3,f,c
  2039  0012E0  322A               	rrcf	___aldiv@divisor+2,f,c
  2040  0012E2  3229               	rrcf	___aldiv@divisor+1,f,c
  2041  0012E4  3228               	rrcf	___aldiv@divisor,f,c
  2042                           
  2043                           ; BSR set to: 0
  2044  0012E6  0100               	movlb	0	; () banked
  2045  0012E8  0100               	movlb	0	; () banked
  2046  0012EA  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  2047  0012EC  D7D8               	goto	l1889
  2048  0012EE                     l1901:
  2049                           
  2050                           ; BSR set to: 0
  2051  0012EE  0100               	movlb	0	; () banked
  2052  0012F0  0100               	movlb	0	; () banked
  2053  0012F2  5189               	movf	___aldiv@sign& (0+255),w,b
  2054  0012F4  B4D8               	btfsc	status,2,c
  2055  0012F6  D010               	goto	l1905
  2056                           
  2057                           ; BSR set to: 0
  2058  0012F8  0100               	movlb	0	; () banked
  2059  0012FA  0100               	movlb	0	; () banked
  2060  0012FC  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2061  0012FE  0100               	movlb	0	; () banked
  2062  001300  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2063  001302  0100               	movlb	0	; () banked
  2064  001304  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2065  001306  0100               	movlb	0	; () banked
  2066  001308  6D8A               	negf	___aldiv@quotient& (0+255),b
  2067  00130A  0E00               	movlw	0
  2068  00130C  0100               	movlb	0	; () banked
  2069  00130E  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2070  001310  0100               	movlb	0	; () banked
  2071  001312  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2072  001314  0100               	movlb	0	; () banked
  2073  001316  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2074  001318                     l1905:
  2075                           
  2076                           ; BSR set to: 0
  2077  001318  C08A  F024         	movff	___aldiv@quotient,?___aldiv
  2078  00131C  C08B  F025         	movff	___aldiv@quotient+1,?___aldiv+1
  2079  001320  C08C  F026         	movff	___aldiv@quotient+2,?___aldiv+2
  2080  001324  C08D  F027         	movff	___aldiv@quotient+3,?___aldiv+3
  2081  001328  0012               	return	
  2082  00132A                     __end_of___aldiv:
  2083                           	opt stack 0
  2084                           tosu	equ	0xFFF
  2085                           tosh	equ	0xFFE
  2086                           tosl	equ	0xFFD
  2087                           pclath	equ	0xFFA
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           prodh	equ	0xFF4
  2093                           prodl	equ	0xFF3
  2094                           intcon	equ	0xFF2
  2095                           postinc0	equ	0xFEE
  2096                           wreg	equ	0xFE8
  2097                           postdec1	equ	0xFE5
  2098                           fsr1l	equ	0xFE1
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _GetFreq *****************
  2102 ;; Defined at:
  2103 ;;		line 128 in file "EAB_Oscillator.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  4   31[COMRAM] long 
  2110 ;; Registers used:
  2111 ;;		None
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        4 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_Open_adc
  2128 ;;		_Open1
  2129 ;;		_Open2
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text11
  2134  00173E                     __ptext11:
  2135                           	opt stack 0
  2136  00173E                     _GetFreq:
  2137                           	opt stack 27
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;incstack = 0
  2141  00173E  C039  F020         	movff	_OscFreq,?_GetFreq
  2142  001742  C03A  F021         	movff	_OscFreq+1,?_GetFreq+1
  2143  001746  C03B  F022         	movff	_OscFreq+2,?_GetFreq+2
  2144  00174A  C03C  F023         	movff	_OscFreq+3,?_GetFreq+3
  2145  00174E  0012               	return	
  2146  001750                     __end_of_GetFreq:
  2147                           	opt stack 0
  2148                           tosu	equ	0xFFF
  2149                           tosh	equ	0xFFE
  2150                           tosl	equ	0xFFD
  2151                           pclath	equ	0xFFA
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1l	equ	0xFE1
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _LowPriority_InterruptHandler *****************
  2166 ;; Defined at:
  2167 ;;		line 21 in file "EAB_InterruptHandler.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;		None               void
  2174 ;; Registers used:
  2175 ;;		None
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:       17 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		Interrupt level 1
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	intcodelo
  2196  000018                     __pintcodelo:
  2197                           	opt stack 0
  2198  000018                     _LowPriority_InterruptHandler:
  2199                           	opt stack 27
  2200                           
  2201                           ;incstack = 0
  2202  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2203  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2204  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2205  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2206  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2207  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2208  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2209  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2210  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2211  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2212  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2213  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2214  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2215  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2216  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2217  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2218  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2219  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2220  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2221  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2222  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2223  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2224  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2225  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2226  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2227  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2228  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2229  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2230  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2231  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2232  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2233  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2234  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2235  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2236  0000A0  0010               	retfie	
  2237  0000A2                     __end_of_LowPriority_InterruptHandler:
  2238                           	opt stack 0
  2239                           tosu	equ	0xFFF
  2240                           tosh	equ	0xFFE
  2241                           tosl	equ	0xFFD
  2242                           pclatu	equ	0xFFB
  2243                           pclath	equ	0xFFA
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           prodh	equ	0xFF4
  2249                           prodl	equ	0xFF3
  2250                           intcon	equ	0xFF2
  2251                           postinc0	equ	0xFEE
  2252                           fsr0h	equ	0xFEA
  2253                           fsr0l	equ	0xFE9
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           bsr	equ	0xFE0
  2259                           fsr2h	equ	0xFDA
  2260                           fsr2l	equ	0xFD9
  2261                           status	equ	0xFD8
  2262                           
  2263 ;; *************** function _HighPriority_InterruptHandler *****************
  2264 ;; Defined at:
  2265 ;;		line 14 in file "EAB_InterruptHandler.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		None
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;Total ram usage:       14 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		Interrupt level 2
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	intcode
  2293  000008                     __pintcode:
  2294                           	opt stack 0
  2295  000008                     _HighPriority_InterruptHandler:
  2296                           	opt stack 27
  2297                           
  2298                           ;incstack = 0
  2299  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  2300  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  2301  000010  EFF3  F00A         	goto	int_func
  2302                           tosu	equ	0xFFF
  2303                           tosh	equ	0xFFE
  2304                           tosl	equ	0xFFD
  2305                           pclatu	equ	0xFFB
  2306                           pclath	equ	0xFFA
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon	equ	0xFF2
  2314                           postinc0	equ	0xFEE
  2315                           fsr0h	equ	0xFEA
  2316                           fsr0l	equ	0xFE9
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           bsr	equ	0xFE0
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326                           	psect	intcode_body
  2327  0015E6                     __pintcode_body:
  2328                           	opt stack 27
  2329  0015E6                     int_func:
  2330                           	opt stack 27
  2331  0015E6  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  2332  0015EA  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  2333  0015EE  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  2334  0015F2  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  2335  0015F6  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  2336  0015FA  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  2337  0015FE  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  2338  001602  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  2339  001606  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  2340  00160A  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  2341  00160E  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  2342  001612  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  2343  001616  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  2344  00161A  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  2345  00161E  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  2346  001622  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  2347  001626  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  2348  00162A  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  2349  00162E  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  2350  001632  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  2351  001636  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  2352  00163A  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  2353  00163E  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  2354  001642  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  2355  001646  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  2356  00164A  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  2357  00164E  0011               	retfie		f
  2358  001650                     __end_of_HighPriority_InterruptHandler:
  2359                           	opt stack 0
  2360                           tosu	equ	0xFFF
  2361                           tosh	equ	0xFFE
  2362                           tosl	equ	0xFFD
  2363                           pclatu	equ	0xFFB
  2364                           pclath	equ	0xFFA
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           fsr0h	equ	0xFEA
  2374                           fsr0l	equ	0xFE9
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1h	equ	0xFE2
  2378                           fsr1l	equ	0xFE1
  2379                           bsr	equ	0xFE0
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           tosu	equ	0xFFF
  2384                           tosh	equ	0xFFE
  2385                           tosl	equ	0xFFD
  2386                           pclatu	equ	0xFFB
  2387                           pclath	equ	0xFFA
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           prodh	equ	0xFF4
  2393                           prodl	equ	0xFF3
  2394                           intcon	equ	0xFF2
  2395                           postinc0	equ	0xFEE
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           wreg	equ	0xFE8
  2399                           postdec1	equ	0xFE5
  2400                           fsr1h	equ	0xFE2
  2401                           fsr1l	equ	0xFE1
  2402                           bsr	equ	0xFE0
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407                           	psect	rparam
  2408  0000                     tosu	equ	0xFFF
  2409                           tosh	equ	0xFFE
  2410                           tosl	equ	0xFFD
  2411                           pclatu	equ	0xFFB
  2412                           pclath	equ	0xFFA
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           prodh	equ	0xFF4
  2418                           prodl	equ	0xFF3
  2419                           intcon	equ	0xFF2
  2420                           postinc0	equ	0xFEE
  2421                           fsr0h	equ	0xFEA
  2422                           fsr0l	equ	0xFE9
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1h	equ	0xFE2
  2426                           fsr1l	equ	0xFE1
  2427                           bsr	equ	0xFE0
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        57
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      63
    BANK0           160     30      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S115$2$0	PTR unsigned char  size(2) Largest target is 0

    S115$3$0	PTR unsigned char  size(2) Largest target is 0

    S1939$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S1939$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S1939$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S1939$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S1893$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S1893$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S225$ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    ADC.ReadData	PTR FTN()short  size(2) Largest target is 2
		 -> ReadData(), 

    S225$SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    ADC.SetChannel	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetChannel(), 

    S225$Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    ADC.Open	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Open_adc(), 

    S115$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S115$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S115$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S115$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S115$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S115$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S78$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S78$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S78$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S78$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S78$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S78$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv
    ___aldiv->_GetFreq

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open_adc->___aldiv
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3414
                                             24 BANK0      6     6      0
                              _Open1 *
                              _Open2 *
                           _Open_adc *
                           _ReadData *
                          _SendByte1 *
                          _SendByte2 *
                         _SetChannel *
                       _SetFreq_8MHZ *
                     _SetTimer0_1Sec *
 ---------------------------------------------------------------------------------
 (1) _SetTimer0_1Sec                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetChannel                                           2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SendByte2                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte1                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             6     4      2      23
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Open_adc                                             6     6      0     996
                                              6 BANK0      6     6      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4    1122
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4    1068
                                              6 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     907
                                             35 COMRAM     9     1      8
                                              0 BANK0      6     6      0
                            _GetFreq (ARG) *
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open2 *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _Open_adc *
     _GetFreq *
     ___aldiv *
       _GetFreq (ARG) *
   _ReadData *
   _SendByte1 *
   _SendByte2 *
   _SetChannel *
   _SetFreq_8MHZ *
   _SetTimer0_1Sec *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      46       5       43.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      12        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Aug 18 00:32:12 2014

                                    bsr 000FE0                                     l244 1774  
                                   l238 1766                                     _ADC 0082  
                                   _PR2 000FBB                                     u708 10FA  
                                   u709 1112                                     u718 111E  
                                   u719 1138                                     u728 113C  
                                   u825 155E                                     u818 150C  
                                   u819 1524                                     u748 115E  
                                   u845 1202                                     u749 1176  
                                   u758 119E                                     u855 123A  
                                   u759 11BC                                     u768 11C0  
                                   u688 1094                                     u689 10AC  
                                   u778 132E                                     u698 10C8  
                                   u795 1474                                     u779 1346  
                                   u699 10DC                                     u788 1422  
                                   u789 143A                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                         ?_SetTimer0_1Sec 0001  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l1901 12EE  
                                  l1905 1318                                    l1755 1154  
                                  l1781 139E                                    l1783 13A6  
                                  l1775 1386                                    l1791 13F6  
                                  l1873 1222                                    l1785 13AE  
                                  l1777 138E                                    l1779 1396  
                                  l1885 128A                                    l1789 13C0  
                                  l1887 129A                                    l1879 1256  
                                  l1897 12DC                                    l1889 129E  
                    _EnableRx2interrupt 000000                          _TIMER2_100usec 1033  
                                  _main 1070                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  fsr2l 000FD9                   __end_of_TIMER0_16mSec 105A  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 1750                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                         __end_of___aldiv 132A  
                                 ?_main 0001                                   _T0CON 000FD5  
                                 _T2CON 000FBA                          __CFG_DEBUG$OFF 000000  
                __end_of_TIMER0_130mSec 1029                                   _Open1 141E  
                                 _Open2 1508                  __end_of_TIMER2_100usec 103D  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                         __initialization 1650  
                          __end_of_main 11DE                       SetChannel@channel 0021  
                           Open1@BRGval 009E                        __end_of_ReadData 1706  
                                ??_main 00A0                        __end_of_Open_adc 141E  
                         __activetblptr 000003                   _SetTimer0_130milliSec 000000  
            __end_of_TIMER2_PR2_100usec 1063                              _SetChannel 1724  
                                ?_Open1 008E                                  ?_Open2 008E  
                            _SendArray1 000000                              _SendArray2 000000  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0024                                  _SPBRG1 000FAF  
                                _SPBRG2 000F75                                  _TX1REG 000FAD  
                                _TX2REG 000F73                              _Oscillator 0060  
                                _Timer0 1001                                  _Timer1 1069  
                                _Timer2 1010                      __size_of_SendByte1 000E  
                    __size_of_SendByte2 000E                               ??___aldiv 002C  
                         ?_SetFreq_8MHZ 0001                    _SetTimer0_16milliSec 000000  
                          __pdataCOMRAM 002D                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                              __accesstop 0060  
               __end_of__initialization 1694                   _SetTimer2_100microSec 000000  
                        __pcstackCOMRAM 0001                           __end_of_Open1 1508  
                         __end_of_Open2 15E6                            __pidataBANK0 169A  
                        ??_SetFreq_8MHZ 0020                        ??_SetTimer0_1Sec 0020  
                           ?_SetChannel 0001                                 ??_Open1 0092  
                               ??_Open2 0092                         ReadData@ADCdata 0024  
                     __end_of_SendByte1 1770                       __end_of_SendByte2 177E  
                           _PinFunction 000F38                               ?_ReadData 0020  
                            _delayCount 003E                               ?_Open_adc 0001  
                         _SetFreq_32MHZ 000000                           _SetFreq_16MHZ 000000  
 __end_of_HighPriority_InterruptHandler 1650  __size_of_HighPriority_InterruptHandler 1648  
         _HighPriority_InterruptHandler 0008                           _SetFreq_64MHZ 000000  
                           _SendString1 000000                             _SendString2 000000  
                               _SPBRGH1 000FB0                                 _SPBRGH2 000F76  
                      _TIMER2_PR2_1msec 1047                              ??_ReadData 0022  
                               _GetFreq 173E                                 _OscFreq 0039  
                            ??_Open_adc 008E                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 002D  
                               _Serial2 0076                     __size_of_SetChannel 001A  
                               ___aldiv 11DE                            __psmallconst 1000  
                               __pcinit 1650                                 __ramtop 1000  
                               __ptext0 1070                                 __ptext1 1706  
                               __ptext2 16C2                                 __ptext3 1724  
                               __ptext4 1762                                 __ptext5 1770  
                               __ptext6 16E4                                 __ptext7 132A  
                               __ptext8 141E                                 __ptext9 1508  
                             _T0CONbits 000FD5                               _T1CONbits 000FCD  
                             _T2CONbits 000FBA                        ___aldiv@dividend 0024  
                               main@LSB 00A3                                 main@MSB 00A2  
                        __pintcode_body 15E6                    end_of_initialization 1694  
                  __end_of_SetFreq_8MHZ 16E4                                 int_func 15E6  
                    _TIMER2_PR2_100usec 105A                        ___aldiv@quotient 008A  
                               postdec1 000FE5                                 postinc0 000FEE  
  __end_of_LowPriority_InterruptHandler 00A2   __size_of_LowPriority_InterruptHandler 008A  
          _LowPriority_InterruptHandler 0018                        __CFG_FOSC$INTIO7 000000  
        ?_HighPriority_InterruptHandler 0001                           _TIMER0_16mSec 1051  
                  __end_of_TIMER0_1mSec 1069                    __end_of_TIMER2_1msec 1047  
                        __end_of_Timer0 1010                          __end_of_Timer1 106E  
                        __end_of_Timer2 101F                               Open1@freq 009A  
                             Open2@freq 009A                               Open2@temp 009E  
                         __pidataCOMRAM 1750           ?_LowPriority_InterruptHandler 0001  
                          ??_SetChannel 0020                     start_initialization 1650  
                             _ReadByte1 000000                               _ReadByte2 000000  
                             _SendByte1 1762                               _SendByte2 1770  
                          _PinDirection 000F92                            Open_adc@adcs 0093  
                             _SetTimer0 000000                               _SetTimer1 000000  
                             _SetTimer2 000000                            Open_adc@freq 0092  
                     __size_of_ReadData 0022                               _Timer0Int 000000  
                             _Timer1Int 000000                               _Timer2Int 000000  
                         Open1@BaudRate 008E                      __end_of_SetChannel 173E  
                     __size_of_Open_adc 00F4                __end_of_TIMER2_PR2_1msec 1051  
                    _SetTimer0_1millSec 000000                             __pdataBANK0 0060  
                         Open2@BaudRate 008E                      _SetTimer2_1millSec 000000  
                           __pbssCOMRAM 003E                   __size_of_SetFreq_8MHZ 0022  
                         __pcstackBANK0 0088                            _OscFreqIndex 003D  
                              ?_GetFreq 0020                              ?_SendByte1 0001  
                            ?_SendByte2 0001                               __pintcode 0008  
                              ?___aldiv 0024                            _SetFreq_1MHZ 000000  
                          _SetFreq_2MHZ 000000                            _SetFreq_4MHZ 000000  
                           __pintcodelo 0018                            _SetFreq_8MHZ 16C2  
                           __smallconst 1000                          __size_of_Open1 00EA  
                        __size_of_Open2 00DE          ??_LowPriority_InterruptHandler 0001  
                        _SetFreq_250KHZ 000000                          _SetFreq_500KHZ 000000  
               __size_of_SetTimer0_1Sec 001E                         ___aldiv@divisor 0028  
                       ___aldiv@counter 0088                                _IPR1bits 000F9F  
                              _PIE1bits 000F9D                                _IPR3bits 000FA5  
                              _PIE3bits 000FA3                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4                                _RCONbits 000FD0  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                     __end_of_TIMER0_1Sec 1033  
                          _TIMER0_1mSec 1063                            _TIMER2_1msec 103D  
                             copy_data0 1668                               copy_data1 1688  
                              _ReadData 16E4                             ??_SendByte1 0020  
                           ??_SendByte2 0020                        __size_of_GetFreq 0012  
                              _Open_adc 132A                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                      __size_of___aldiv 014C                                __ptext10 11DE  
                              __ptext11 173E                             _OSCCON2bits 000FD2  
                      _SetFreq_31_25KHZ 000000                           __size_of_main 016E  
                           _TIMER0_1Sec 1029                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                          _SetTimer0_1Sec 1706  
                              intlevel1 0000                                intlevel2 0000  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F71  
                            _OSCCONbits 000FD3                            main@ADCvalue 00A4  
                          ___aldiv@sign 0089                  __end_of_SetTimer0_1Sec 1724  
                         SendByte1@Data 0020                           SendByte2@Data 0020  
