

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Aug 18 00:14:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     
    31 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    32  0000                     
    33 ;; Function _SetFreq_250KHZ is unused but had its address taken
    34  0000                     
    35 ;; Function _SetFreq_500KHZ is unused but had its address taken
    36  0000                     
    37 ;; Function _SetFreq_1MHZ is unused but had its address taken
    38  0000                     
    39 ;; Function _SetFreq_2MHZ is unused but had its address taken
    40  0000                     
    41 ;; Function _SetFreq_4MHZ is unused but had its address taken
    42  0000                     
    43 ;; Function _SetFreq_16MHZ is unused but had its address taken
    44  0000                     
    45 ;; Function _SetFreq_32MHZ is unused but had its address taken
    46  0000                     
    47 ;; Function _SetFreq_64MHZ is unused but had its address taken
    48  0000                     
    49 ;; Function _EnableINT0_SS2 is unused but had its address taken
    50  0000                     
    51 ;; Function _EnableINT2_SDI2 is unused but had its address taken
    52  0000                     
    53 ;; Function _EnableIOC_RB4 is unused but had its address taken
    54  0000                     
    55 ;; Function _EnableIOC_PWM3 is unused but had its address taken
    56  0000                     
    57 ;; Function _EnableINT0interruptHIGH is unused but had its address taken
    58  0000                     
    59 ;; Function _EnableINT2interrupt is unused but had its address taken
    60  0000                     
    61 ;; Function _EnableIOCinterrupt is unused but had its address taken
    62  0000                     
    63 ;; Function _SendByte1 is unused but had its address taken
    64  0000                     
    65 ;; Function _SendByte2 is unused but had its address taken
    66  0000                     
    67 ;; Function _SendString1 is unused but had its address taken
    68  0000                     
    69 ;; Function _SendString2 is unused but had its address taken
    70  0000                     
    71 ;; Function _ReadByte1 is unused but had its address taken
    72  0000                     
    73 ;; Function _ReadByte2 is unused but had its address taken
    74  0000                     
    75 ;; Function _EnableRx1interrupt is unused but had its address taken
    76  0000                     
    77 ;; Function _EnableRx2interrupt is unused but had its address taken
    78  0000                     
    79 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    80  0000                     
    81 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    82  0000                     
    83 ;; Function _SetTimer0_1millSec is unused but had its address taken
    84  0000                     
    85 ;; Function _SetTimer0 is unused but had its address taken
    86  0000                     
    87 ;; Function _Timer0Int is unused but had its address taken
    88  0000                     
    89 ;; Function _SetTimer1 is unused but had its address taken
    90  0000                     
    91 ;; Function _Timer1Int is unused but had its address taken
    92  0000                     
    93 ;; Function _SetTimer2_1millSec is unused but had its address taken
    94  0000                     
    95 ;; Function _SetTimer2_100microSec is unused but had its address taken
    96  0000                     
    97 ;; Function _SetTimer2 is unused but had its address taken
    98  0000                     
    99 ;; Function _Timer2Int is unused but had its address taken
   100  0000                     
   101                           	psect	idataCOMRAM
   102  001748                     __pidataCOMRAM:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _Serial2
   106  001748  1472               	dw	_Open2& (0+65535)
   107  00174A  0000               	dw	0
   108  00174C  1698               	dw	_SendArray2& (0+65535)
   109  00174E  0000               	dw	0
   110  001750  0000               	dw	0
   111  001752  0000               	dw	0
   112                           
   113                           ;initializer for _OscFreq
   114  001754  4240               	dw	16960
   115  001756  000F               	dw	15
   116                           
   117                           ;initializer for _OscFreqIndex
   118  001758  03                 	db	3
   119                           
   120                           	psect	idataBANK0
   121  001630                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _Oscillator
   125  001630  0000               	dw	0
   126  001632  0000               	dw	0
   127  001634  0000               	dw	0
   128  001636  0000               	dw	0
   129  001638  0000               	dw	0
   130  00163A  0000               	dw	0
   131  00163C  16C4               	dw	_SetFreq_8MHZ& (0+65535)
   132  00163E  0000               	dw	0
   133  001640  0000               	dw	0
   134  001642  0000               	dw	0
   135  001644  1736               	dw	_GetFreq& (0+65535)
   136                           
   137                           ;initializer for _ExternalInt
   138  001646  0000               	dw	0
   139  001648  171E               	dw	_EnableINT1_SCK2& (0+65535)
   140  00164A  0000               	dw	0
   141  00164C  0000               	dw	0
   142  00164E  0000               	dw	0
   143  001650  0000               	dw	0
   144  001652  1704               	dw	_EnableINT1interrupt& (0+65535)
   145  001654  0000               	dw	0
   146  001656  0000               	dw	0
   147                           
   148                           ;initializer for _Serial1
   149  001658  1388               	dw	_Open1& (0+65535)
   150  00165A  0000               	dw	0
   151  00165C  1664               	dw	_SendArray1& (0+65535)
   152  00165E  0000               	dw	0
   153  001660  0000               	dw	0
   154  001662  0000               	dw	0
   155                           
   156                           	psect	smallconst
   157  001000                     __psmallconst:
   158                           	opt stack 0
   159  001000  00                 	db	0
   160  001001                     _Timer0:
   161                           	opt stack 0
   162  001001  16E6               	dw	_SetTimer0_1Sec& (0+65535)
   163  001003  0000               	dw	0
   164  001005  0000               	dw	0
   165  001007  0000               	dw	0
   166  001009  0000               	dw	0
   167  00100B  0000               	dw	0
   168  00100D  3A                 	db	58
   169  00100E  2C                 	db	44
   170  00100F  7E                 	db	126
   171  001010                     __end_of_Timer0:
   172                           	opt stack 0
   173  001010                     _Timer2:
   174                           	opt stack 0
   175  001010  0000               	dw	0
   176  001012  0000               	dw	0
   177  001014  0000               	dw	0
   178  001016  0000               	dw	0
   179  001018  AA                 	db	170
   180  001019  B3                 	db	179
   181  00101A  3E                 	db	62
   182  00101B  98                 	db	152
   183  00101C  BA                 	db	186
   184  00101D  DC                 	db	220
   185  00101E  FE                 	db	254
   186  00101F                     __end_of_Timer2:
   187                           	opt stack 0
   188  00101F                     _TIMER0_130mSec:
   189                           	opt stack 0
   190  00101F  C1                 	db	193
   191  001020  C4                 	db	196
   192  001021  C5                 	db	197
   193  001022  C6                 	db	198
   194  001023  C7                 	db	199
   195  001024  80                 	db	128
   196  001025  81                 	db	129
   197  001026  82                 	db	130
   198  001027  83                 	db	131
   199  001028  84                 	db	132
   200  001029                     __end_of_TIMER0_130mSec:
   201                           	opt stack 0
   202  001029                     _TIMER0_1Sec:
   203                           	opt stack 0
   204  001029  C4                 	db	196
   205  00102A  C7                 	db	199
   206  00102B  80                 	db	128
   207  00102C  81                 	db	129
   208  00102D  82                 	db	130
   209  00102E  83                 	db	131
   210  00102F  84                 	db	132
   211  001030  85                 	db	133
   212  001031  86                 	db	134
   213  001032  87                 	db	135
   214  001033                     __end_of_TIMER0_1Sec:
   215                           	opt stack 0
   216  001033                     _TIMER2_100usec:
   217                           	opt stack 0
   218  001033  84                 	db	132
   219  001034  84                 	db	132
   220  001035  84                 	db	132
   221  001036  84                 	db	132
   222  001037  84                 	db	132
   223  001038  84                 	db	132
   224  001039  8C                 	db	140
   225  00103A  9C                 	db	156
   226  00103B  BC                 	db	188
   227  00103C  00                 	db	0
   228  00103D                     __end_of_TIMER2_100usec:
   229                           	opt stack 0
   230  00103D                     _TIMER2_1msec:
   231                           	opt stack 0
   232  00103D  84                 	db	132
   233  00103E  84                 	db	132
   234  00103F  84                 	db	132
   235  001040  84                 	db	132
   236  001041  CC                 	db	204
   237  001042  CC                 	db	204
   238  001043  CC                 	db	204
   239  001044  A5                 	db	165
   240  001045  CD                 	db	205
   241  001046  A7                 	db	167
   242  001047                     __end_of_TIMER2_1msec:
   243                           	opt stack 0
   244  001047                     _TIMER2_PR2_1msec:
   245                           	opt stack 0
   246  001047  08                 	db	8
   247  001048  3E                 	db	62
   248  001049  7D                 	db	125
   249  00104A  FA                 	db	250
   250  00104B  32                 	db	50
   251  00104C  64                 	db	100
   252  00104D  C8                 	db	200
   253  00104E  C8                 	db	200
   254  00104F  C8                 	db	200
   255  001050  C8                 	db	200
   256  001051                     __end_of_TIMER2_PR2_1msec:
   257                           	opt stack 0
   258  001051                     _TIMER0_16mSec:
   259                           	opt stack 0
   260  001051  C1                 	db	193
   261  001052  C2                 	db	194
   262  001053  C3                 	db	195
   263  001054  C4                 	db	196
   264  001055  C5                 	db	197
   265  001056  C6                 	db	198
   266  001057  C7                 	db	199
   267  001058  80                 	db	128
   268  001059  81                 	db	129
   269  00105A                     __end_of_TIMER0_16mSec:
   270                           	opt stack 0
   271  00105A                     _TIMER2_PR2_100usec:
   272                           	opt stack 0
   273  00105A  06                 	db	6
   274  00105B  0D                 	db	13
   275  00105C  19                 	db	25
   276  00105D  32                 	db	50
   277  00105E  64                 	db	100
   278  00105F  C8                 	db	200
   279  001060  C8                 	db	200
   280  001061  C8                 	db	200
   281  001062  C8                 	db	200
   282  001063                     __end_of_TIMER2_PR2_100usec:
   283                           	opt stack 0
   284  001063                     _TIMER0_1mSec:
   285                           	opt stack 0
   286  001063  C0                 	db	192
   287  001064  C1                 	db	193
   288  001065  C2                 	db	194
   289  001066  C3                 	db	195
   290  001067  C4                 	db	196
   291  001068  C5                 	db	197
   292  001069                     __end_of_TIMER0_1mSec:
   293                           	opt stack 0
   294  001069                     _Timer1:
   295                           	opt stack 0
   296  001069  0000               	dw	0
   297  00106B  0000               	dw	0
   298  00106D  3A                 	db	58
   299  00106E                     __end_of_Timer1:
   300                           	opt stack 0
   301  0000                     _PinDirection	set	3986
   302  0000                     _PinFunction	set	3896
   303  0000                     _PinRead	set	3968
   304  0000                     _PinWrite	set	3977
   305  0000                     _BAUDCON1bits	set	4024
   306  0000                     _BAUDCON2bits	set	3952
   307  0000                     _INTCON2bits	set	4081
   308  0000                     _INTCON3bits	set	4080
   309  0000                     _INTCONbits	set	4082
   310  0000                     _IOCBbits	set	3938
   311  0000                     _IPR1bits	set	3999
   312  0000                     _IPR3bits	set	4005
   313  0000                     _OSCCON	set	4051
   314  0000                     _OSCCON2bits	set	4050
   315  0000                     _OSCCONbits	set	4051
   316  0000                     _OSCTUNEbits	set	3995
   317  0000                     _PIE1bits	set	3997
   318  0000                     _PIE3bits	set	4003
   319  0000                     _PIR1bits	set	3998
   320  0000                     _PIR3bits	set	4004
   321  0000                     _PR2	set	4027
   322  0000                     _RC1REG	set	4014
   323  0000                     _RC2REG	set	3956
   324  0000                     _RCONbits	set	4048
   325  0000                     _RCSTA1bits	set	4011
   326  0000                     _RCSTA2bits	set	3953
   327  0000                     _SPBRG1	set	4015
   328  0000                     _SPBRG2	set	3957
   329  0000                     _SPBRGH1	set	4016
   330  0000                     _SPBRGH2	set	3958
   331  0000                     _T0CON	set	4053
   332  0000                     _T0CONbits	set	4053
   333  0000                     _T1CONbits	set	4045
   334  0000                     _T2CON	set	4026
   335  0000                     _T2CONbits	set	4026
   336  0000                     _TX1REG	set	4013
   337  0000                     _TX2REG	set	3955
   338  0000                     _TXSTA1bits	set	4012
   339  0000                     _TXSTA2bits	set	3954
   340                           
   341                           ; #config settings
   342  00106E  00                 	db	0	; dummy byte at the end
   343  0000                     
   344                           	psect	cinit
   345  0015DE                     __pcinit:
   346                           	opt stack 0
   347  0015DE                     start_initialization:
   348                           	opt stack 0
   349  0015DE                     __initialization:
   350                           	opt stack 0
   351                           
   352                           ; Clear objects allocated to COMRAM (12 bytes)
   353  0015DE  EE00  F033         	lfsr	0,__pbssCOMRAM
   354  0015E2  0E0C               	movlw	12
   355  0015E4                     clear_0:
   356  0015E4  6AEE               	clrf	postinc0,c
   357  0015E6  06E8               	decf	wreg,f,c
   358  0015E8  E1FD               	bnz	clear_0
   359                           
   360                           ; Initialize objects allocated to BANK0 (52 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  0015EA  0E30               	movlw	low __pidataBANK0
   363  0015EC  6EF6               	movwf	tblptrl,c
   364  0015EE  0E16               	movlw	high __pidataBANK0
   365  0015F0  6EF7               	movwf	tblptrh,c
   366  0015F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  0015F4  6EF8               	movwf	tblptru,c
   368  0015F6  EE00  F060         	lfsr	0,__pdataBANK0
   369  0015FA  EE10 F034          	lfsr	1,52
   370  0015FE                     copy_data0:
   371  0015FE  0009               	tblrd		*+
   372  001600  CFF5 FFEE          	movff	tablat,postinc0
   373  001604  50E5               	movf	postdec1,w,c
   374  001606  50E1               	movf	fsr1l,w,c
   375  001608  E1FA               	bnz	copy_data0
   376                           
   377                           ; Initialize objects allocated to COMRAM (17 bytes)
   378                           ; load TBLPTR registers with __pidataCOMRAM
   379  00160A  0E48               	movlw	low __pidataCOMRAM
   380  00160C  6EF6               	movwf	tblptrl,c
   381  00160E  0E17               	movlw	high __pidataCOMRAM
   382  001610  6EF7               	movwf	tblptrh,c
   383  001612  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   384  001614  6EF8               	movwf	tblptru,c
   385  001616  EE00  F022         	lfsr	0,__pdataCOMRAM
   386  00161A  EE10 F011          	lfsr	1,17
   387  00161E                     copy_data1:
   388  00161E  0009               	tblrd		*+
   389  001620  CFF5 FFEE          	movff	tablat,postinc0
   390  001624  50E5               	movf	postdec1,w,c
   391  001626  50E1               	movf	fsr1l,w,c
   392  001628  E1FA               	bnz	copy_data1
   393  00162A                     end_of_initialization:
   394                           	opt stack 0
   395  00162A                     __end_of__initialization:
   396                           	opt stack 0
   397  00162A  0100               	movlb	0
   398  00162C  EF26  F009         	goto	_main	;jump to C main() function
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	bssCOMRAM
   409  000033                     __pbssCOMRAM:
   410                           	opt stack 0
   411  000033                     _INT1_Flag_Variable:
   412                           	opt stack 0
   413  000033                     	ds	2
   414  000035                     _IR_count:
   415                           	opt stack 0
   416  000035                     	ds	2
   417  000037                     _count:
   418                           	opt stack 0
   419  000037                     	ds	2
   420  000039                     _delayCount:
   421                           	opt stack 0
   422  000039                     	ds	2
   423  00003B                     _array:
   424                           	opt stack 0
   425  00003B                     	ds	4
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	dataCOMRAM
   436  000022                     __pdataCOMRAM:
   437                           	opt stack 0
   438  000022                     _Serial2:
   439                           	opt stack 0
   440  000022                     	ds	12
   441  00002E                     _OscFreq:
   442                           	opt stack 0
   443  00002E                     	ds	4
   444  000032                     _OscFreqIndex:
   445                           	opt stack 0
   446  000032                     	ds	1
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	dataBANK0
   457  000060                     __pdataBANK0:
   458                           	opt stack 0
   459  000060                     _Oscillator:
   460                           	opt stack 0
   461  000060                     	ds	22
   462  000076                     _ExternalInt:
   463                           	opt stack 0
   464  000076                     	ds	18
   465  000088                     _Serial1:
   466                           	opt stack 0
   467  000088                     	ds	12
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	cstackBANK0
   478  000094                     __pcstackBANK0:
   479                           	opt stack 0
   480  000094                     ?_GetFreq:
   481                           	opt stack 0
   482  000094                     ?___aldiv:
   483                           	opt stack 0
   484  000094                     SendArray1@ArrayData:
   485                           	opt stack 0
   486  000094                     SendArray2@ArrayData:
   487                           	opt stack 0
   488  000094                     ___aldiv@dividend:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492  000094                     	ds	2
   493  000096                     SendArray1@length:
   494                           	opt stack 0
   495  000096                     SendArray2@length:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x2
   499  000096                     	ds	2
   500  000098                     ___aldiv@divisor:
   501                           	opt stack 0
   502                           
   503                           ; 4 bytes @ 0x4
   504  000098                     	ds	4
   505  00009C                     ___aldiv@counter:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x8
   509  00009C                     	ds	1
   510  00009D                     ___aldiv@sign:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x9
   514  00009D                     	ds	1
   515  00009E                     ___aldiv@quotient:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0xA
   519  00009E                     	ds	4
   520  0000A2                     Open1@BaudRate:
   521                           	opt stack 0
   522  0000A2                     Open2@BaudRate:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0xE
   526  0000A2                     	ds	4
   527  0000A6                     ??_Open1:
   528  0000A6                     ??_Open2:
   529                           
   530                           ; 0 bytes @ 0x12
   531  0000A6                     	ds	8
   532  0000AE                     Open1@freq:
   533                           	opt stack 0
   534  0000AE                     Open2@freq:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x1A
   538  0000AE                     	ds	4
   539  0000B2                     Open1@BRGval:
   540                           	opt stack 0
   541  0000B2                     Open2@temp:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1E
   545  0000B2                     	ds	2
   546  0000B4                     ??_main:
   547                           
   548                           ; 0 bytes @ 0x20
   549  0000B4                     	ds	2
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	cstackCOMRAM
   560  000001                     __pcstackCOMRAM:
   561                           	opt stack 0
   562  000001                     ??_LowPriority_InterruptHandler:
   563  000001                     
   564                           ; 1 bytes @ 0x0
   565  000001                     	ds	17
   566  000012                     ??_HighPriority_InterruptHandler:
   567                           
   568                           ; 0 bytes @ 0x11
   569  000012                     	ds	15
   570  000021                     ??_SetFreq_8MHZ:
   571  000021                     ??___aldiv:
   572  000021                     EnableINT1_SCK2@Edge:
   573                           	opt stack 0
   574  000021                     EnableINT1interrupt@Priority:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x20
   578  000021                     	ds	1
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 34 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels required when called:    4
   613 ;; This function calls:
   614 ;;		_EnableINT1_SCK2
   615 ;;		_EnableINT1interrupt
   616 ;;		_Open1
   617 ;;		_Open2
   618 ;;		_SendArray1
   619 ;;		_SendArray2
   620 ;;		_SetFreq_8MHZ
   621 ;;		_SetTimer0_1Sec
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628  00124C                     __ptext0:
   629                           	opt stack 0
   630  00124C                     _main:
   631                           	opt stack 27
   632                           
   633                           ;main.c: 38: Oscillator.SetFreq_8MHZ();
   634                           
   635                           ;incstack = 0
   636  00124C  D801               	call	u788
   637  00124E  D00C               	goto	u789
   638  001250                     u788:
   639  001250  0005               	push	
   640  001252  6EFA               	movwf	pclath,c
   641  001254  0100               	movlb	0	; () banked
   642  001256  0100               	movlb	0	; () banked
   643  001258  516C               	movf	(_Oscillator+12)& (0+255),w,b
   644  00125A  6EFD               	movwf	tosl,c
   645  00125C  0100               	movlb	0	; () banked
   646  00125E  516D               	movf	(_Oscillator+13)& (0+255),w,b
   647  001260  6EFE               	movwf	tosh,c
   648  001262  6AFF               	clrf	tosu,c
   649  001264  50FA               	movf	pclath,w,c
   650  001266  0012               	return		;indir
   651  001268                     u789:
   652                           
   653                           ;main.c: 39: (PinFunction.TX1 = 0, PinDirection.TX1 = 0 );
   654  001268  010F               	movlb	15	; () banked
   655  00126A  010F               	movlb	15	; () banked
   656  00126C  9D3A               	bcf	58,6,b	;volatile
   657                           
   658                           ; BSR set to: 15
   659  00126E  9C94               	bcf	3988,6,c	;volatile
   660                           
   661                           ; BSR set to: 15
   662                           ;main.c: 40: Timer0.SetPeriod_1Sec();
   663  001270  0E01               	movlw	low _Timer0
   664  001272  6EF6               	movwf	tblptrl,c
   665  001274  0E10               	movlw	high _Timer0
   666  001276  6EF7               	movwf	tblptrh,c
   667  001278  0E00               	movlw	low (_Timer0 shr (0+16))
   668  00127A  6EF8               	movwf	tblptru,c
   669  00127C  0009               	tblrd		*+
   670  00127E  CFF5 F0B4          	movff	tablat,??_main
   671  001282  0009               	tblrd		*+
   672  001284  CFF5 F0B5          	movff	tablat,??_main+1
   673  001288  D801               	call	u798
   674  00128A  D00A               	goto	u799
   675  00128C                     u798:
   676  00128C  0005               	push	
   677  00128E  6EFA               	movwf	pclath,c
   678  001290  0100               	movlb	0	; () banked
   679  001292  51B4               	movf	??_main& (0+255),w,b
   680  001294  6EFD               	movwf	tosl,c
   681  001296  51B5               	movf	(??_main+1)& (0+255),w,b
   682  001298  6EFE               	movwf	tosh,c
   683  00129A  6AFF               	clrf	tosu,c
   684  00129C  50FA               	movf	pclath,w,c
   685  00129E  0012               	return		;indir
   686  0012A0                     u799:
   687                           
   688                           ;main.c: 41: Serial2.Open(9600);
   689  0012A0  0E80               	movlw	128
   690  0012A2  0100               	movlb	0	; () banked
   691  0012A4  0100               	movlb	0	; () banked
   692  0012A6  6FA2               	movwf	Open2@BaudRate& (0+255),b
   693  0012A8  0E25               	movlw	37
   694  0012AA  0100               	movlb	0	; () banked
   695  0012AC  6FA3               	movwf	(Open2@BaudRate+1)& (0+255),b
   696  0012AE  0E00               	movlw	0
   697  0012B0  0100               	movlb	0	; () banked
   698  0012B2  6FA4               	movwf	(Open2@BaudRate+2)& (0+255),b
   699  0012B4  0E00               	movlw	0
   700  0012B6  0100               	movlb	0	; () banked
   701  0012B8  6FA5               	movwf	(Open2@BaudRate+3)& (0+255),b
   702  0012BA  D801               	call	u808
   703  0012BC  D009               	goto	u809
   704  0012BE                     u808:
   705  0012BE  0005               	push	
   706  0012C0  6EFA               	movwf	pclath,c
   707  0012C2  5022               	movf	_Serial2,w,c
   708  0012C4  6EFD               	movwf	tosl,c
   709  0012C6  5023               	movf	_Serial2+1,w,c
   710  0012C8  6EFE               	movwf	tosh,c
   711  0012CA  6AFF               	clrf	tosu,c
   712  0012CC  50FA               	movf	pclath,w,c
   713  0012CE  0012               	return		;indir
   714  0012D0                     u809:
   715                           
   716                           ;main.c: 45: ExternalInt.EnableINT1interrupt(1);
   717  0012D0  D801               	call	u818
   718  0012D2  D00D               	goto	u819
   719  0012D4                     u818:
   720  0012D4  0005               	push	
   721  0012D6  6EFA               	movwf	pclath,c
   722  0012D8  0100               	movlb	0	; () banked
   723  0012DA  0100               	movlb	0	; () banked
   724  0012DC  5182               	movf	(_ExternalInt+12)& (0+255),w,b
   725  0012DE  6EFD               	movwf	tosl,c
   726  0012E0  0100               	movlb	0	; () banked
   727  0012E2  5183               	movf	(_ExternalInt+13)& (0+255),w,b
   728  0012E4  6EFE               	movwf	tosh,c
   729  0012E6  6AFF               	clrf	tosu,c
   730  0012E8  50FA               	movf	pclath,w,c
   731  0012EA  0E01               	movlw	1
   732  0012EC  0012               	return		;indir
   733  0012EE                     u819:
   734                           
   735                           ;main.c: 46: ExternalInt.EnableINT1_SCK2(0);
   736  0012EE  D801               	call	u828
   737  0012F0  D00D               	goto	l1766
   738  0012F2                     u828:
   739  0012F2  0005               	push	
   740  0012F4  6EFA               	movwf	pclath,c
   741  0012F6  0100               	movlb	0	; () banked
   742  0012F8  0100               	movlb	0	; () banked
   743  0012FA  5178               	movf	(_ExternalInt+2)& (0+255),w,b
   744  0012FC  6EFD               	movwf	tosl,c
   745  0012FE  0100               	movlb	0	; () banked
   746  001300  5179               	movf	(_ExternalInt+3)& (0+255),w,b
   747  001302  6EFE               	movwf	tosh,c
   748  001304  6AFF               	clrf	tosu,c
   749  001306  50FA               	movf	pclath,w,c
   750  001308  0E00               	movlw	0
   751  00130A  0012               	return		;indir
   752  00130C                     l1766:
   753                           
   754                           ;main.c: 50: {
   755                           ;main.c: 52: if(INTCONbits.TMR0IF)
   756  00130C  A4F2               	btfss	intcon,2,c	;volatile
   757  00130E  D7FE               	goto	l1766
   758                           
   759                           ;main.c: 53: {
   760                           ;main.c: 54: INTCONbits.TMR0IF = 0;
   761  001310  94F2               	bcf	intcon,2,c	;volatile
   762                           
   763                           ;main.c: 55: (PinWrite.TX1 =!PinWrite.TX1);
   764  001312  BC8B               	btfsc	3979,6,c	;volatile
   765  001314  D002               	goto	u840
   766  001316  0E01               	movlw	1
   767  001318  D001               	goto	u846
   768  00131A                     u840:
   769  00131A  0E00               	movlw	0
   770  00131C                     u846:
   771  00131C  0100               	movlb	0	; () banked
   772  00131E  6FB4               	movwf	??_main& (0+255),b
   773  001320  0100               	movlb	0	; () banked
   774  001322  3BB4               	swapf	??_main& (0+255),f,b
   775  001324  47B4               	rlncf	??_main& (0+255),f,b
   776  001326  47B4               	rlncf	??_main& (0+255),f,b
   777  001328  508B               	movf	3979,w,c	;volatile
   778  00132A  0100               	movlb	0	; () banked
   779  00132C  19B4               	xorwf	??_main& (0+255),w,b
   780  00132E  0BBF               	andlw	-65
   781  001330  19B4               	xorwf	??_main& (0+255),w,b
   782  001332  6E8B               	movwf	3979,c	;volatile
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 56: count= IR_count;
   786  001334  C035  F037         	movff	_IR_count,_count
   787  001338  C036  F038         	movff	_IR_count+1,_count+1
   788                           
   789                           ; BSR set to: 0
   790                           ;main.c: 57: IR_count=0;
   791  00133C  0E00               	movlw	0
   792  00133E  6E36               	movwf	_IR_count+1,c
   793  001340  0E00               	movlw	0
   794  001342  6E35               	movwf	_IR_count,c
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 58: array[0]=count;
   798  001344  C037  F03B         	movff	_count,_array
   799  001348  C038  F03C         	movff	_count+1,_array+1
   800                           
   801                           ; BSR set to: 0
   802                           ;main.c: 59: array[1]=count>>8;
   803  00134C  5038               	movf	_count+1,w,c
   804  00134E  6E3D               	movwf	_array+2,c
   805  001350  6A3E               	clrf	_array+3,c
   806                           
   807                           ; BSR set to: 0
   808                           ;main.c: 61: Serial2.SendArray(&array,2);
   809  001352  0E00               	movlw	high _array
   810  001354  0100               	movlb	0	; () banked
   811  001356  0100               	movlb	0	; () banked
   812  001358  6F95               	movwf	(SendArray2@ArrayData+1)& (0+255),b
   813  00135A  0E3B               	movlw	low _array
   814  00135C  0100               	movlb	0	; () banked
   815  00135E  0100               	movlb	0	; () banked
   816  001360  6F94               	movwf	SendArray2@ArrayData& (0+255),b
   817  001362  0100               	movlb	0	; () banked
   818  001364  6FB4               	movwf	??_main& (0+255),b
   819  001366  0E02               	movlw	2
   820  001368  0100               	movlb	0	; () banked
   821  00136A  0100               	movlb	0	; () banked
   822  00136C  6F96               	movwf	SendArray2@length& (0+255),b
   823  00136E  0100               	movlb	0	; () banked
   824  001370  51B4               	movf	??_main& (0+255),w,b
   825  001372  D801               	call	u858
   826  001374  D7CB               	goto	l1766
   827  001376                     u858:
   828  001376  0005               	push	
   829  001378  6EFA               	movwf	pclath,c
   830  00137A  5026               	movf	_Serial2+4,w,c
   831  00137C  6EFD               	movwf	tosl,c
   832  00137E  5027               	movf	_Serial2+5,w,c
   833  001380  6EFE               	movwf	tosh,c
   834  001382  6AFF               	clrf	tosu,c
   835  001384  50FA               	movf	pclath,w,c
   836  001386  0012               	return		;indir
   837  001388                     __end_of_main:
   838                           	opt stack 0
   839                           tosu	equ	0xFFF
   840                           tosh	equ	0xFFE
   841                           tosl	equ	0xFFD
   842                           pclath	equ	0xFFA
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           intcon	equ	0xFF2
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           
   853 ;; *************** function _SetTimer0_1Sec *****************
   854 ;; Defined at:
   855 ;;		line 54 in file "EAB_Timer.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      unsigned char 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text1
   884  0016E6                     __ptext1:
   885                           	opt stack 0
   886  0016E6                     _SetTimer0_1Sec:
   887                           	opt stack 28
   888                           
   889                           ;incstack = 0
   890  0016E6  5032               	movf	_OscFreqIndex,w,c
   891  0016E8  0D01               	mullw	1
   892  0016EA  0E29               	movlw	low _TIMER0_1Sec
   893  0016EC  24F3               	addwf	prodl,w,c
   894  0016EE  6EF6               	movwf	tblptrl,c
   895  0016F0  0E10               	movlw	high _TIMER0_1Sec
   896  0016F2  20F4               	addwfc	prodh,w,c
   897  0016F4  6EF7               	movwf	tblptrh,c
   898  0016F6  6AF8               	clrf	tblptru,c
   899  0016F8  0E00               	movlw	low (__mediumconst shr (0+16))
   900  0016FA  22F8               	addwfc	tblptru,f,c
   901  0016FC  0008               	tblrd		*
   902  0016FE  CFF5 FFD5          	movff	tablat,4053	;volatile
   903  001702  0012               	return	
   904  001704                     __end_of_SetTimer0_1Sec:
   905                           	opt stack 0
   906                           tosu	equ	0xFFF
   907                           tosh	equ	0xFFE
   908                           tosl	equ	0xFFD
   909                           pclath	equ	0xFFA
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           prodh	equ	0xFF4
   915                           prodl	equ	0xFF3
   916                           intcon	equ	0xFF2
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           postdec1	equ	0xFE5
   920                           fsr1l	equ	0xFE1
   921                           
   922 ;; *************** function _SetFreq_8MHZ *****************
   923 ;; Defined at:
   924 ;;		line 85 in file "EAB_Oscillator.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      unsigned char 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:        1 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text2
   953  0016C4                     __ptext2:
   954                           	opt stack 0
   955  0016C4                     _SetFreq_8MHZ:
   956                           	opt stack 28
   957                           
   958                           ;incstack = 0
   959  0016C4  50D3               	movf	4051,w,c	;volatile
   960  0016C6  0B8C               	andlw	140
   961  0016C8  0962               	iorlw	98
   962  0016CA  6ED3               	movwf	4051,c	;volatile
   963  0016CC  6E21               	movwf	??_SetFreq_8MHZ& (0+255),c
   964  0016CE  0E06               	movlw	6
   965  0016D0  6E32               	movwf	_OscFreqIndex,c
   966  0016D2  5021               	movf	??_SetFreq_8MHZ& (0+255),w,c
   967  0016D4  0E00               	movlw	0
   968  0016D6  6E2E               	movwf	_OscFreq,c
   969  0016D8  0E12               	movlw	18
   970  0016DA  6E2F               	movwf	_OscFreq+1,c
   971  0016DC  0E7A               	movlw	122
   972  0016DE  6E30               	movwf	_OscFreq+2,c
   973  0016E0  0E00               	movlw	0
   974  0016E2  6E31               	movwf	_OscFreq+3,c
   975  0016E4  0012               	return	
   976  0016E6                     __end_of_SetFreq_8MHZ:
   977                           	opt stack 0
   978                           tosu	equ	0xFFF
   979                           tosh	equ	0xFFE
   980                           tosl	equ	0xFFD
   981                           pclath	equ	0xFFA
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           intcon	equ	0xFF2
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1l	equ	0xFE1
   993                           
   994 ;; *************** function _SendArray1 *****************
   995 ;; Defined at:
   996 ;;		line 101 in file "EAB_Serial.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  ArrayData       2    0[BANK0 ] PTR unsigned char 
   999 ;;		 -> array(4), 
  1000 ;;  length          1    2[BANK0 ] unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      unsigned char 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        3 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    2
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text3
  1027  001664                     __ptext3:
  1028                           	opt stack 0
  1029  001664                     _SendArray1:
  1030                           	opt stack 28
  1031                           
  1032                           ;incstack = 0
  1033  001664  0100               	movlb	0	; () banked
  1034  001666  0100               	movlb	0	; () banked
  1035  001668  5196               	movf	SendArray1@length& (0+255),w,b
  1036  00166A  B4D8               	btfsc	status,2,c
  1037  00166C  0012               	return	
  1038  00166E  D00C               	goto	l1848
  1039  001670                     l294:
  1040  001670  A2AC               	btfss	4012,1,c	;volatile
  1041  001672  D7FE               	goto	l294
  1042  001674  C094  FFD9         	movff	SendArray1@ArrayData,fsr2l
  1043  001678  C095  FFDA         	movff	SendArray1@ArrayData+1,fsr2h
  1044  00167C  50DF               	movf	indf2,w,c
  1045  00167E  6EAD               	movwf	4013,c	;volatile
  1046  001680  0100               	movlb	0	; () banked
  1047  001682  0100               	movlb	0	; () banked
  1048  001684  4B94               	infsnz	SendArray1@ArrayData& (0+255),f,b
  1049  001686  2B95               	incf	(SendArray1@ArrayData+1)& (0+255),f,b
  1050  001688                     l1848:
  1051                           
  1052                           ; BSR set to: 0
  1053  001688  0100               	movlb	0	; () banked
  1054  00168A  0100               	movlb	0	; () banked
  1055  00168C  0796               	decf	SendArray1@length& (0+255),f,b
  1056  00168E  0100               	movlb	0	; () banked
  1057  001690  2996               	incf	SendArray1@length& (0+255),w,b
  1058  001692  B4D8               	btfsc	status,2,c
  1059                           
  1060                           ; BSR set to: 0
  1061                           
  1062                           ; BSR set to: 0
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;	Return value of _SendArray1 is never used
  1066                           
  1067                           ; BSR set to: 0
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;	Return value of _SendArray1 is never used
  1071  001694  0012               	return	
  1072  001696  D7EC               	goto	l294
  1073  001698                     __end_of_SendArray1:
  1074                           	opt stack 0
  1075                           tosu	equ	0xFFF
  1076                           tosh	equ	0xFFE
  1077                           tosl	equ	0xFFD
  1078                           pclath	equ	0xFFA
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodh	equ	0xFF4
  1084                           prodl	equ	0xFF3
  1085                           intcon	equ	0xFF2
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           postdec1	equ	0xFE5
  1089                           fsr1l	equ	0xFE1
  1090                           indf2	equ	0xFDF
  1091                           fsr2h	equ	0xFDA
  1092                           fsr2l	equ	0xFD9
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _SendArray2 *****************
  1096 ;; Defined at:
  1097 ;;		line 119 in file "EAB_Serial.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  ArrayData       2    0[BANK0 ] PTR unsigned char 
  1100 ;;		 -> array(4), 
  1101 ;;  length          1    2[BANK0 ] unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      unsigned char 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:        3 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    2
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text4
  1128  001698                     __ptext4:
  1129                           	opt stack 0
  1130  001698                     _SendArray2:
  1131                           	opt stack 28
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;incstack = 0
  1135  001698  0100               	movlb	0	; () banked
  1136  00169A  5096               	movf	SendArray2@length& (0+255),w,c
  1137  00169C  B4D8               	btfsc	status,2,c
  1138  00169E  0012               	return	
  1139  0016A0  D00B               	goto	l1696
  1140  0016A2                     l305:
  1141  0016A2  A272               	btfss	3954,1,c	;volatile
  1142  0016A4  D7FE               	goto	l305
  1143  0016A6  C094  FFD9         	movff	SendArray2@ArrayData,fsr2l
  1144  0016AA  C095  FFDA         	movff	SendArray2@ArrayData+1,fsr2h
  1145  0016AE  50DF               	movf	indf2,w,c
  1146  0016B0  6E73               	movwf	3955,c	;volatile
  1147  0016B2  0100               	movlb	0	; () banked
  1148  0016B4  4A94               	infsnz	SendArray2@ArrayData& (0+255),f,c
  1149  0016B6  2A95               	incf	(SendArray2@ArrayData+1)& (0+255),f,c
  1150  0016B8                     l1696:
  1151                           
  1152                           ; BSR set to: 0
  1153  0016B8  0100               	movlb	0	; () banked
  1154  0016BA  0696               	decf	SendArray2@length& (0+255),f,c
  1155  0016BC  2896               	incf	SendArray2@length& (0+255),w,c
  1156  0016BE  B4D8               	btfsc	status,2,c
  1157                           
  1158                           ;	Return value of _SendArray2 is never used
  1159                           
  1160                           ;	Return value of _SendArray2 is never used
  1161  0016C0  0012               	return	
  1162  0016C2  D7EF               	goto	l305
  1163  0016C4                     __end_of_SendArray2:
  1164                           	opt stack 0
  1165                           tosu	equ	0xFFF
  1166                           tosh	equ	0xFFE
  1167                           tosl	equ	0xFFD
  1168                           pclath	equ	0xFFA
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           prodh	equ	0xFF4
  1174                           prodl	equ	0xFF3
  1175                           intcon	equ	0xFF2
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1l	equ	0xFE1
  1180                           indf2	equ	0xFDF
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _Open1 *****************
  1186 ;; Defined at:
  1187 ;;		line 33 in file "EAB_Serial.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  BaudRate        4   14[BANK0 ] long 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  freq            4   26[BANK0 ] long 
  1192 ;;  BRGval          2   30[BANK0 ] int 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:       18 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		_GetFreq
  1211 ;;		___aldiv
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text5
  1218  001388                     __ptext5:
  1219                           	opt stack 0
  1220  001388                     _Open1:
  1221                           	opt stack 27
  1222                           
  1223                           ;incstack = 0
  1224  001388  D801               	call	u868
  1225  00138A  D00C               	goto	u869
  1226  00138C                     u868:
  1227  00138C  0005               	push	
  1228  00138E  6EFA               	movwf	pclath,c
  1229  001390  0100               	movlb	0	; () banked
  1230  001392  0100               	movlb	0	; () banked
  1231  001394  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1232  001396  6EFD               	movwf	tosl,c
  1233  001398  0100               	movlb	0	; () banked
  1234  00139A  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1235  00139C  6EFE               	movwf	tosh,c
  1236  00139E  6AFF               	clrf	tosu,c
  1237  0013A0  50FA               	movf	pclath,w,c
  1238  0013A2  0012               	return		;indir
  1239  0013A4                     u869:
  1240  0013A4  C094  F0AE         	movff	?_GetFreq,Open1@freq
  1241  0013A8  C095  F0AF         	movff	?_GetFreq+1,Open1@freq+1
  1242  0013AC  C096  F0B0         	movff	?_GetFreq+2,Open1@freq+2
  1243  0013B0  C097  F0B1         	movff	?_GetFreq+3,Open1@freq+3
  1244  0013B4  C0AE  F094         	movff	Open1@freq,___aldiv@dividend
  1245  0013B8  C0AF  F095         	movff	Open1@freq+1,___aldiv@dividend+1
  1246  0013BC  C0B0  F096         	movff	Open1@freq+2,___aldiv@dividend+2
  1247  0013C0  C0B1  F097         	movff	Open1@freq+3,___aldiv@dividend+3
  1248  0013C4  0100               	movlb	0	; () banked
  1249  0013C6  C0A2  F0A6         	movff	Open1@BaudRate,??_Open1
  1250  0013CA  0100               	movlb	0	; () banked
  1251  0013CC  C0A3  F0A7         	movff	Open1@BaudRate+1,??_Open1+1
  1252  0013D0  0100               	movlb	0	; () banked
  1253  0013D2  C0A4  F0A8         	movff	Open1@BaudRate+2,??_Open1+2
  1254  0013D6  0100               	movlb	0	; () banked
  1255  0013D8  C0A5  F0A9         	movff	Open1@BaudRate+3,??_Open1+3
  1256  0013DC  0E02               	movlw	2
  1257  0013DE                     u875:
  1258  0013DE  90D8               	bcf	status,0,c
  1259  0013E0  0100               	movlb	0	; () banked
  1260  0013E2  37A6               	rlcf	??_Open1& (0+255),f,b
  1261  0013E4  37A7               	rlcf	(??_Open1+1)& (0+255),f,b
  1262  0013E6  37A8               	rlcf	(??_Open1+2)& (0+255),f,b
  1263  0013E8  37A9               	rlcf	(??_Open1+3)& (0+255),f,b
  1264  0013EA  2EE8               	decfsz	wreg,f,c
  1265  0013EC  D7F8               	goto	u875
  1266  0013EE  C0A6  F098         	movff	??_Open1,___aldiv@divisor
  1267  0013F2  C0A7  F099         	movff	??_Open1+1,___aldiv@divisor+1
  1268  0013F6  C0A8  F09A         	movff	??_Open1+2,___aldiv@divisor+2
  1269  0013FA  C0A9  F09B         	movff	??_Open1+3,___aldiv@divisor+3
  1270  0013FE  EC38  F008         	call	___aldiv
  1271  001402  C094  F0AA         	movff	?___aldiv,??_Open1+4
  1272  001406  C095  F0AB         	movff	?___aldiv+1,??_Open1+5
  1273  00140A  C096  F0AC         	movff	?___aldiv+2,??_Open1+6
  1274  00140E  C097  F0AD         	movff	?___aldiv+3,??_Open1+7
  1275  001412  0EFF               	movlw	255
  1276  001414  0100               	movlb	0	; () banked
  1277  001416  25AA               	addwf	(??_Open1+4)& (0+255),w,b
  1278  001418  0100               	movlb	0	; () banked
  1279  00141A  0100               	movlb	0	; () banked
  1280  00141C  6FB2               	movwf	Open1@BRGval& (0+255),b
  1281  00141E  0EFF               	movlw	255
  1282  001420  0100               	movlb	0	; () banked
  1283  001422  21AB               	addwfc	(??_Open1+5)& (0+255),w,b
  1284  001424  0100               	movlb	0	; () banked
  1285  001426  6FB3               	movwf	(Open1@BRGval+1)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288  001428  0100               	movlb	0	; () banked
  1289  00142A  0100               	movlb	0	; () banked
  1290  00142C  51B3               	movf	(Open1@BRGval+1)& (0+255),w,b
  1291  00142E  0A80               	xorlw	128
  1292  001430  0F80               	addlw	-128
  1293  001432  0E01               	movlw	1
  1294  001434  B4D8               	btfsc	status,2,c
  1295  001436  5DB2               	subwf	Open1@BRGval& (0+255),w,b
  1296  001438  A0D8               	btfss	status,0,c
  1297  00143A  0012               	return	
  1298                           
  1299                           ; BSR set to: 0
  1300  00143C  86B8               	bsf	4024,3,c	;volatile
  1301  00143E  84AC               	bsf	4012,2,c	;volatile
  1302  001440  98AC               	bcf	4012,4,c	;volatile
  1303                           
  1304                           ; BSR set to: 0
  1305  001442  0100               	movlb	0	; () banked
  1306  001444  C0B3  F0A6         	movff	Open1@BRGval+1,??_Open1
  1307  001448  C0A6  F0A7         	movff	??_Open1,??_Open1+1
  1308  00144C  0100               	movlb	0	; () banked
  1309  00144E  6BA8               	clrf	(??_Open1+2)& (0+255),b
  1310  001450  0100               	movlb	0	; () banked
  1311  001452  51A7               	movf	(??_Open1+1)& (0+255),w,b
  1312  001454  6EB0               	movwf	4016,c	;volatile
  1313                           
  1314                           ; BSR set to: 0
  1315  001456  C0B2  FFAF         	movff	Open1@BRGval,4015	;volatile
  1316                           
  1317                           ; BSR set to: 0
  1318  00145A  010F               	movlb	15	; () banked
  1319  00145C  010F               	movlb	15	; () banked
  1320  00145E  9D3A               	bcf	58,6,b	;volatile
  1321                           
  1322                           ; BSR set to: 15
  1323  001460  010F               	movlb	15	; () banked
  1324  001462  010F               	movlb	15	; () banked
  1325  001464  9F3A               	bcf	58,7,b	;volatile
  1326                           
  1327                           ; BSR set to: 15
  1328  001466  8C94               	bsf	3988,6,c	;volatile
  1329                           
  1330                           ; BSR set to: 15
  1331  001468  8E94               	bsf	3988,7,c	;volatile
  1332                           
  1333                           ; BSR set to: 15
  1334  00146A  8AAC               	bsf	4012,5,c	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337  00146C  88AB               	bsf	4011,4,c	;volatile
  1338                           
  1339                           ; BSR set to: 15
  1340  00146E  8EAB               	bsf	4011,7,c	;volatile
  1341  001470  0012               	return	
  1342  001472                     __end_of_Open1:
  1343                           	opt stack 0
  1344                           tosu	equ	0xFFF
  1345                           tosh	equ	0xFFE
  1346                           tosl	equ	0xFFD
  1347                           pclath	equ	0xFFA
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           postdec1	equ	0xFE5
  1358                           fsr1l	equ	0xFE1
  1359                           indf2	equ	0xFDF
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _Open2 *****************
  1365 ;; Defined at:
  1366 ;;		line 61 in file "EAB_Serial.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  BaudRate        4   14[BANK0 ] long 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  freq            4   26[BANK0 ] long 
  1371 ;;  temp            2   30[BANK0 ] int 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;Total ram usage:       18 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    3
  1388 ;; This function calls:
  1389 ;;		_GetFreq
  1390 ;;		___aldiv
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text6
  1397  001472                     __ptext6:
  1398                           	opt stack 0
  1399  001472                     _Open2:
  1400                           	opt stack 27
  1401                           
  1402                           ;incstack = 0
  1403  001472  D801               	call	u898
  1404  001474  D00C               	goto	u899
  1405  001476                     u898:
  1406  001476  0005               	push	
  1407  001478  6EFA               	movwf	pclath,c
  1408  00147A  0100               	movlb	0	; () banked
  1409  00147C  0100               	movlb	0	; () banked
  1410  00147E  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1411  001480  6EFD               	movwf	tosl,c
  1412  001482  0100               	movlb	0	; () banked
  1413  001484  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1414  001486  6EFE               	movwf	tosh,c
  1415  001488  6AFF               	clrf	tosu,c
  1416  00148A  50FA               	movf	pclath,w,c
  1417  00148C  0012               	return		;indir
  1418  00148E                     u899:
  1419  00148E  C094  F0AE         	movff	?_GetFreq,Open2@freq
  1420  001492  C095  F0AF         	movff	?_GetFreq+1,Open2@freq+1
  1421  001496  C096  F0B0         	movff	?_GetFreq+2,Open2@freq+2
  1422  00149A  C097  F0B1         	movff	?_GetFreq+3,Open2@freq+3
  1423  00149E  C0AE  F094         	movff	Open2@freq,___aldiv@dividend
  1424  0014A2  C0AF  F095         	movff	Open2@freq+1,___aldiv@dividend+1
  1425  0014A6  C0B0  F096         	movff	Open2@freq+2,___aldiv@dividend+2
  1426  0014AA  C0B1  F097         	movff	Open2@freq+3,___aldiv@dividend+3
  1427  0014AE  0100               	movlb	0	; () banked
  1428  0014B0  C0A2  F0A6         	movff	Open2@BaudRate,??_Open2
  1429  0014B4  0100               	movlb	0	; () banked
  1430  0014B6  C0A3  F0A7         	movff	Open2@BaudRate+1,??_Open2+1
  1431  0014BA  0100               	movlb	0	; () banked
  1432  0014BC  C0A4  F0A8         	movff	Open2@BaudRate+2,??_Open2+2
  1433  0014C0  0100               	movlb	0	; () banked
  1434  0014C2  C0A5  F0A9         	movff	Open2@BaudRate+3,??_Open2+3
  1435  0014C6  0E02               	movlw	2
  1436  0014C8                     u905:
  1437  0014C8  90D8               	bcf	status,0,c
  1438  0014CA  0100               	movlb	0	; () banked
  1439  0014CC  37A6               	rlcf	??_Open2& (0+255),f,b
  1440  0014CE  37A7               	rlcf	(??_Open2+1)& (0+255),f,b
  1441  0014D0  37A8               	rlcf	(??_Open2+2)& (0+255),f,b
  1442  0014D2  37A9               	rlcf	(??_Open2+3)& (0+255),f,b
  1443  0014D4  2EE8               	decfsz	wreg,f,c
  1444  0014D6  D7F8               	goto	u905
  1445  0014D8  C0A6  F098         	movff	??_Open2,___aldiv@divisor
  1446  0014DC  C0A7  F099         	movff	??_Open2+1,___aldiv@divisor+1
  1447  0014E0  C0A8  F09A         	movff	??_Open2+2,___aldiv@divisor+2
  1448  0014E4  C0A9  F09B         	movff	??_Open2+3,___aldiv@divisor+3
  1449  0014E8  EC38  F008         	call	___aldiv	;wreg free
  1450  0014EC  C094  F0AA         	movff	?___aldiv,??_Open2+4
  1451  0014F0  C095  F0AB         	movff	?___aldiv+1,??_Open2+5
  1452  0014F4  C096  F0AC         	movff	?___aldiv+2,??_Open2+6
  1453  0014F8  C097  F0AD         	movff	?___aldiv+3,??_Open2+7
  1454  0014FC  0EFF               	movlw	255
  1455  0014FE  0100               	movlb	0	; () banked
  1456  001500  25AA               	addwf	(??_Open2+4)& (0+255),w,b
  1457  001502  0100               	movlb	0	; () banked
  1458  001504  0100               	movlb	0	; () banked
  1459  001506  6FB2               	movwf	Open2@temp& (0+255),b
  1460  001508  0EFF               	movlw	255
  1461  00150A  0100               	movlb	0	; () banked
  1462  00150C  21AB               	addwfc	(??_Open2+5)& (0+255),w,b
  1463  00150E  0100               	movlb	0	; () banked
  1464  001510  6FB3               	movwf	(Open2@temp+1)& (0+255),b
  1465                           
  1466                           ; BSR set to: 0
  1467  001512  0100               	movlb	0	; () banked
  1468  001514  0100               	movlb	0	; () banked
  1469  001516  51B3               	movf	(Open2@temp+1)& (0+255),w,b
  1470  001518  0A80               	xorlw	128
  1471  00151A  0F80               	addlw	-128
  1472  00151C  0E01               	movlw	1
  1473  00151E  B4D8               	btfsc	status,2,c
  1474  001520  5DB2               	subwf	Open2@temp& (0+255),w,b
  1475  001522  A0D8               	btfss	status,0,c
  1476  001524  0012               	return	
  1477                           
  1478                           ; BSR set to: 0
  1479  001526  8670               	bsf	3952,3,c	;volatile
  1480  001528  8472               	bsf	3954,2,c	;volatile
  1481  00152A  9872               	bcf	3954,4,c	;volatile
  1482                           
  1483                           ; BSR set to: 0
  1484  00152C  0100               	movlb	0	; () banked
  1485  00152E  C0B3  F0A6         	movff	Open2@temp+1,??_Open2
  1486  001532  C0A6  F0A7         	movff	??_Open2,??_Open2+1
  1487  001536  0100               	movlb	0	; () banked
  1488  001538  6BA8               	clrf	(??_Open2+2)& (0+255),b
  1489  00153A  0100               	movlb	0	; () banked
  1490  00153C  51A7               	movf	(??_Open2+1)& (0+255),w,b
  1491  00153E  6E76               	movwf	3958,c	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494  001540  C0B2  FF75         	movff	Open2@temp,3957	;volatile
  1495                           
  1496                           ; BSR set to: 0
  1497  001544  8C93               	bsf	3987,6,c	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500  001546  8E93               	bsf	3987,7,c	;volatile
  1501                           
  1502                           ; BSR set to: 0
  1503  001548  8A72               	bsf	3954,5,c	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506  00154A  8871               	bsf	3953,4,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509  00154C  8E71               	bsf	3953,7,c	;volatile
  1510  00154E  0012               	return	
  1511  001550                     __end_of_Open2:
  1512                           	opt stack 0
  1513                           tosu	equ	0xFFF
  1514                           tosh	equ	0xFFE
  1515                           tosl	equ	0xFFD
  1516                           pclath	equ	0xFFA
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           postdec1	equ	0xFE5
  1527                           fsr1l	equ	0xFE1
  1528                           indf2	equ	0xFDF
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function ___aldiv *****************
  1534 ;; Defined at:
  1535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  dividend        4    0[BANK0 ] long 
  1538 ;;  divisor         4    4[BANK0 ] long 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  quotient        4   10[BANK0 ] long 
  1541 ;;  sign            1    9[BANK0 ] unsigned char 
  1542 ;;  counter         1    8[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  4    0[BANK0 ] long 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:       15 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_Open1
  1563 ;;		_Open2
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text7
  1568  001070                     __ptext7:
  1569                           	opt stack 0
  1570  001070                     ___aldiv:
  1571                           	opt stack 27
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;incstack = 0
  1575  001070  6E21               	movwf	??___aldiv& (0+255),c
  1576  001072  0E00               	movlw	0
  1577  001074  0100               	movlb	0	; () banked
  1578  001076  0100               	movlb	0	; () banked
  1579  001078  6F9D               	movwf	___aldiv@sign& (0+255),b
  1580  00107A  5021               	movf	??___aldiv& (0+255),w,c
  1581                           
  1582                           ; BSR set to: 0
  1583  00107C  0100               	movlb	0	; () banked
  1584  00107E  0100               	movlb	0	; () banked
  1585  001080  519B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1586  001082  0A80               	xorlw	128
  1587  001084  0F80               	addlw	128
  1588  001086  E10B               	bnz	u955
  1589  001088  0E00               	movlw	0
  1590  00108A  0100               	movlb	0	; () banked
  1591  00108C  5D9A               	subwf	(___aldiv@divisor+2)& (0+255),w,b
  1592  00108E  E107               	bnz	u955
  1593  001090  0E00               	movlw	0
  1594  001092  0100               	movlb	0	; () banked
  1595  001094  5D99               	subwf	(___aldiv@divisor+1)& (0+255),w,b
  1596  001096  E103               	bnz	u955
  1597  001098  0E00               	movlw	0
  1598  00109A  0100               	movlb	0	; () banked
  1599  00109C  5D98               	subwf	___aldiv@divisor& (0+255),w,b
  1600  00109E                     u955:
  1601  00109E  B0D8               	btfsc	status,0,c
  1602  0010A0  D016               	goto	l1860
  1603                           
  1604                           ; BSR set to: 0
  1605  0010A2  0100               	movlb	0	; () banked
  1606  0010A4  0100               	movlb	0	; () banked
  1607  0010A6  1F9B               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1608  0010A8  0100               	movlb	0	; () banked
  1609  0010AA  1F9A               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1610  0010AC  0100               	movlb	0	; () banked
  1611  0010AE  1F99               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1612  0010B0  0100               	movlb	0	; () banked
  1613  0010B2  6D98               	negf	___aldiv@divisor& (0+255),b
  1614  0010B4  0E00               	movlw	0
  1615  0010B6  0100               	movlb	0	; () banked
  1616  0010B8  2399               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1617  0010BA  0100               	movlb	0	; () banked
  1618  0010BC  239A               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1619  0010BE  0100               	movlb	0	; () banked
  1620  0010C0  239B               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1621                           
  1622                           ; BSR set to: 0
  1623  0010C2  6E21               	movwf	??___aldiv& (0+255),c
  1624  0010C4  0E01               	movlw	1
  1625  0010C6  0100               	movlb	0	; () banked
  1626  0010C8  0100               	movlb	0	; () banked
  1627  0010CA  6F9D               	movwf	___aldiv@sign& (0+255),b
  1628  0010CC  5021               	movf	??___aldiv& (0+255),w,c
  1629  0010CE                     l1860:
  1630                           
  1631                           ; BSR set to: 0
  1632  0010CE  0100               	movlb	0	; () banked
  1633  0010D0  0100               	movlb	0	; () banked
  1634  0010D2  5197               	movf	(___aldiv@dividend+3)& (0+255),w,b
  1635  0010D4  0A80               	xorlw	128
  1636  0010D6  0F80               	addlw	128
  1637  0010D8  E10B               	bnz	u965
  1638  0010DA  0E00               	movlw	0
  1639  0010DC  0100               	movlb	0	; () banked
  1640  0010DE  5D96               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  1641  0010E0  E107               	bnz	u965
  1642  0010E2  0E00               	movlw	0
  1643  0010E4  0100               	movlb	0	; () banked
  1644  0010E6  5D95               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  1645  0010E8  E103               	bnz	u965
  1646  0010EA  0E00               	movlw	0
  1647  0010EC  0100               	movlb	0	; () banked
  1648  0010EE  5D94               	subwf	___aldiv@dividend& (0+255),w,b
  1649  0010F0                     u965:
  1650  0010F0  B0D8               	btfsc	status,0,c
  1651  0010F2  D014               	goto	l1866
  1652                           
  1653                           ; BSR set to: 0
  1654  0010F4  0100               	movlb	0	; () banked
  1655  0010F6  0100               	movlb	0	; () banked
  1656  0010F8  1F97               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1657  0010FA  0100               	movlb	0	; () banked
  1658  0010FC  1F96               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1659  0010FE  0100               	movlb	0	; () banked
  1660  001100  1F95               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1661  001102  0100               	movlb	0	; () banked
  1662  001104  6D94               	negf	___aldiv@dividend& (0+255),b
  1663  001106  0E00               	movlw	0
  1664  001108  0100               	movlb	0	; () banked
  1665  00110A  2395               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1666  00110C  0100               	movlb	0	; () banked
  1667  00110E  2396               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1668  001110  0100               	movlb	0	; () banked
  1669  001112  2397               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1670                           
  1671                           ; BSR set to: 0
  1672  001114  0E01               	movlw	1
  1673  001116  0100               	movlb	0	; () banked
  1674  001118  0100               	movlb	0	; () banked
  1675  00111A  1B9D               	xorwf	___aldiv@sign& (0+255),f,b
  1676  00111C                     l1866:
  1677                           
  1678                           ; BSR set to: 0
  1679  00111C  0E00               	movlw	0
  1680  00111E  0100               	movlb	0	; () banked
  1681  001120  0100               	movlb	0	; () banked
  1682  001122  6F9E               	movwf	___aldiv@quotient& (0+255),b
  1683  001124  0E00               	movlw	0
  1684  001126  0100               	movlb	0	; () banked
  1685  001128  6F9F               	movwf	(___aldiv@quotient+1)& (0+255),b
  1686  00112A  0E00               	movlw	0
  1687  00112C  0100               	movlb	0	; () banked
  1688  00112E  6FA0               	movwf	(___aldiv@quotient+2)& (0+255),b
  1689  001130  0E00               	movlw	0
  1690  001132  0100               	movlb	0	; () banked
  1691  001134  6FA1               	movwf	(___aldiv@quotient+3)& (0+255),b
  1692                           
  1693                           ; BSR set to: 0
  1694  001136  0100               	movlb	0	; () banked
  1695  001138  0100               	movlb	0	; () banked
  1696  00113A  519B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1697  00113C  1198               	iorwf	___aldiv@divisor& (0+255),w,b
  1698  00113E  1199               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1699  001140  119A               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1700  001142  B4D8               	btfsc	status,2,c
  1701  001144  D065               	goto	l1888
  1702                           
  1703                           ; BSR set to: 0
  1704  001146  6E21               	movwf	??___aldiv& (0+255),c
  1705  001148  0E01               	movlw	1
  1706  00114A  0100               	movlb	0	; () banked
  1707  00114C  0100               	movlb	0	; () banked
  1708  00114E  6F9C               	movwf	___aldiv@counter& (0+255),b
  1709  001150  5021               	movf	??___aldiv& (0+255),w,c
  1710  001152  D00D               	goto	l1874
  1711  001154                     l1872:
  1712                           
  1713                           ; BSR set to: 0
  1714  001154  0100               	movlb	0	; () banked
  1715  001156  90D8               	bcf	status,0,c
  1716  001158  0100               	movlb	0	; () banked
  1717  00115A  3798               	rlcf	___aldiv@divisor& (0+255),f,b
  1718  00115C  0100               	movlb	0	; () banked
  1719  00115E  3799               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1720  001160  0100               	movlb	0	; () banked
  1721  001162  379A               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1722  001164  0100               	movlb	0	; () banked
  1723  001166  379B               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1724  001168  0100               	movlb	0	; () banked
  1725  00116A  0100               	movlb	0	; () banked
  1726  00116C  2B9C               	incf	___aldiv@counter& (0+255),f,b
  1727  00116E                     l1874:
  1728                           
  1729                           ; BSR set to: 0
  1730  00116E  0100               	movlb	0	; () banked
  1731  001170  0100               	movlb	0	; () banked
  1732  001172  AF9B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1733  001174  D7EF               	goto	l1872
  1734  001176                     l1876:
  1735                           
  1736                           ; BSR set to: 0
  1737  001176  0100               	movlb	0	; () banked
  1738  001178  90D8               	bcf	status,0,c
  1739  00117A  0100               	movlb	0	; () banked
  1740  00117C  379E               	rlcf	___aldiv@quotient& (0+255),f,b
  1741  00117E  0100               	movlb	0	; () banked
  1742  001180  379F               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1743  001182  0100               	movlb	0	; () banked
  1744  001184  37A0               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1745  001186  0100               	movlb	0	; () banked
  1746  001188  37A1               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1747                           
  1748                           ; BSR set to: 0
  1749  00118A  0100               	movlb	0	; () banked
  1750  00118C  0100               	movlb	0	; () banked
  1751  00118E  5198               	movf	___aldiv@divisor& (0+255),w,b
  1752  001190  0100               	movlb	0	; () banked
  1753  001192  0100               	movlb	0	; () banked
  1754  001194  5D94               	subwf	___aldiv@dividend& (0+255),w,b
  1755  001196  0100               	movlb	0	; () banked
  1756  001198  0100               	movlb	0	; () banked
  1757  00119A  5199               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1758  00119C  0100               	movlb	0	; () banked
  1759  00119E  0100               	movlb	0	; () banked
  1760  0011A0  5995               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1761  0011A2  0100               	movlb	0	; () banked
  1762  0011A4  0100               	movlb	0	; () banked
  1763  0011A6  519A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1764  0011A8  0100               	movlb	0	; () banked
  1765  0011AA  0100               	movlb	0	; () banked
  1766  0011AC  5996               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1767  0011AE  0100               	movlb	0	; () banked
  1768  0011B0  0100               	movlb	0	; () banked
  1769  0011B2  519B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1770  0011B4  0100               	movlb	0	; () banked
  1771  0011B6  0100               	movlb	0	; () banked
  1772  0011B8  5997               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1773  0011BA  A0D8               	btfss	status,0,c
  1774  0011BC  D01B               	goto	l1884
  1775                           
  1776                           ; BSR set to: 0
  1777  0011BE  0100               	movlb	0	; () banked
  1778  0011C0  0100               	movlb	0	; () banked
  1779  0011C2  5198               	movf	___aldiv@divisor& (0+255),w,b
  1780  0011C4  0100               	movlb	0	; () banked
  1781  0011C6  0100               	movlb	0	; () banked
  1782  0011C8  5F94               	subwf	___aldiv@dividend& (0+255),f,b
  1783  0011CA  0100               	movlb	0	; () banked
  1784  0011CC  0100               	movlb	0	; () banked
  1785  0011CE  5199               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1786  0011D0  0100               	movlb	0	; () banked
  1787  0011D2  0100               	movlb	0	; () banked
  1788  0011D4  5B95               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1789  0011D6  0100               	movlb	0	; () banked
  1790  0011D8  0100               	movlb	0	; () banked
  1791  0011DA  519A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1792  0011DC  0100               	movlb	0	; () banked
  1793  0011DE  0100               	movlb	0	; () banked
  1794  0011E0  5B96               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1795  0011E2  0100               	movlb	0	; () banked
  1796  0011E4  0100               	movlb	0	; () banked
  1797  0011E6  519B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1798  0011E8  0100               	movlb	0	; () banked
  1799  0011EA  0100               	movlb	0	; () banked
  1800  0011EC  5B97               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1801                           
  1802                           ; BSR set to: 0
  1803  0011EE  0100               	movlb	0	; () banked
  1804  0011F0  0100               	movlb	0	; () banked
  1805  0011F2  819E               	bsf	___aldiv@quotient& (0+255),0,b
  1806  0011F4                     l1884:
  1807                           
  1808                           ; BSR set to: 0
  1809  0011F4  0100               	movlb	0	; () banked
  1810  0011F6  90D8               	bcf	status,0,c
  1811  0011F8  0100               	movlb	0	; () banked
  1812  0011FA  339B               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1813  0011FC  0100               	movlb	0	; () banked
  1814  0011FE  339A               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1815  001200  0100               	movlb	0	; () banked
  1816  001202  3399               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1817  001204  0100               	movlb	0	; () banked
  1818  001206  3398               	rrcf	___aldiv@divisor& (0+255),f,b
  1819                           
  1820                           ; BSR set to: 0
  1821  001208  0100               	movlb	0	; () banked
  1822  00120A  0100               	movlb	0	; () banked
  1823  00120C  2F9C               	decfsz	___aldiv@counter& (0+255),f,b
  1824  00120E  D7B3               	goto	l1876
  1825  001210                     l1888:
  1826                           
  1827                           ; BSR set to: 0
  1828  001210  0100               	movlb	0	; () banked
  1829  001212  0100               	movlb	0	; () banked
  1830  001214  519D               	movf	___aldiv@sign& (0+255),w,b
  1831  001216  B4D8               	btfsc	status,2,c
  1832  001218  D010               	goto	l1892
  1833                           
  1834                           ; BSR set to: 0
  1835  00121A  0100               	movlb	0	; () banked
  1836  00121C  0100               	movlb	0	; () banked
  1837  00121E  1FA1               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1838  001220  0100               	movlb	0	; () banked
  1839  001222  1FA0               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1840  001224  0100               	movlb	0	; () banked
  1841  001226  1F9F               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1842  001228  0100               	movlb	0	; () banked
  1843  00122A  6D9E               	negf	___aldiv@quotient& (0+255),b
  1844  00122C  0E00               	movlw	0
  1845  00122E  0100               	movlb	0	; () banked
  1846  001230  239F               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1847  001232  0100               	movlb	0	; () banked
  1848  001234  23A0               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1849  001236  0100               	movlb	0	; () banked
  1850  001238  23A1               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1851  00123A                     l1892:
  1852                           
  1853                           ; BSR set to: 0
  1854  00123A  C09E  F094         	movff	___aldiv@quotient,?___aldiv
  1855  00123E  C09F  F095         	movff	___aldiv@quotient+1,?___aldiv+1
  1856  001242  C0A0  F096         	movff	___aldiv@quotient+2,?___aldiv+2
  1857  001246  C0A1  F097         	movff	___aldiv@quotient+3,?___aldiv+3
  1858  00124A  0012               	return	
  1859  00124C                     __end_of___aldiv:
  1860                           	opt stack 0
  1861                           tosu	equ	0xFFF
  1862                           tosh	equ	0xFFE
  1863                           tosl	equ	0xFFD
  1864                           pclath	equ	0xFFA
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           prodh	equ	0xFF4
  1870                           prodl	equ	0xFF3
  1871                           intcon	equ	0xFF2
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postdec1	equ	0xFE5
  1875                           fsr1l	equ	0xFE1
  1876                           indf2	equ	0xFDF
  1877                           fsr2h	equ	0xFDA
  1878                           fsr2l	equ	0xFD9
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _GetFreq *****************
  1882 ;; Defined at:
  1883 ;;		line 128 in file "EAB_Oscillator.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  4    0[BANK0 ] long 
  1890 ;; Registers used:
  1891 ;;		None
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:        4 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    2
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_Open1
  1908 ;;		_Open2
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text8
  1913  001736                     __ptext8:
  1914                           	opt stack 0
  1915  001736                     _GetFreq:
  1916                           	opt stack 27
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;incstack = 0
  1920  001736  C02E  F094         	movff	_OscFreq,?_GetFreq
  1921  00173A  C02F  F095         	movff	_OscFreq+1,?_GetFreq+1
  1922  00173E  C030  F096         	movff	_OscFreq+2,?_GetFreq+2
  1923  001742  C031  F097         	movff	_OscFreq+3,?_GetFreq+3
  1924  001746  0012               	return	
  1925  001748                     __end_of_GetFreq:
  1926                           	opt stack 0
  1927                           tosu	equ	0xFFF
  1928                           tosh	equ	0xFFE
  1929                           tosl	equ	0xFFD
  1930                           pclath	equ	0xFFA
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1l	equ	0xFE1
  1942                           indf2	equ	0xFDF
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _EnableINT1interrupt *****************
  1948 ;; Defined at:
  1949 ;;		line 79 in file "EAB_Pins.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  Priority        1    wreg     unsigned char 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  Priority        1   32[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      unsigned char 
  1956 ;; Registers used:
  1957 ;;		wreg
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        1 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    2
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text9
  1978  001704                     __ptext9:
  1979                           	opt stack 0
  1980  001704                     _EnableINT1interrupt:
  1981                           	opt stack 28
  1982                           
  1983                           ;incstack = 0
  1984                           ;EnableINT1interrupt@Priority stored from wreg
  1985  001704  CFE8 F021          	movff	wreg,EnableINT1interrupt@Priority
  1986  001708  90F0               	bcf	intcon3,0,c	;volatile
  1987  00170A  B021               	btfsc	EnableINT1interrupt@Priority,0,c
  1988  00170C  D002               	bra	u595
  1989  00170E  9CF0               	bcf	intcon3,6,c	;volatile
  1990  001710  D001               	bra	u596
  1991  001712                     u595:
  1992  001712  8CF0               	bsf	intcon3,6,c	;volatile
  1993  001714                     u596:
  1994  001714  86F0               	bsf	intcon3,3,c	;volatile
  1995  001716  8ED0               	bsf	4048,7,c	;volatile
  1996  001718  8EF2               	bsf	intcon,7,c	;volatile
  1997  00171A  8CF2               	bsf	intcon,6,c	;volatile
  1998  00171C  0012               	return	
  1999  00171E                     __end_of_EnableINT1interrupt:
  2000                           	opt stack 0
  2001                           tosu	equ	0xFFF
  2002                           tosh	equ	0xFFE
  2003                           tosl	equ	0xFFD
  2004                           pclath	equ	0xFFA
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           intcon	equ	0xFF2
  2012                           intcon3	equ	0xFF0
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           postdec1	equ	0xFE5
  2016                           fsr1l	equ	0xFE1
  2017                           indf2	equ	0xFDF
  2018                           fsr2h	equ	0xFDA
  2019                           fsr2l	equ	0xFD9
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _EnableINT1_SCK2 *****************
  2023 ;; Defined at:
  2024 ;;		line 39 in file "EAB_Pins.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  Edge            1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  Edge            1   32[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      unsigned char 
  2031 ;; Registers used:
  2032 ;;		wreg
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    2
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text10
  2053  00171E                     __ptext10:
  2054                           	opt stack 0
  2055  00171E                     _EnableINT1_SCK2:
  2056                           	opt stack 28
  2057                           
  2058                           ;incstack = 0
  2059                           ;EnableINT1_SCK2@Edge stored from wreg
  2060  00171E  CFE8 F021          	movff	wreg,EnableINT1_SCK2@Edge
  2061  001722  010F               	movlb	15	; () banked
  2062  001724  010F               	movlb	15	; () banked
  2063  001726  9339               	bcf	57,1,b	;volatile
  2064  001728  8293               	bsf	3987,1,c	;volatile
  2065                           
  2066                           ; BSR set to: 15
  2067  00172A  B021               	btfsc	EnableINT1_SCK2@Edge,0,c
  2068  00172C  D002               	bra	u585
  2069  00172E  9AF1               	bcf	intcon2,5,c	;volatile
  2070  001730  D001               	bra	u586
  2071  001732                     u585:
  2072  001732  8AF1               	bsf	intcon2,5,c	;volatile
  2073  001734                     u586:
  2074  001734  0012               	return	
  2075  001736                     __end_of_EnableINT1_SCK2:
  2076                           	opt stack 0
  2077                           tosu	equ	0xFFF
  2078                           tosh	equ	0xFFE
  2079                           tosl	equ	0xFFD
  2080                           pclath	equ	0xFFA
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           intcon	equ	0xFF2
  2088                           intcon2	equ	0xFF1
  2089                           intcon3	equ	0xFF0
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _LowPriority_InterruptHandler *****************
  2100 ;; Defined at:
  2101 ;;		line 25 in file "EAB_InterruptHandler.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		None
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;Total ram usage:       17 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		Interrupt level 1
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	intcodelo
  2130  000018                     __pintcodelo:
  2131                           	opt stack 0
  2132  000018                     _LowPriority_InterruptHandler:
  2133                           	opt stack 27
  2134                           
  2135                           ;incstack = 0
  2136  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2137  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2138  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2139  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2140  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2141  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2142  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2143  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2144  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2145  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2146  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2147  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2148  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2149  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2150  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2151  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2152  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2153  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2154  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2155  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2156  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2157  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2158  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2159  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2160  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2161  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2162  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2163  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2164  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2165  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2166  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2167  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2168  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2169  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2170  0000A0  0010               	retfie	
  2171  0000A2                     __end_of_LowPriority_InterruptHandler:
  2172                           	opt stack 0
  2173                           tosu	equ	0xFFF
  2174                           tosh	equ	0xFFE
  2175                           tosl	equ	0xFFD
  2176                           pclatu	equ	0xFFB
  2177                           pclath	equ	0xFFA
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           intcon2	equ	0xFF1
  2186                           intcon3	equ	0xFF0
  2187                           postinc0	equ	0xFEE
  2188                           fsr0h	equ	0xFEA
  2189                           fsr0l	equ	0xFE9
  2190                           wreg	equ	0xFE8
  2191                           postdec1	equ	0xFE5
  2192                           fsr1h	equ	0xFE2
  2193                           fsr1l	equ	0xFE1
  2194                           bsr	equ	0xFE0
  2195                           indf2	equ	0xFDF
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _HighPriority_InterruptHandler *****************
  2201 ;; Defined at:
  2202 ;;		line 13 in file "EAB_InterruptHandler.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:       15 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		Interrupt level 2
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	intcode
  2230  000008                     __pintcode:
  2231                           	opt stack 0
  2232  000008                     _HighPriority_InterruptHandler:
  2233                           	opt stack 27
  2234                           
  2235                           ;incstack = 0
  2236  000008  CFFA F013          	movff	pclath,??_HighPriority_InterruptHandler+1
  2237  00000C  CFFB F014          	movff	pclatu,??_HighPriority_InterruptHandler+2
  2238  000010  EFA8  F00A         	goto	int_func
  2239                           tosu	equ	0xFFF
  2240                           tosh	equ	0xFFE
  2241                           tosl	equ	0xFFD
  2242                           pclatu	equ	0xFFB
  2243                           pclath	equ	0xFFA
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           prodh	equ	0xFF4
  2249                           prodl	equ	0xFF3
  2250                           intcon	equ	0xFF2
  2251                           intcon2	equ	0xFF1
  2252                           intcon3	equ	0xFF0
  2253                           postinc0	equ	0xFEE
  2254                           fsr0h	equ	0xFEA
  2255                           fsr0l	equ	0xFE9
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           fsr1h	equ	0xFE2
  2259                           fsr1l	equ	0xFE1
  2260                           bsr	equ	0xFE0
  2261                           indf2	equ	0xFDF
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266                           	psect	intcode_body
  2267  001550                     __pintcode_body:
  2268                           	opt stack 27
  2269  001550                     int_func:
  2270                           	opt stack 27
  2271  001550  CFE9 F015          	movff	fsr0l,??_HighPriority_InterruptHandler+3
  2272  001554  CFEA F016          	movff	fsr0h,??_HighPriority_InterruptHandler+4
  2273  001558  CFE1 F017          	movff	fsr1l,??_HighPriority_InterruptHandler+5
  2274  00155C  CFE2 F018          	movff	fsr1h,??_HighPriority_InterruptHandler+6
  2275  001560  CFD9 F019          	movff	fsr2l,??_HighPriority_InterruptHandler+7
  2276  001564  CFDA F01A          	movff	fsr2h,??_HighPriority_InterruptHandler+8
  2277  001568  CFF3 F01B          	movff	prodl,??_HighPriority_InterruptHandler+9
  2278  00156C  CFF4 F01C          	movff	prodh,??_HighPriority_InterruptHandler+10
  2279  001570  CFF6 F01D          	movff	tblptrl,??_HighPriority_InterruptHandler+11
  2280  001574  CFF7 F01E          	movff	tblptrh,??_HighPriority_InterruptHandler+12
  2281  001578  CFF8 F01F          	movff	tblptru,??_HighPriority_InterruptHandler+13
  2282  00157C  CFF5 F020          	movff	tablat,??_HighPriority_InterruptHandler+14
  2283                           
  2284                           ;EAB_InterruptHandler.c: 16: if(INTCON3bits.INT1IF)
  2285  001580  A0F0               	btfss	intcon3,0,c	;volatile
  2286  001582  D010               	goto	i2l14
  2287                           
  2288                           ;EAB_InterruptHandler.c: 17: {
  2289                           ;EAB_InterruptHandler.c: 18: INT1_Flag_Variable=PinRead.SCK2;
  2290  001584  A281               	btfss	3969,1,c	;volatile
  2291  001586  D003               	goto	i2u2_40
  2292  001588  6A12               	clrf	??_HighPriority_InterruptHandler& (0+255),c
  2293  00158A  2A12               	incf	??_HighPriority_InterruptHandler& (0+255),f,c
  2294  00158C  D001               	goto	i2u2_48
  2295  00158E                     i2u2_40:
  2296  00158E  6A12               	clrf	??_HighPriority_InterruptHandler& (0+255),c
  2297  001590                     i2u2_48:
  2298  001590  5012               	movf	??_HighPriority_InterruptHandler,w,c
  2299  001592  6E33               	movwf	_INT1_Flag_Variable,c
  2300  001594  6A34               	clrf	_INT1_Flag_Variable+1,c
  2301                           
  2302                           ;EAB_InterruptHandler.c: 19: INT1_Flag_Variable=1;
  2303  001596  0E00               	movlw	0
  2304  001598  6E34               	movwf	_INT1_Flag_Variable+1,c
  2305  00159A  0E01               	movlw	1
  2306  00159C  6E33               	movwf	_INT1_Flag_Variable,c
  2307                           
  2308                           ;EAB_InterruptHandler.c: 20: IR_count++;
  2309  00159E  4A35               	infsnz	_IR_count,f,c
  2310  0015A0  2A36               	incf	_IR_count+1,f,c
  2311                           
  2312                           ;EAB_InterruptHandler.c: 21: INTCON3bits.INT1IF=0;
  2313  0015A2  90F0               	bcf	intcon3,0,c	;volatile
  2314  0015A4                     i2l14:
  2315  0015A4  C020  FFF5         	movff	??_HighPriority_InterruptHandler+14,tablat
  2316  0015A8  C01F  FFF8         	movff	??_HighPriority_InterruptHandler+13,tblptru
  2317  0015AC  C01E  FFF7         	movff	??_HighPriority_InterruptHandler+12,tblptrh
  2318  0015B0  C01D  FFF6         	movff	??_HighPriority_InterruptHandler+11,tblptrl
  2319  0015B4  C01C  FFF4         	movff	??_HighPriority_InterruptHandler+10,prodh
  2320  0015B8  C01B  FFF3         	movff	??_HighPriority_InterruptHandler+9,prodl
  2321  0015BC  C01A  FFDA         	movff	??_HighPriority_InterruptHandler+8,fsr2h
  2322  0015C0  C019  FFD9         	movff	??_HighPriority_InterruptHandler+7,fsr2l
  2323  0015C4  C018  FFE2         	movff	??_HighPriority_InterruptHandler+6,fsr1h
  2324  0015C8  C017  FFE1         	movff	??_HighPriority_InterruptHandler+5,fsr1l
  2325  0015CC  C016  FFEA         	movff	??_HighPriority_InterruptHandler+4,fsr0h
  2326  0015D0  C015  FFE9         	movff	??_HighPriority_InterruptHandler+3,fsr0l
  2327  0015D4  C014  FFFB         	movff	??_HighPriority_InterruptHandler+2,pclatu
  2328  0015D8  C013  FFFA         	movff	??_HighPriority_InterruptHandler+1,pclath
  2329  0015DC  0011               	retfie		f
  2330  0015DE                     __end_of_HighPriority_InterruptHandler:
  2331                           	opt stack 0
  2332                           tosu	equ	0xFFF
  2333                           tosh	equ	0xFFE
  2334                           tosl	equ	0xFFD
  2335                           pclatu	equ	0xFFB
  2336                           pclath	equ	0xFFA
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           intcon2	equ	0xFF1
  2345                           intcon3	equ	0xFF0
  2346                           postinc0	equ	0xFEE
  2347                           fsr0h	equ	0xFEA
  2348                           fsr0l	equ	0xFE9
  2349                           wreg	equ	0xFE8
  2350                           postdec1	equ	0xFE5
  2351                           fsr1h	equ	0xFE2
  2352                           fsr1l	equ	0xFE1
  2353                           bsr	equ	0xFE0
  2354                           indf2	equ	0xFDF
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           status	equ	0xFD8
  2358                           tosu	equ	0xFFF
  2359                           tosh	equ	0xFFE
  2360                           tosl	equ	0xFFD
  2361                           pclatu	equ	0xFFB
  2362                           pclath	equ	0xFFA
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           prodh	equ	0xFF4
  2368                           prodl	equ	0xFF3
  2369                           intcon	equ	0xFF2
  2370                           intcon2	equ	0xFF1
  2371                           intcon3	equ	0xFF0
  2372                           postinc0	equ	0xFEE
  2373                           fsr0h	equ	0xFEA
  2374                           fsr0l	equ	0xFE9
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1h	equ	0xFE2
  2378                           fsr1l	equ	0xFE1
  2379                           bsr	equ	0xFE0
  2380                           indf2	equ	0xFDF
  2381                           fsr2h	equ	0xFDA
  2382                           fsr2l	equ	0xFD9
  2383                           status	equ	0xFD8
  2384                           
  2385                           	psect	rparam
  2386  0000                     tosu	equ	0xFFF
  2387                           tosh	equ	0xFFE
  2388                           tosl	equ	0xFFD
  2389                           pclatu	equ	0xFFB
  2390                           pclath	equ	0xFFA
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           intcon2	equ	0xFF1
  2399                           intcon3	equ	0xFF0
  2400                           postinc0	equ	0xFEE
  2401                           fsr0h	equ	0xFEA
  2402                           fsr0l	equ	0xFE9
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           bsr	equ	0xFE0
  2408                           indf2	equ	0xFDF
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        69
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      62
    BANK0           160     34      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S285$3$0	PTR unsigned char  size(2) Largest target is 0

    S285$2$0	PTR unsigned char  size(2) Largest target is 4
		 -> array(COMRAM[4]), 

    S2187$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S2187$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S2187$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S2187$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S2141$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S2141$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    SendArray2@ArrayData	PTR unsigned char  size(2) Largest target is 4
		 -> array(COMRAM[4]), 

    SendArray1@ArrayData	PTR unsigned char  size(2) Largest target is 4
		 -> array(COMRAM[4]), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S329$EnableIOCinterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableIOCinterrupt(), 

    ExternalInt.EnableIOCinterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableIOCinterrupt(), 

    S329$EnableINT2interrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT2interrupt(), 

    ExternalInt.EnableINT2interrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT2interrupt(), 

    S329$EnableINT1interrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT1interrupt(), 

    ExternalInt.EnableINT1interrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT1interrupt(), 

    S329$EnableINT0interruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableINT0interruptHIGH(), 

    ExternalInt.EnableINT0interruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableINT0interruptHIGH(), 

    S329$EnableIOC_PWM3	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableIOC_PWM3(), 

    ExternalInt.EnableIOC_PWM3	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableIOC_PWM3(), 

    S329$EnableIOC_RB4	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableIOC_RB4(), 

    ExternalInt.EnableIOC_RB4	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EnableIOC_RB4(), 

    S329$EnableINT2_SDI2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT2_SDI2(), 

    ExternalInt.EnableINT2_SDI2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT2_SDI2(), 

    S329$EnableINT1_SCK2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT1_SCK2(), 

    ExternalInt.EnableINT1_SCK2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT1_SCK2(), 

    S329$EnableINT0_SS2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT0_SS2(), 

    ExternalInt.EnableINT0_SS2	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableINT0_SS2(), 

    S285$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S285$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S285$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S285$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S285$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S285$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S248$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S248$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S248$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S248$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S248$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S248$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    S135$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S135$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S135$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S135$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S135$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S135$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S135$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S135$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S135$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S135$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S135$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_EnableINT1_SCK2
    _main->_EnableINT1interrupt
    _main->_SetFreq_8MHZ
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2175
                                             32 BANK0      2     2      0
                    _EnableINT1_SCK2 *
                _EnableINT1interrupt *
                              _Open1 *
                              _Open2 *
                         _SendArray1 *
                         _SendArray2 *
                       _SetFreq_8MHZ *
                     _SetTimer0_1Sec *
 ---------------------------------------------------------------------------------
 (1) _SetTimer0_1Sec                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendArray2                                           3     0      3     153
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _SendArray1                                           3     0      3      96
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4     968
                                             14 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4     914
                                             14 BANK0     18    14      4
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     753
                                             32 COMRAM     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _EnableINT1interrupt                                  1     1      0      22
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableINT1_SCK2                                      1     1      0      22
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       15    15      0       0
                                             17 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnableINT1_SCK2 *
   _EnableINT1interrupt *
   _Open1 *
     _GetFreq *
     ___aldiv *
   _Open2 *
     _GetFreq *
     ___aldiv *
   _SendArray1 *
   _SendArray2 *
   _SetFreq_8MHZ *
   _SetTimer0_1Sec *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      3E       1       65.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      12        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Aug 18 00:14:17 2014

                     ??_EnableINT1_SCK2 0021                     SendArray1@ArrayData 0094  
                                    bsr 000FE0                                     l305 16A2  
                                   l294 1670                                     _PR2 000FBB  
                                   u840 131A                                     u808 12BE  
                                   u585 1732                                     u905 14C8  
                                   u809 12D0                                     u586 1734  
                                   u818 12D4                                     u595 1712  
                                   u819 12EE                                     u596 1714  
                                   u828 12F2                                     u846 131C  
                                   u858 1376                                     u955 109E  
                                   u875 13DE                                     u868 138C  
                                   u788 1250                                     u965 10F0  
                                   u869 13A4                                     u789 1268  
                                   u798 128C                                     u799 12A0  
                                   u898 1476                                     u899 148E  
                   SendArray2@ArrayData 0094                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                         ?_SetTimer0_1Sec 0001  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l1860 10CE  
                                  l1766 130C                                    l1872 1154  
                                  l1696 16B8                                    l1848 1688  
                                  l1874 116E                                    l1866 111C  
                                  l1892 123A                                    l1884 11F4  
                                  l1876 1176                                    l1888 1210  
                                  i2l14 15A4                      _EnableRx2interrupt 000000  
                        _TIMER2_100usec 1033                                    _main 124C  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                   __end_of_TIMER0_16mSec 105A  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 1748                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                         __end_of___aldiv 124C  
                                 ?_main 0001                                   _T0CON 000FD5  
                                 _T2CON 000FBA                          __CFG_DEBUG$OFF 000000  
               _EnableINT0interruptHIGH 000000                  __end_of_TIMER0_130mSec 1029  
                                 _Open1 1388                                   _Open2 1472  
                                 _array 003B                                   _count 0037  
                __end_of_TIMER2_100usec 103D                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                        _EnableINT0_SS2 000000                          _EnableIOC_PWM3 000000  
                       __initialization 15DE                            __end_of_main 1388  
                   _EnableINT1interrupt 1704                             Open1@BRGval 00B2  
                   _EnableINT2interrupt 000000                                  ??_main 00B4  
                         __activetblptr 000003                   _SetTimer0_130milliSec 000000  
            __end_of_TIMER2_PR2_100usec 1063                                  ?_Open1 00A2  
                                ?_Open2 00A2                              _SendArray1 1664  
                            _SendArray2 1698                    ?_EnableINT1interrupt 0001  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                   EnableINT1_SCK2@Edge 0021                          __CFG_WDTEN$OFF 000000  
                                _OSCCON 000FD3                               ??_GetFreq 0021  
                                _SPBRG1 000FAF                                  _SPBRG2 000F75  
                                _TX1REG 000FAD                                  _TX2REG 000F73  
                                i2u2_40 158E                                  i2u2_48 1590  
                    _EnableIOCinterrupt 000000                              _Oscillator 0060  
                                _Timer0 1001                                  _Timer1 1069  
                                _Timer2 1010                               ??___aldiv 0021  
                         ?_SetFreq_8MHZ 0001                                  clear_0 15E4  
                  _SetTimer0_16milliSec 000000                            __pdataCOMRAM 0022  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                 ??_EnableINT1interrupt 0021                         _EnableINT1_SCK2 171E  
                       _EnableINT2_SDI2 000000                              __accesstop 0060  
               __end_of__initialization 162A                   _SetTimer2_100microSec 000000  
                        __pcstackCOMRAM 0001                           __end_of_Open1 1472  
                         __end_of_Open2 1550                            __pidataBANK0 1630  
                        ??_SetFreq_8MHZ 0021                        ??_SetTimer0_1Sec 0021  
                               ??_Open1 00A6                                 ??_Open2 00A6  
                           ?_SendArray1 0094                             ?_SendArray2 0094  
                           _PinFunction 000F38                              _delayCount 0039  
                           _ExternalInt 0076             EnableINT1interrupt@Priority 0021  
                         _SetFreq_32MHZ 000000                           _SetFreq_16MHZ 000000  
 __end_of_HighPriority_InterruptHandler 15DE  __size_of_HighPriority_InterruptHandler 15D6  
         _HighPriority_InterruptHandler 0008                           _SetFreq_64MHZ 000000  
                           _SendString1 000000                             _SendString2 000000  
               __end_of_EnableINT1_SCK2 1736                                 _SPBRGH1 000FB0  
                               _SPBRGH2 000F76                        _TIMER2_PR2_1msec 1047  
                               _GetFreq 1736                                 _PinRead 000F80  
                               _OscFreq 002E                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 0088  
                               _Serial2 0022                                 ___aldiv 1070  
                   __size_of_SendArray1 0034                     __size_of_SendArray2 002C  
                          __psmallconst 1000                                 __pcinit 15DE  
                               __ramtop 1000                                 __ptext0 124C  
                               __ptext1 16E6                                 __ptext2 16C4  
                               __ptext3 1664                                 __ptext4 1698  
                               __ptext5 1388                                 __ptext6 1472  
                               __ptext7 1070                                 __ptext8 1736  
                               __ptext9 1704                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                               _T2CONbits 000FBA  
                      ___aldiv@dividend 0094                          __pintcode_body 1550  
                  end_of_initialization 162A                    __end_of_SetFreq_8MHZ 16E6  
                               int_func 1550                      _TIMER2_PR2_100usec 105A  
                      ___aldiv@quotient 009E                                 postdec1 000FE5  
                               postinc0 000FEE    __end_of_LowPriority_InterruptHandler 00A2  
 __size_of_LowPriority_InterruptHandler 008A            _LowPriority_InterruptHandler 0018  
                      __CFG_FOSC$INTIO7 000000                        ?_EnableINT1_SCK2 0001  
        ?_HighPriority_InterruptHandler 0001                           _TIMER0_16mSec 1051  
                  __end_of_TIMER0_1mSec 1069                    __end_of_TIMER2_1msec 1047  
                        __end_of_Timer0 1010                          __end_of_Timer1 106E  
                        __end_of_Timer2 101F                               Open1@freq 00AE  
                             Open2@freq 00AE                               Open2@temp 00B2  
                         __pidataCOMRAM 1748           ?_LowPriority_InterruptHandler 0001  
           __end_of_EnableINT1interrupt 171E                           _EnableIOC_RB4 000000  
                   start_initialization 15DE                               _ReadByte1 000000  
                             _ReadByte2 000000                            ??_SendArray1 0021  
                          ??_SendArray2 0021                               _SendByte1 000000  
                             _SendByte2 000000                            _PinDirection 000F92  
                             _SetTimer0 000000                               _SetTimer1 000000  
                             _SetTimer2 000000                               _Timer0Int 000000  
                             _Timer1Int 000000                               _Timer2Int 000000  
                         Open1@BaudRate 00A2                __end_of_TIMER2_PR2_1msec 1051  
                    _SetTimer0_1millSec 000000                      __end_of_SendArray1 1698  
                    __end_of_SendArray2 16C4                             __pdataBANK0 0060  
                         Open2@BaudRate 00A2                      _SetTimer2_1millSec 000000  
                           __pbssCOMRAM 0033                   __size_of_SetFreq_8MHZ 0022  
                         __pcstackBANK0 0094                            _OscFreqIndex 0032  
                              ?_GetFreq 0094                               __pintcode 0008  
                              ?___aldiv 0094                            _SetFreq_1MHZ 000000  
                          _SetFreq_2MHZ 000000                            _SetFreq_4MHZ 000000  
                           __pintcodelo 0018                            _SetFreq_8MHZ 16C4  
                           __smallconst 1000                          __size_of_Open1 00EA  
                        __size_of_Open2 00DE                      _INT1_Flag_Variable 0033  
        ??_LowPriority_InterruptHandler 0001                          _SetFreq_250KHZ 000000  
                        _SetFreq_500KHZ 000000                 __size_of_SetTimer0_1Sec 001E  
                       ___aldiv@divisor 0098                         ___aldiv@counter 009C  
                              _IOCBbits 000F62                                _IPR1bits 000F9F  
                              _PIE1bits 000F9D                                _IPR3bits 000FA5  
                              _PIE3bits 000FA3                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4                                _RCONbits 000FD0  
                              _IR_count 0035                     __end_of_TIMER0_1Sec 1033  
                          _TIMER0_1mSec 1063                        SendArray1@length 0096  
                      SendArray2@length 0096                            _TIMER2_1msec 103D  
                           _INTCON2bits 000FF1                             _INTCON3bits 000FF0  
                             copy_data0 15FE                               copy_data1 161E  
                      __size_of_GetFreq 0012                                _PinWrite 000F89  
                              __Hrparam 0000         ??_HighPriority_InterruptHandler 0012  
                              __Lrparam 0000                        __size_of___aldiv 01DC  
                              __ptext10 171E                             _OSCCON2bits 000FD2  
                      _SetFreq_31_25KHZ 000000                __size_of_EnableINT1_SCK2 0018  
                         __size_of_main 013C                             _TIMER0_1Sec 1029  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
          __size_of_EnableINT1interrupt 001A                          _SetTimer0_1Sec 16E6  
                              intlevel1 0000                                intlevel2 0000  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F71  
                            _OSCCONbits 000FD3                            ___aldiv@sign 009D  
                __end_of_SetTimer0_1Sec 1704  
