

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Aug 18 00:38:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    37  0000                     
    38 ;; Function _SetFreq_250KHZ is unused but had its address taken
    39  0000                     
    40 ;; Function _SetFreq_500KHZ is unused but had its address taken
    41  0000                     
    42 ;; Function _SetFreq_1MHZ is unused but had its address taken
    43  0000                     
    44 ;; Function _SetFreq_2MHZ is unused but had its address taken
    45  0000                     
    46 ;; Function _SetFreq_4MHZ is unused but had its address taken
    47  0000                     
    48 ;; Function _SetFreq_16MHZ is unused but had its address taken
    49  0000                     
    50 ;; Function _SetFreq_32MHZ is unused but had its address taken
    51  0000                     
    52 ;; Function _SetFreq_64MHZ is unused but had its address taken
    53  0000                     
    54 ;; Function _SendByte1 is unused but had its address taken
    55  0000                     
    56 ;; Function _SendByte2 is unused but had its address taken
    57  0000                     
    58 ;; Function _SendString1 is unused but had its address taken
    59  0000                     
    60 ;; Function _SendString2 is unused but had its address taken
    61  0000                     
    62 ;; Function _ReadByte1 is unused but had its address taken
    63  0000                     
    64 ;; Function _ReadByte2 is unused but had its address taken
    65  0000                     
    66 ;; Function _EnableRx1interrupt is unused but had its address taken
    67  0000                     
    68 ;; Function _EnableRx2interrupt is unused but had its address taken
    69  0000                     
    70 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    71  0000                     
    72 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    73  0000                     
    74 ;; Function _SetTimer0_1millSec is unused but had its address taken
    75  0000                     
    76 ;; Function _SetTimer0 is unused but had its address taken
    77  0000                     
    78 ;; Function _Timer0Int is unused but had its address taken
    79  0000                     
    80 ;; Function _SetTimer1 is unused but had its address taken
    81  0000                     
    82 ;; Function _Timer1Int is unused but had its address taken
    83  0000                     
    84 ;; Function _SetTimer2_1millSec is unused but had its address taken
    85  0000                     
    86 ;; Function _SetTimer2_100microSec is unused but had its address taken
    87  0000                     
    88 ;; Function _SetTimer2 is unused but had its address taken
    89  0000                     
    90 ;; Function _Timer2Int is unused but had its address taken
    91  0000                     
    92                           	psect	idataCOMRAM
    93  001A68                     __pidataCOMRAM:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _Serial1
    97  001A68  14B0               	dw	_Open1& (0+65535)
    98  001A6A  0000               	dw	0
    99  001A6C  19AE               	dw	_SendArray1& (0+65535)
   100  001A6E  0000               	dw	0
   101  001A70  0000               	dw	0
   102  001A72  0000               	dw	0
   103                           
   104                           ;initializer for _OscFreq
   105  001A74  4240               	dw	16960
   106  001A76  000F               	dw	15
   107                           
   108                           ;initializer for _OscFreqIndex
   109  001A78  03                 	db	3
   110                           
   111                           	psect	idataBANK0
   112  00195E                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _Oscillator
   116  00195E  0000               	dw	0
   117  001960  0000               	dw	0
   118  001962  0000               	dw	0
   119  001964  0000               	dw	0
   120  001966  0000               	dw	0
   121  001968  0000               	dw	0
   122  00196A  19FA               	dw	_SetFreq_8MHZ& (0+65535)
   123  00196C  0000               	dw	0
   124  00196E  0000               	dw	0
   125  001970  0000               	dw	0
   126  001972  1A56               	dw	_GetFreq& (0+65535)
   127                           
   128                           ;initializer for _Serial2
   129  001974  1592               	dw	_Open2& (0+65535)
   130  001976  0000               	dw	0
   131  001978  19D4               	dw	_SendArray2& (0+65535)
   132  00197A  0000               	dw	0
   133  00197C  0000               	dw	0
   134  00197E  0000               	dw	0
   135                           
   136                           ;initializer for _I2C1
   137  001980  1718               	dw	_Open& (0+65535)
   138  001982  13B4               	dw	_ReadArray& (0+65535)
   139  001984  1668               	dw	_WriteArray& (0+65535)
   140                           
   141                           	psect	smallconst
   142  001000                     __psmallconst:
   143                           	opt stack 0
   144  001000  00                 	db	0
   145  001001                     _Timer0:
   146                           	opt stack 0
   147  001001  1A1C               	dw	_SetTimer0_1Sec& (0+65535)
   148  001003  0000               	dw	0
   149  001005  0000               	dw	0
   150  001007  0000               	dw	0
   151  001009  0000               	dw	0
   152  00100B  0000               	dw	0
   153  00100D  3A                 	db	58
   154  00100E  2C                 	db	44
   155  00100F  7E                 	db	126
   156  001010                     __end_of_Timer0:
   157                           	opt stack 0
   158  001010                     _Timer2:
   159                           	opt stack 0
   160  001010  0000               	dw	0
   161  001012  0000               	dw	0
   162  001014  0000               	dw	0
   163  001016  0000               	dw	0
   164  001018  AA                 	db	170
   165  001019  B3                 	db	179
   166  00101A  3E                 	db	62
   167  00101B  98                 	db	152
   168  00101C  BA                 	db	186
   169  00101D  DC                 	db	220
   170  00101E  FE                 	db	254
   171  00101F                     __end_of_Timer2:
   172                           	opt stack 0
   173  00101F                     _TIMER0_130mSec:
   174                           	opt stack 0
   175  00101F  C1                 	db	193
   176  001020  C4                 	db	196
   177  001021  C5                 	db	197
   178  001022  C6                 	db	198
   179  001023  C7                 	db	199
   180  001024  80                 	db	128
   181  001025  81                 	db	129
   182  001026  82                 	db	130
   183  001027  83                 	db	131
   184  001028  84                 	db	132
   185  001029                     __end_of_TIMER0_130mSec:
   186                           	opt stack 0
   187  001029                     _TIMER0_1Sec:
   188                           	opt stack 0
   189  001029  C4                 	db	196
   190  00102A  C7                 	db	199
   191  00102B  80                 	db	128
   192  00102C  81                 	db	129
   193  00102D  82                 	db	130
   194  00102E  83                 	db	131
   195  00102F  84                 	db	132
   196  001030  85                 	db	133
   197  001031  86                 	db	134
   198  001032  87                 	db	135
   199  001033                     __end_of_TIMER0_1Sec:
   200                           	opt stack 0
   201  001033                     _TIMER2_100usec:
   202                           	opt stack 0
   203  001033  84                 	db	132
   204  001034  84                 	db	132
   205  001035  84                 	db	132
   206  001036  84                 	db	132
   207  001037  84                 	db	132
   208  001038  84                 	db	132
   209  001039  8C                 	db	140
   210  00103A  9C                 	db	156
   211  00103B  BC                 	db	188
   212  00103C  00                 	db	0
   213  00103D                     __end_of_TIMER2_100usec:
   214                           	opt stack 0
   215  00103D                     _TIMER2_1msec:
   216                           	opt stack 0
   217  00103D  84                 	db	132
   218  00103E  84                 	db	132
   219  00103F  84                 	db	132
   220  001040  84                 	db	132
   221  001041  CC                 	db	204
   222  001042  CC                 	db	204
   223  001043  CC                 	db	204
   224  001044  A5                 	db	165
   225  001045  CD                 	db	205
   226  001046  A7                 	db	167
   227  001047                     __end_of_TIMER2_1msec:
   228                           	opt stack 0
   229  001047                     _TIMER2_PR2_1msec:
   230                           	opt stack 0
   231  001047  08                 	db	8
   232  001048  3E                 	db	62
   233  001049  7D                 	db	125
   234  00104A  FA                 	db	250
   235  00104B  32                 	db	50
   236  00104C  64                 	db	100
   237  00104D  C8                 	db	200
   238  00104E  C8                 	db	200
   239  00104F  C8                 	db	200
   240  001050  C8                 	db	200
   241  001051                     __end_of_TIMER2_PR2_1msec:
   242                           	opt stack 0
   243  001051                     _TIMER0_16mSec:
   244                           	opt stack 0
   245  001051  C1                 	db	193
   246  001052  C2                 	db	194
   247  001053  C3                 	db	195
   248  001054  C4                 	db	196
   249  001055  C5                 	db	197
   250  001056  C6                 	db	198
   251  001057  C7                 	db	199
   252  001058  80                 	db	128
   253  001059  81                 	db	129
   254  00105A                     __end_of_TIMER0_16mSec:
   255                           	opt stack 0
   256  00105A                     _TIMER2_PR2_100usec:
   257                           	opt stack 0
   258  00105A  06                 	db	6
   259  00105B  0D                 	db	13
   260  00105C  19                 	db	25
   261  00105D  32                 	db	50
   262  00105E  64                 	db	100
   263  00105F  C8                 	db	200
   264  001060  C8                 	db	200
   265  001061  C8                 	db	200
   266  001062  C8                 	db	200
   267  001063                     __end_of_TIMER2_PR2_100usec:
   268                           	opt stack 0
   269  001063                     _TIMER0_1mSec:
   270                           	opt stack 0
   271  001063  C0                 	db	192
   272  001064  C1                 	db	193
   273  001065  C2                 	db	194
   274  001066  C3                 	db	195
   275  001067  C4                 	db	196
   276  001068  C5                 	db	197
   277  001069                     __end_of_TIMER0_1mSec:
   278                           	opt stack 0
   279  001069                     _Timer1:
   280                           	opt stack 0
   281  001069  0000               	dw	0
   282  00106B  0000               	dw	0
   283  00106D  3A                 	db	58
   284  00106E                     __end_of_Timer1:
   285                           	opt stack 0
   286  0000                     _PinDirection	set	3986
   287  0000                     _PinFunction	set	3896
   288  0000                     _BAUDCON1bits	set	4024
   289  0000                     _BAUDCON2bits	set	3952
   290  0000                     _INTCONbits	set	4082
   291  0000                     _IPR1bits	set	3999
   292  0000                     _IPR3bits	set	4005
   293  0000                     _OSCCON	set	4051
   294  0000                     _OSCCON2bits	set	4050
   295  0000                     _OSCCONbits	set	4051
   296  0000                     _OSCTUNEbits	set	3995
   297  0000                     _PIE1bits	set	3997
   298  0000                     _PIE3bits	set	4003
   299  0000                     _PIR1bits	set	3998
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PR2	set	4027
   303  0000                     _RC1REG	set	4014
   304  0000                     _RC2REG	set	3956
   305  0000                     _RCONbits	set	4048
   306  0000                     _RCSTA1bits	set	4011
   307  0000                     _RCSTA2bits	set	3953
   308  0000                     _SPBRG1	set	4015
   309  0000                     _SPBRG2	set	3957
   310  0000                     _SPBRGH1	set	4016
   311  0000                     _SPBRGH2	set	3958
   312  0000                     _SSP1BUF	set	4041
   313  0000                     _SSP1CON1	set	4038
   314  0000                     _SSP1CON1bits	set	4038
   315  0000                     _SSP1CON2	set	4037
   316  0000                     _SSP1CON2bits	set	4037
   317  0000                     _SSP1STAT	set	4039
   318  0000                     _SSP1STATbits	set	4039
   319  0000                     _SSPADD	set	4040
   320  0000                     _SSPCON1bits	set	4038
   321  0000                     _SSPCON2bits	set	4037
   322  0000                     _T0CON	set	4053
   323  0000                     _T0CONbits	set	4053
   324  0000                     _T1CONbits	set	4045
   325  0000                     _T2CON	set	4026
   326  0000                     _T2CONbits	set	4026
   327  0000                     _TX1REG	set	4013
   328  0000                     _TX2REG	set	3955
   329  0000                     _TXSTA1bits	set	4012
   330  0000                     _TXSTA2bits	set	3954
   331                           
   332                           ; #config settings
   333  00106E  00                 	db	0	; dummy byte at the end
   334  0000                     
   335                           	psect	cinit
   336  001914                     __pcinit:
   337                           	opt stack 0
   338  001914                     start_initialization:
   339                           	opt stack 0
   340  001914                     __initialization:
   341                           	opt stack 0
   342                           
   343                           ; Clear objects allocated to COMRAM (2 bytes)
   344  001914  6A40               	clrf	(__pbssCOMRAM+1)& (0+255),c
   345  001916  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   346                           
   347                           ; Initialize objects allocated to BANK0 (40 bytes)
   348                           ; load TBLPTR registers with __pidataBANK0
   349  001918  0E5E               	movlw	low __pidataBANK0
   350  00191A  6EF6               	movwf	tblptrl,c
   351  00191C  0E19               	movlw	high __pidataBANK0
   352  00191E  6EF7               	movwf	tblptrh,c
   353  001920  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   354  001922  6EF8               	movwf	tblptru,c
   355  001924  EE00  F060         	lfsr	0,__pdataBANK0
   356  001928  EE10 F028          	lfsr	1,40
   357  00192C                     copy_data0:
   358  00192C  0009               	tblrd		*+
   359  00192E  CFF5 FFEE          	movff	tablat,postinc0
   360  001932  50E5               	movf	postdec1,w,c
   361  001934  50E1               	movf	fsr1l,w,c
   362  001936  E1FA               	bnz	copy_data0
   363                           
   364                           ; Initialize objects allocated to COMRAM (17 bytes)
   365                           ; load TBLPTR registers with __pidataCOMRAM
   366  001938  0E68               	movlw	low __pidataCOMRAM
   367  00193A  6EF6               	movwf	tblptrl,c
   368  00193C  0E1A               	movlw	high __pidataCOMRAM
   369  00193E  6EF7               	movwf	tblptrh,c
   370  001940  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   371  001942  6EF8               	movwf	tblptru,c
   372  001944  EE00  F02E         	lfsr	0,__pdataCOMRAM
   373  001948  EE10 F011          	lfsr	1,17
   374  00194C                     copy_data1:
   375  00194C  0009               	tblrd		*+
   376  00194E  CFF5 FFEE          	movff	tablat,postinc0
   377  001952  50E5               	movf	postdec1,w,c
   378  001954  50E1               	movf	fsr1l,w,c
   379  001956  E1FA               	bnz	copy_data1
   380  001958                     end_of_initialization:
   381                           	opt stack 0
   382  001958                     __end_of__initialization:
   383                           	opt stack 0
   384  001958  0100               	movlb	0
   385  00195A  EF38  F008         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	bssCOMRAM
   395  00003F                     __pbssCOMRAM:
   396                           	opt stack 0
   397  00003F                     _delayCount:
   398                           	opt stack 0
   399  00003F                     	ds	2
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	dataCOMRAM
   409  00002E                     __pdataCOMRAM:
   410                           	opt stack 0
   411  00002E                     _Serial1:
   412                           	opt stack 0
   413  00002E                     	ds	12
   414  00003A                     _OscFreq:
   415                           	opt stack 0
   416  00003A                     	ds	4
   417  00003E                     _OscFreqIndex:
   418                           	opt stack 0
   419  00003E                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataBANK0
   429  000060                     __pdataBANK0:
   430                           	opt stack 0
   431  000060                     _Oscillator:
   432                           	opt stack 0
   433  000060                     	ds	22
   434  000076                     _Serial2:
   435                           	opt stack 0
   436  000076                     	ds	12
   437  000082                     _I2C1:
   438                           	opt stack 0
   439  000082                     	ds	6
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	cstackBANK0
   449  000088                     __pcstackBANK0:
   450                           	opt stack 0
   451  000088                     ___aldiv@counter:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x0
   455  000088                     	ds	1
   456  000089                     ___aldiv@sign:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x1
   460  000089                     	ds	1
   461  00008A                     ___aldiv@quotient:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0x2
   465  00008A                     	ds	4
   466  00008E                     ??_Open:
   467  00008E                     ??_Open1:
   468  00008E                     ??_Open2:
   469                           
   470                           ; 0 bytes @ 0x6
   471  00008E                     	ds	8
   472  000096                     Open@SysFreq:
   473                           	opt stack 0
   474  000096                     Open1@freq:
   475                           	opt stack 0
   476  000096                     Open2@freq:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0xE
   480  000096                     	ds	4
   481  00009A                     Open1@BRGval:
   482                           	opt stack 0
   483  00009A                     Open2@temp:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x12
   487  00009A                     	ds	2
   488  00009C                     ??_main:
   489                           
   490                           ; 0 bytes @ 0x14
   491  00009C                     	ds	2
   492  00009E                     main@AccelID:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x16
   496  00009E                     	ds	1
   497  00009F                     main@TxData:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x17
   501  00009F                     	ds	1
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	cstackCOMRAM
   511  000001                     __pcstackCOMRAM:
   512                           	opt stack 0
   513  000001                     ??_LowPriority_InterruptHandler:
   514  000001                     
   515                           ; 1 bytes @ 0x0
   516  000001                     	ds	17
   517  000012                     ??_HighPriority_InterruptHandler:
   518                           
   519                           ; 0 bytes @ 0x11
   520  000012                     	ds	14
   521  000020                     ??_WriteI2C1:
   522  000020                     ??_SetFreq_8MHZ:
   523  000020                     ??_ReadI2C1:
   524  000020                     ?_GetFreq:
   525                           	opt stack 0
   526  000020                     ?___aldiv:
   527                           	opt stack 0
   528  000020                     OpenI2C1@slew:
   529                           	opt stack 0
   530  000020                     SendArray1@ArrayData:
   531                           	opt stack 0
   532  000020                     SendArray2@ArrayData:
   533                           	opt stack 0
   534  000020                     ___aldiv@dividend:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x1F
   538  000020                     	ds	1
   539  000021                     OpenI2C1@sync_mode:
   540                           	opt stack 0
   541  000021                     WriteI2C1@data_out:
   542                           	opt stack 0
   543  000021                     getsI2C1@rdptr:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x20
   547  000021                     	ds	1
   548  000022                     WriteArray@RegisterAdd:
   549                           	opt stack 0
   550  000022                     SendArray1@length:
   551                           	opt stack 0
   552  000022                     SendArray2@length:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x21
   556  000022                     	ds	1
   557  000023                     getsI2C1@length:
   558                           	opt stack 0
   559  000023                     WriteArray@RegisterValue:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x22
   563  000023                     	ds	1
   564  000024                     ??_getsI2C1:
   565  000024                     ___aldiv@divisor:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x23
   569  000024                     	ds	1
   570  000025                     WriteArray@length:
   571                           	opt stack 0
   572  000025                     ReadArray@RegisterAdd:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x24
   576  000025                     	ds	1
   577  000026                     ??_WriteArray:
   578  000026                     ReadArray@RegisterValue:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x25
   582  000026                     	ds	1
   583  000027                     WriteArray@data:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x26
   587  000027                     	ds	1
   588  000028                     ??___aldiv:
   589  000028                     WriteArray@DeviceAdd:
   590                           	opt stack 0
   591  000028                     ReadArray@length:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x27
   595  000028                     	ds	1
   596  000029                     ??_ReadArray:
   597  000029                     WriteArray@ComRes:
   598                           	opt stack 0
   599  000029                     Open@I2Cfreq:
   600                           	opt stack 0
   601  000029                     Open1@BaudRate:
   602                           	opt stack 0
   603  000029                     Open2@BaudRate:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0x28
   607  000029                     	ds	1
   608  00002A                     ReadArray@data:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x29
   612  00002A                     	ds	1
   613  00002B                     ReadArray@DeviceAdd:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x2A
   617  00002B                     	ds	1
   618  00002C                     ReadArray@DeviceAddr:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x2B
   622  00002C                     	ds	1
   623  00002D                     ReadArray@ComRes:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x2C
   627  00002D                     	ds	1
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 41 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  TxData          1   23[BANK0 ] unsigned char 
   646 ;;  AccelID         1   22[BANK0 ] unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;		None               void
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:        4 bytes
   661 ;; Hardware stack levels required when called:    5
   662 ;; This function calls:
   663 ;;		_Open
   664 ;;		_Open1
   665 ;;		_Open2
   666 ;;		_ReadArray
   667 ;;		_SendArray1
   668 ;;		_SendArray2
   669 ;;		_SetFreq_8MHZ
   670 ;;		_SetTimer0_1Sec
   671 ;;		_WriteArray
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text0
   678  001070                     __ptext0:
   679                           	opt stack 0
   680  001070                     _main:
   681                           	opt stack 26
   682                           
   683                           ;main.c: 44: uchar AccelID=0;
   684                           
   685                           ;incstack = 0
   686  001070  0100               	movlb	0	; () banked
   687  001072  6F9C               	movwf	??_main& (0+255),b
   688  001074  0E00               	movlw	0
   689  001076  0100               	movlb	0	; () banked
   690  001078  0100               	movlb	0	; () banked
   691  00107A  6F9E               	movwf	main@AccelID& (0+255),b
   692  00107C  0100               	movlb	0	; () banked
   693  00107E  519C               	movf	??_main& (0+255),w,b
   694                           
   695                           ;main.c: 45: uchar TxData=5;
   696  001080  0100               	movlb	0	; () banked
   697  001082  6F9C               	movwf	??_main& (0+255),b
   698  001084  0E05               	movlw	5
   699  001086  0100               	movlb	0	; () banked
   700  001088  0100               	movlb	0	; () banked
   701  00108A  6F9F               	movwf	main@TxData& (0+255),b
   702  00108C  0100               	movlb	0	; () banked
   703  00108E  519C               	movf	??_main& (0+255),w,b
   704                           
   705                           ; BSR set to: 0
   706                           ;main.c: 48: Oscillator.SetFreq_8MHZ();
   707  001090  D801               	call	u1908
   708  001092  D00C               	goto	u1909
   709  001094                     u1908:
   710  001094  0005               	push	
   711  001096  6EFA               	movwf	pclath,c
   712  001098  0100               	movlb	0	; () banked
   713  00109A  0100               	movlb	0	; () banked
   714  00109C  516C               	movf	(_Oscillator+12)& (0+255),w,b
   715  00109E  6EFD               	movwf	tosl,c
   716  0010A0  0100               	movlb	0	; () banked
   717  0010A2  516D               	movf	(_Oscillator+13)& (0+255),w,b
   718  0010A4  6EFE               	movwf	tosh,c
   719  0010A6  6AFF               	clrf	tosu,c
   720  0010A8  50FA               	movf	pclath,w,c
   721  0010AA  0012               	return		;indir
   722  0010AC                     u1909:
   723                           
   724                           ;main.c: 49: Timer0.SetPeriod_1Sec();
   725  0010AC  0E01               	movlw	low _Timer0
   726  0010AE  6EF6               	movwf	tblptrl,c
   727  0010B0  0E10               	movlw	high _Timer0
   728  0010B2  6EF7               	movwf	tblptrh,c
   729  0010B4  0E00               	movlw	low (_Timer0 shr (0+16))
   730  0010B6  6EF8               	movwf	tblptru,c
   731  0010B8  0009               	tblrd		*+
   732  0010BA  CFF5 F09C          	movff	tablat,??_main
   733  0010BE  0009               	tblrd		*+
   734  0010C0  CFF5 F09D          	movff	tablat,??_main+1
   735  0010C4  D801               	call	u1918
   736  0010C6  D00A               	goto	u1919
   737  0010C8                     u1918:
   738  0010C8  0005               	push	
   739  0010CA  6EFA               	movwf	pclath,c
   740  0010CC  0100               	movlb	0	; () banked
   741  0010CE  519C               	movf	??_main& (0+255),w,b
   742  0010D0  6EFD               	movwf	tosl,c
   743  0010D2  519D               	movf	(??_main+1)& (0+255),w,b
   744  0010D4  6EFE               	movwf	tosh,c
   745  0010D6  6AFF               	clrf	tosu,c
   746  0010D8  50FA               	movf	pclath,w,c
   747  0010DA  0012               	return		;indir
   748  0010DC                     u1919:
   749                           
   750                           ;main.c: 50: Serial2.Open(9600);
   751  0010DC  0E80               	movlw	128
   752  0010DE  6E29               	movwf	Open2@BaudRate,c
   753  0010E0  0E25               	movlw	37
   754  0010E2  6E2A               	movwf	Open2@BaudRate+1,c
   755  0010E4  0E00               	movlw	0
   756  0010E6  6E2B               	movwf	Open2@BaudRate+2,c
   757  0010E8  0E00               	movlw	0
   758  0010EA  6E2C               	movwf	Open2@BaudRate+3,c
   759  0010EC  D801               	call	u1928
   760  0010EE  D00C               	goto	u1929
   761  0010F0                     u1928:
   762  0010F0  0005               	push	
   763  0010F2  6EFA               	movwf	pclath,c
   764  0010F4  0100               	movlb	0	; () banked
   765  0010F6  0100               	movlb	0	; () banked
   766  0010F8  5176               	movf	_Serial2& (0+255),w,b
   767  0010FA  6EFD               	movwf	tosl,c
   768  0010FC  0100               	movlb	0	; () banked
   769  0010FE  5177               	movf	(_Serial2+1)& (0+255),w,b
   770  001100  6EFE               	movwf	tosh,c
   771  001102  6AFF               	clrf	tosu,c
   772  001104  50FA               	movf	pclath,w,c
   773  001106  0012               	return		;indir
   774  001108                     u1929:
   775                           
   776                           ;main.c: 53: I2C1.Open(400000);
   777  001108  0E80               	movlw	128
   778  00110A  6E29               	movwf	Open@I2Cfreq,c
   779  00110C  0E1A               	movlw	26
   780  00110E  6E2A               	movwf	Open@I2Cfreq+1,c
   781  001110  0E06               	movlw	6
   782  001112  6E2B               	movwf	Open@I2Cfreq+2,c
   783  001114  0E00               	movlw	0
   784  001116  6E2C               	movwf	Open@I2Cfreq+3,c
   785  001118  D801               	call	u1938
   786  00111A  D00C               	goto	u1939
   787  00111C                     u1938:
   788  00111C  0005               	push	
   789  00111E  6EFA               	movwf	pclath,c
   790  001120  0100               	movlb	0	; () banked
   791  001122  0100               	movlb	0	; () banked
   792  001124  5182               	movf	_I2C1& (0+255),w,b
   793  001126  6EFD               	movwf	tosl,c
   794  001128  0100               	movlb	0	; () banked
   795  00112A  5183               	movf	(_I2C1+1)& (0+255),w,b
   796  00112C  6EFE               	movwf	tosh,c
   797  00112E  6AFF               	clrf	tosu,c
   798  001130  50FA               	movf	pclath,w,c
   799  001132  0012               	return		;indir
   800  001134                     u1939:
   801                           
   802                           ;main.c: 55: I2C1.ReadArray(0x38, 0x00, &AccelID,1);
   803  001134  D801               	call	u1948
   804  001136  D01F               	goto	u1949
   805  001138                     u1948:
   806  001138  0005               	push	
   807  00113A  6EFA               	movwf	pclath,c
   808  00113C  0100               	movlb	0	; () banked
   809  00113E  0100               	movlb	0	; () banked
   810  001140  5184               	movf	(_I2C1+2)& (0+255),w,b
   811  001142  6EFD               	movwf	tosl,c
   812  001144  0100               	movlb	0	; () banked
   813  001146  5185               	movf	(_I2C1+3)& (0+255),w,b
   814  001148  6EFE               	movwf	tosh,c
   815  00114A  6AFF               	clrf	tosu,c
   816  00114C  50FA               	movf	pclath,w,c
   817  00114E  0100               	movlb	0	; () banked
   818  001150  6F9C               	movwf	??_main& (0+255),b
   819  001152  0E00               	movlw	0
   820  001154  6E25               	movwf	ReadArray@RegisterAdd,c
   821  001156  0100               	movlb	0	; () banked
   822  001158  519C               	movf	??_main& (0+255),w,b
   823  00115A  0100               	movlb	0	; () banked
   824  00115C  0E00               	movlw	high main@AccelID
   825  00115E  6E27               	movwf	ReadArray@RegisterValue+1,c
   826  001160  0100               	movlb	0	; () banked
   827  001162  0E9E               	movlw	low main@AccelID
   828  001164  6E26               	movwf	ReadArray@RegisterValue,c
   829  001166  0100               	movlb	0	; () banked
   830  001168  6F9D               	movwf	(??_main+1)& (0+255),b
   831  00116A  0E01               	movlw	1
   832  00116C  6E28               	movwf	ReadArray@length,c
   833  00116E  0100               	movlb	0	; () banked
   834  001170  519D               	movf	(??_main+1)& (0+255),w,b
   835  001172  0E38               	movlw	56
   836  001174  0012               	return		;indir
   837  001176                     u1949:
   838                           
   839                           ;main.c: 56: I2C1.WriteArray(0x38,0x0F,&TxData,1);
   840  001176  D801               	call	u1958
   841  001178  D01F               	goto	u1959
   842  00117A                     u1958:
   843  00117A  0005               	push	
   844  00117C  6EFA               	movwf	pclath,c
   845  00117E  0100               	movlb	0	; () banked
   846  001180  0100               	movlb	0	; () banked
   847  001182  5186               	movf	(_I2C1+4)& (0+255),w,b
   848  001184  6EFD               	movwf	tosl,c
   849  001186  0100               	movlb	0	; () banked
   850  001188  5187               	movf	(_I2C1+5)& (0+255),w,b
   851  00118A  6EFE               	movwf	tosh,c
   852  00118C  6AFF               	clrf	tosu,c
   853  00118E  50FA               	movf	pclath,w,c
   854  001190  0100               	movlb	0	; () banked
   855  001192  6F9C               	movwf	??_main& (0+255),b
   856  001194  0E0F               	movlw	15
   857  001196  6E22               	movwf	WriteArray@RegisterAdd,c
   858  001198  0100               	movlb	0	; () banked
   859  00119A  519C               	movf	??_main& (0+255),w,b
   860  00119C  0100               	movlb	0	; () banked
   861  00119E  0E00               	movlw	high main@TxData
   862  0011A0  6E24               	movwf	WriteArray@RegisterValue+1,c
   863  0011A2  0100               	movlb	0	; () banked
   864  0011A4  0E9F               	movlw	low main@TxData
   865  0011A6  6E23               	movwf	WriteArray@RegisterValue,c
   866  0011A8  0100               	movlb	0	; () banked
   867  0011AA  6F9D               	movwf	(??_main+1)& (0+255),b
   868  0011AC  0E01               	movlw	1
   869  0011AE  6E25               	movwf	WriteArray@length,c
   870  0011B0  0100               	movlb	0	; () banked
   871  0011B2  519D               	movf	(??_main+1)& (0+255),w,b
   872  0011B4  0E38               	movlw	56
   873  0011B6  0012               	return		;indir
   874  0011B8                     u1959:
   875                           
   876                           ;main.c: 57: I2C1.ReadArray(0x38,0x0F,&TxData,1);
   877  0011B8  D801               	call	u1968
   878  0011BA  D01F               	goto	l2168
   879  0011BC                     u1968:
   880  0011BC  0005               	push	
   881  0011BE  6EFA               	movwf	pclath,c
   882  0011C0  0100               	movlb	0	; () banked
   883  0011C2  0100               	movlb	0	; () banked
   884  0011C4  5184               	movf	(_I2C1+2)& (0+255),w,b
   885  0011C6  6EFD               	movwf	tosl,c
   886  0011C8  0100               	movlb	0	; () banked
   887  0011CA  5185               	movf	(_I2C1+3)& (0+255),w,b
   888  0011CC  6EFE               	movwf	tosh,c
   889  0011CE  6AFF               	clrf	tosu,c
   890  0011D0  50FA               	movf	pclath,w,c
   891  0011D2  0100               	movlb	0	; () banked
   892  0011D4  6F9C               	movwf	??_main& (0+255),b
   893  0011D6  0E0F               	movlw	15
   894  0011D8  6E25               	movwf	ReadArray@RegisterAdd,c
   895  0011DA  0100               	movlb	0	; () banked
   896  0011DC  519C               	movf	??_main& (0+255),w,b
   897  0011DE  0100               	movlb	0	; () banked
   898  0011E0  0E00               	movlw	high main@TxData
   899  0011E2  6E27               	movwf	ReadArray@RegisterValue+1,c
   900  0011E4  0100               	movlb	0	; () banked
   901  0011E6  0E9F               	movlw	low main@TxData
   902  0011E8  6E26               	movwf	ReadArray@RegisterValue,c
   903  0011EA  0100               	movlb	0	; () banked
   904  0011EC  6F9D               	movwf	(??_main+1)& (0+255),b
   905  0011EE  0E01               	movlw	1
   906  0011F0  6E28               	movwf	ReadArray@length,c
   907  0011F2  0100               	movlb	0	; () banked
   908  0011F4  519D               	movf	(??_main+1)& (0+255),w,b
   909  0011F6  0E38               	movlw	56
   910  0011F8  0012               	return		;indir
   911  0011FA                     l2168:
   912                           
   913                           ;main.c: 61: {
   914                           ;main.c: 62: if(INTCONbits.TMR0IF)
   915  0011FA  A4F2               	btfss	intcon,2,c	;volatile
   916  0011FC  D7FE               	goto	l2168
   917                           
   918                           ;main.c: 63: {
   919                           ;main.c: 64: INTCONbits.TMR0IF=0;
   920  0011FE  94F2               	bcf	intcon,2,c	;volatile
   921                           
   922                           ;main.c: 65: Serial2.SendArray(&AccelID,1);
   923  001200  0100               	movlb	0	; () banked
   924  001202  0E00               	movlw	high main@AccelID
   925  001204  6E21               	movwf	SendArray2@ArrayData+1,c
   926  001206  0100               	movlb	0	; () banked
   927  001208  0E9E               	movlw	low main@AccelID
   928  00120A  6E20               	movwf	SendArray2@ArrayData,c
   929  00120C  0100               	movlb	0	; () banked
   930  00120E  6F9C               	movwf	??_main& (0+255),b
   931  001210  0E01               	movlw	1
   932  001212  6E22               	movwf	SendArray2@length,c
   933  001214  0100               	movlb	0	; () banked
   934  001216  519C               	movf	??_main& (0+255),w,b
   935  001218  D801               	call	u1988
   936  00121A  D00C               	goto	u1989
   937  00121C                     u1988:
   938  00121C  0005               	push	
   939  00121E  6EFA               	movwf	pclath,c
   940  001220  0100               	movlb	0	; () banked
   941  001222  0100               	movlb	0	; () banked
   942  001224  517A               	movf	(_Serial2+4)& (0+255),w,b
   943  001226  6EFD               	movwf	tosl,c
   944  001228  0100               	movlb	0	; () banked
   945  00122A  517B               	movf	(_Serial2+5)& (0+255),w,b
   946  00122C  6EFE               	movwf	tosh,c
   947  00122E  6AFF               	clrf	tosu,c
   948  001230  50FA               	movf	pclath,w,c
   949  001232  0012               	return		;indir
   950  001234                     u1989:
   951                           
   952                           ;main.c: 66: Serial2.SendArray(&TxData,1);
   953  001234  0100               	movlb	0	; () banked
   954  001236  0E00               	movlw	high main@TxData
   955  001238  6E21               	movwf	SendArray2@ArrayData+1,c
   956  00123A  0100               	movlb	0	; () banked
   957  00123C  0E9F               	movlw	low main@TxData
   958  00123E  6E20               	movwf	SendArray2@ArrayData,c
   959  001240  0100               	movlb	0	; () banked
   960  001242  6F9C               	movwf	??_main& (0+255),b
   961  001244  0E01               	movlw	1
   962  001246  6E22               	movwf	SendArray2@length,c
   963  001248  0100               	movlb	0	; () banked
   964  00124A  519C               	movf	??_main& (0+255),w,b
   965  00124C  D801               	call	u1998
   966  00124E  D7D5               	goto	l2168
   967  001250                     u1998:
   968  001250  0005               	push	
   969  001252  6EFA               	movwf	pclath,c
   970  001254  0100               	movlb	0	; () banked
   971  001256  0100               	movlb	0	; () banked
   972  001258  517A               	movf	(_Serial2+4)& (0+255),w,b
   973  00125A  6EFD               	movwf	tosl,c
   974  00125C  0100               	movlb	0	; () banked
   975  00125E  517B               	movf	(_Serial2+5)& (0+255),w,b
   976  001260  6EFE               	movwf	tosh,c
   977  001262  6AFF               	clrf	tosu,c
   978  001264  50FA               	movf	pclath,w,c
   979  001266  0012               	return		;indir
   980  001268                     __end_of_main:
   981                           	opt stack 0
   982                           tosu	equ	0xFFF
   983                           tosh	equ	0xFFE
   984                           tosl	equ	0xFFD
   985                           pclath	equ	0xFFA
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           postdec1	equ	0xFE5
   993                           fsr1l	equ	0xFE1
   994                           
   995 ;; *************** function _WriteArray *****************
   996 ;; Defined at:
   997 ;;		line 36 in file "EAB_I2C.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  DeviceAdd       1    wreg     unsigned char 
  1000 ;;  RegisterAdd     1   33[COMRAM] unsigned char 
  1001 ;;  RegisterValu    2   34[COMRAM] PTR unsigned char 
  1002 ;;		 -> main@TxData(1), 
  1003 ;;  length          1   36[COMRAM] unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  DeviceAdd       1   39[COMRAM] unsigned char 
  1006 ;;  ComRes          1   40[COMRAM] char 
  1007 ;;  data            1   38[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      unsigned char 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;Total ram usage:        8 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    3
  1024 ;; This function calls:
  1025 ;;		_WriteI2C1
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text1
  1032  001668                     __ptext1:
  1033                           	opt stack 0
  1034  001668                     _WriteArray:
  1035                           	opt stack 27
  1036                           
  1037                           ;incstack = 0
  1038                           ;WriteArray@DeviceAdd stored from wreg
  1039  001668  CFE8 F028          	movff	wreg,WriteArray@DeviceAdd
  1040  00166C  5028               	movf	WriteArray@DeviceAdd,w,c
  1041  00166E  2428               	addwf	WriteArray@DeviceAdd,w,c
  1042  001670  6E28               	movwf	WriteArray@DeviceAdd,c
  1043  001672  80C5               	bsf	4037,0,c	;volatile
  1044  001674                     l69:
  1045  001674  B0C5               	btfsc	4037,0,c	;volatile
  1046  001676  D7FE               	goto	l69
  1047  001678                     l1850:
  1048  001678  A4C7               	btfss	4039,2,c	;volatile
  1049  00167A  D003               	goto	u1160
  1050  00167C  6A26               	clrf	??_WriteArray& (0+255),c
  1051  00167E  2A26               	incf	??_WriteArray& (0+255),f,c
  1052  001680  D001               	goto	u1168
  1053  001682                     u1160:
  1054  001682  6A26               	clrf	??_WriteArray& (0+255),c
  1055  001684                     u1168:
  1056  001684  50C5               	movf	4037,w,c	;volatile
  1057  001686  0B1F               	andlw	31
  1058  001688  1026               	iorwf	??_WriteArray,w,c
  1059  00168A  0900               	iorlw	0
  1060  00168C  A4D8               	btfss	status,2,c
  1061  00168E  D7F4               	goto	l1850
  1062  001690  CFC9 F027          	movff	4041,WriteArray@data	;volatile
  1063  001694                     l1852:
  1064  001694  5028               	movf	WriteArray@DeviceAdd,w,c
  1065  001696  ECE2  F00B         	call	_WriteI2C1
  1066  00169A  6E29               	movwf	WriteArray@ComRes,c
  1067  00169C  2829               	incf	WriteArray@ComRes,w,c
  1068  00169E  A4D8               	btfss	status,2,c
  1069  0016A0  D004               	goto	l1858
  1070  0016A2  CFC9 F027          	movff	4041,WriteArray@data	;volatile
  1071  0016A6  9EC6               	bcf	4038,7,c	;volatile
  1072  0016A8  D004               	goto	l77
  1073  0016AA                     l1858:
  1074  0016AA  5029               	movf	WriteArray@ComRes,w,c
  1075  0016AC  0AFE               	xorlw	254
  1076  0016AE  B4D8               	btfsc	status,2,c
  1077  0016B0  0012               	return	
  1078  0016B2                     l77:
  1079  0016B2  6629               	tstfsz	WriteArray@ComRes,c
  1080  0016B4  D7EF               	goto	l1852
  1081  0016B6                     l1862:
  1082  0016B6  5022               	movf	WriteArray@RegisterAdd,w,c
  1083  0016B8  ECE2  F00B         	call	_WriteI2C1
  1084  0016BC  6E29               	movwf	WriteArray@ComRes,c
  1085  0016BE  2829               	incf	WriteArray@ComRes,w,c
  1086  0016C0  A4D8               	btfss	status,2,c
  1087  0016C2  D004               	goto	l1868
  1088  0016C4  CFC9 F027          	movff	4041,WriteArray@data	;volatile
  1089  0016C8  9EC6               	bcf	4038,7,c	;volatile
  1090  0016CA  D004               	goto	l83
  1091  0016CC                     l1868:
  1092  0016CC  5029               	movf	WriteArray@ComRes,w,c
  1093  0016CE  0AFE               	xorlw	254
  1094  0016D0  B4D8               	btfsc	status,2,c
  1095  0016D2  0012               	return	
  1096  0016D4                     l83:
  1097  0016D4  6629               	tstfsz	WriteArray@ComRes,c
  1098  0016D6  D7EF               	goto	l1862
  1099  0016D8  D017               	goto	L1
  1100  0016DA                     l1872:
  1101  0016DA  C023  FFD9         	movff	WriteArray@RegisterValue,fsr2l
  1102  0016DE  C024  FFDA         	movff	WriteArray@RegisterValue+1,fsr2h
  1103  0016E2  50DF               	movf	indf2,w,c
  1104  0016E4  ECE2  F00B         	call	_WriteI2C1
  1105  0016E8  6E29               	movwf	WriteArray@ComRes,c
  1106  0016EA  2829               	incf	WriteArray@ComRes,w,c
  1107  0016EC  A4D8               	btfss	status,2,c
  1108  0016EE  D004               	goto	l1878
  1109  0016F0  CFC9 F027          	movff	4041,WriteArray@data	;volatile
  1110  0016F4  9EC6               	bcf	4038,7,c	;volatile
  1111  0016F6  D004               	goto	l90
  1112  0016F8                     l1878:
  1113  0016F8  5029               	movf	WriteArray@ComRes,w,c
  1114  0016FA  0AFE               	xorlw	254
  1115  0016FC  B4D8               	btfsc	status,2,c
  1116  0016FE  0012               	return	
  1117  001700                     l90:
  1118  001700  6629               	tstfsz	WriteArray@ComRes,c
  1119  001702  D7EB               	goto	l1872
  1120  001704  4A23               	infsnz	WriteArray@RegisterValue,f,c
  1121  001706  2A24               	incf	WriteArray@RegisterValue+1,f,c
  1122  001708                     L1:
  1123  001708  0625               	decf	WriteArray@length,f,c
  1124  00170A  2825               	incf	WriteArray@length& (0+255),w,c
  1125  00170C  A4D8               	btfss	status,2,c
  1126  00170E  D7E5               	goto	l1872
  1127  001710  84C5               	bsf	4037,2,c	;volatile
  1128  001712                     l94:
  1129  001712  A4C5               	btfss	4037,2,c	;volatile
  1130                           
  1131                           ;	Return value of _WriteArray is never used
  1132  001714  0012               	return	
  1133  001716  D7FD               	goto	l94
  1134  001718                     __end_of_WriteArray:
  1135                           	opt stack 0
  1136                           tosu	equ	0xFFF
  1137                           tosh	equ	0xFFE
  1138                           tosl	equ	0xFFD
  1139                           pclath	equ	0xFFA
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           intcon	equ	0xFF2
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec1	equ	0xFE5
  1148                           fsr1l	equ	0xFE1
  1149                           indf2	equ	0xFDF
  1150                           fsr2h	equ	0xFDA
  1151                           fsr2l	equ	0xFD9
  1152                           status	equ	0xFD8
  1153                           
  1154 ;; *************** function _SetTimer0_1Sec *****************
  1155 ;; Defined at:
  1156 ;;		line 54 in file "EAB_Timer.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      unsigned char 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text2
  1185  001A1C                     __ptext2:
  1186                           	opt stack 0
  1187  001A1C                     _SetTimer0_1Sec:
  1188                           	opt stack 28
  1189                           
  1190                           ;incstack = 0
  1191  001A1C  503E               	movf	_OscFreqIndex,w,c
  1192  001A1E  0D01               	mullw	1
  1193  001A20  0E29               	movlw	low _TIMER0_1Sec
  1194  001A22  24F3               	addwf	prodl,w,c
  1195  001A24  6EF6               	movwf	tblptrl,c
  1196  001A26  0E10               	movlw	high _TIMER0_1Sec
  1197  001A28  20F4               	addwfc	prodh,w,c
  1198  001A2A  6EF7               	movwf	tblptrh,c
  1199  001A2C  6AF8               	clrf	tblptru,c
  1200  001A2E  0E00               	movlw	low (__mediumconst shr (0+16))
  1201  001A30  22F8               	addwfc	tblptru,f,c
  1202  001A32  0008               	tblrd		*
  1203  001A34  CFF5 FFD5          	movff	tablat,4053	;volatile
  1204  001A38  0012               	return	
  1205  001A3A                     __end_of_SetTimer0_1Sec:
  1206                           	opt stack 0
  1207                           tosu	equ	0xFFF
  1208                           tosh	equ	0xFFE
  1209                           tosl	equ	0xFFD
  1210                           pclath	equ	0xFFA
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           prodh	equ	0xFF4
  1216                           prodl	equ	0xFF3
  1217                           intcon	equ	0xFF2
  1218                           postinc0	equ	0xFEE
  1219                           wreg	equ	0xFE8
  1220                           postdec1	equ	0xFE5
  1221                           fsr1l	equ	0xFE1
  1222                           indf2	equ	0xFDF
  1223                           fsr2h	equ	0xFDA
  1224                           fsr2l	equ	0xFD9
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function _SetFreq_8MHZ *****************
  1228 ;; Defined at:
  1229 ;;		line 85 in file "EAB_Oscillator.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    2
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text3
  1258  0019FA                     __ptext3:
  1259                           	opt stack 0
  1260  0019FA                     _SetFreq_8MHZ:
  1261                           	opt stack 28
  1262                           
  1263                           ;incstack = 0
  1264  0019FA  50D3               	movf	4051,w,c	;volatile
  1265  0019FC  0B8C               	andlw	140
  1266  0019FE  0962               	iorlw	98
  1267  001A00  6ED3               	movwf	4051,c	;volatile
  1268  001A02  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
  1269  001A04  0E06               	movlw	6
  1270  001A06  6E3E               	movwf	_OscFreqIndex,c
  1271  001A08  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
  1272  001A0A  0E00               	movlw	0
  1273  001A0C  6E3A               	movwf	_OscFreq,c
  1274  001A0E  0E12               	movlw	18
  1275  001A10  6E3B               	movwf	_OscFreq+1,c
  1276  001A12  0E7A               	movlw	122
  1277  001A14  6E3C               	movwf	_OscFreq+2,c
  1278  001A16  0E00               	movlw	0
  1279  001A18  6E3D               	movwf	_OscFreq+3,c
  1280  001A1A  0012               	return	
  1281  001A1C                     __end_of_SetFreq_8MHZ:
  1282                           	opt stack 0
  1283                           tosu	equ	0xFFF
  1284                           tosh	equ	0xFFE
  1285                           tosl	equ	0xFFD
  1286                           pclath	equ	0xFFA
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1l	equ	0xFE1
  1298                           indf2	equ	0xFDF
  1299                           fsr2h	equ	0xFDA
  1300                           fsr2l	equ	0xFD9
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function _SendArray1 *****************
  1304 ;; Defined at:
  1305 ;;		line 101 in file "EAB_Serial.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  ArrayData       2   31[COMRAM] PTR unsigned char 
  1308 ;;		 -> main@TxData(1), main@AccelID(1), 
  1309 ;;  length          1   33[COMRAM] unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      unsigned char 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    2
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text4
  1336  0019AE                     __ptext4:
  1337                           	opt stack 0
  1338  0019AE                     _SendArray1:
  1339                           	opt stack 28
  1340                           
  1341                           ;incstack = 0
  1342  0019AE  5022               	movf	SendArray1@length,w,c
  1343  0019B0  B4D8               	btfsc	status,2,c
  1344  0019B2  0012               	return	
  1345  0019B4  D00A               	goto	l2074
  1346  0019B6                     l322:
  1347  0019B6  A2AC               	btfss	4012,1,c	;volatile
  1348  0019B8  D7FE               	goto	l322
  1349  0019BA  C020  FFD9         	movff	SendArray1@ArrayData,fsr2l
  1350  0019BE  C021  FFDA         	movff	SendArray1@ArrayData+1,fsr2h
  1351  0019C2  50DF               	movf	indf2,w,c
  1352  0019C4  6EAD               	movwf	4013,c	;volatile
  1353  0019C6  4A20               	infsnz	SendArray1@ArrayData,f,c
  1354  0019C8  2A21               	incf	SendArray1@ArrayData+1,f,c
  1355  0019CA                     l2074:
  1356  0019CA  0622               	decf	SendArray1@length,f,c
  1357  0019CC  2822               	incf	SendArray1@length& (0+255),w,c
  1358  0019CE  B4D8               	btfsc	status,2,c
  1359                           
  1360                           ;	Return value of _SendArray1 is never used
  1361                           
  1362                           ;	Return value of _SendArray1 is never used
  1363  0019D0  0012               	return	
  1364  0019D2  D7F1               	goto	l322
  1365  0019D4                     __end_of_SendArray1:
  1366                           	opt stack 0
  1367                           tosu	equ	0xFFF
  1368                           tosh	equ	0xFFE
  1369                           tosl	equ	0xFFD
  1370                           pclath	equ	0xFFA
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           prodh	equ	0xFF4
  1376                           prodl	equ	0xFF3
  1377                           intcon	equ	0xFF2
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           postdec1	equ	0xFE5
  1381                           fsr1l	equ	0xFE1
  1382                           indf2	equ	0xFDF
  1383                           fsr2h	equ	0xFDA
  1384                           fsr2l	equ	0xFD9
  1385                           status	equ	0xFD8
  1386                           
  1387 ;; *************** function _SendArray2 *****************
  1388 ;; Defined at:
  1389 ;;		line 119 in file "EAB_Serial.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  ArrayData       2   31[COMRAM] PTR unsigned char 
  1392 ;;		 -> main@TxData(1), main@AccelID(1), 
  1393 ;;  length          1   33[COMRAM] unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:        3 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    2
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text5
  1420  0019D4                     __ptext5:
  1421                           	opt stack 0
  1422  0019D4                     _SendArray2:
  1423                           	opt stack 28
  1424                           
  1425                           ;incstack = 0
  1426  0019D4  5022               	movf	SendArray2@length,w,c
  1427  0019D6  B4D8               	btfsc	status,2,c
  1428  0019D8  0012               	return	
  1429  0019DA  D00A               	goto	l2086
  1430  0019DC                     l333:
  1431  0019DC  A272               	btfss	3954,1,c	;volatile
  1432  0019DE  D7FE               	goto	l333
  1433  0019E0  C020  FFD9         	movff	SendArray2@ArrayData,fsr2l
  1434  0019E4  C021  FFDA         	movff	SendArray2@ArrayData+1,fsr2h
  1435  0019E8  50DF               	movf	indf2,w,c
  1436  0019EA  6E73               	movwf	3955,c	;volatile
  1437  0019EC  4A20               	infsnz	SendArray2@ArrayData,f,c
  1438  0019EE  2A21               	incf	SendArray2@ArrayData+1,f,c
  1439  0019F0                     l2086:
  1440  0019F0  0622               	decf	SendArray2@length,f,c
  1441  0019F2  2822               	incf	SendArray2@length& (0+255),w,c
  1442  0019F4  B4D8               	btfsc	status,2,c
  1443                           
  1444                           ;	Return value of _SendArray2 is never used
  1445                           
  1446                           ;	Return value of _SendArray2 is never used
  1447  0019F6  0012               	return	
  1448  0019F8  D7F1               	goto	l333
  1449  0019FA                     __end_of_SendArray2:
  1450                           	opt stack 0
  1451                           tosu	equ	0xFFF
  1452                           tosh	equ	0xFFE
  1453                           tosl	equ	0xFFD
  1454                           pclath	equ	0xFFA
  1455                           tblptru	equ	0xFF8
  1456                           tblptrh	equ	0xFF7
  1457                           tblptrl	equ	0xFF6
  1458                           tablat	equ	0xFF5
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           intcon	equ	0xFF2
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           indf2	equ	0xFDF
  1467                           fsr2h	equ	0xFDA
  1468                           fsr2l	equ	0xFD9
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _ReadArray *****************
  1472 ;; Defined at:
  1473 ;;		line 89 in file "EAB_I2C.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  DeviceAdd       1    wreg     unsigned char 
  1476 ;;  RegisterAdd     1   36[COMRAM] unsigned char 
  1477 ;;  RegisterValu    2   37[COMRAM] PTR unsigned char 
  1478 ;;		 -> main@TxData(1), main@AccelID(1), 
  1479 ;;  length          1   39[COMRAM] unsigned char 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  DeviceAdd       1   42[COMRAM] unsigned char 
  1482 ;;  ComRes          1   44[COMRAM] char 
  1483 ;;  DeviceAddr      1   43[COMRAM] unsigned char 
  1484 ;;  data            1   41[COMRAM] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      unsigned char 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        9 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    4
  1501 ;; This function calls:
  1502 ;;		_WriteI2C1
  1503 ;;		_getsI2C1
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text6
  1510  0013B4                     __ptext6:
  1511                           	opt stack 0
  1512  0013B4                     _ReadArray:
  1513                           	opt stack 26
  1514                           
  1515                           ;incstack = 0
  1516                           ;ReadArray@DeviceAdd stored from wreg
  1517  0013B4  CFE8 F02B          	movff	wreg,ReadArray@DeviceAdd
  1518  0013B8  502B               	movf	ReadArray@DeviceAdd,w,c
  1519  0013BA  242B               	addwf	ReadArray@DeviceAdd,w,c
  1520  0013BC  6E2C               	movwf	ReadArray@DeviceAddr,c
  1521  0013BE  80C5               	bsf	4037,0,c	;volatile
  1522  0013C0                     l99:
  1523  0013C0  B0C5               	btfsc	4037,0,c	;volatile
  1524  0013C2  D7FE               	goto	l99
  1525  0013C4                     l1934:
  1526  0013C4  A4C7               	btfss	4039,2,c	;volatile
  1527  0013C6  D003               	goto	u1420
  1528  0013C8  6A29               	clrf	??_ReadArray& (0+255),c
  1529  0013CA  2A29               	incf	??_ReadArray& (0+255),f,c
  1530  0013CC  D001               	goto	u1428
  1531  0013CE                     u1420:
  1532  0013CE  6A29               	clrf	??_ReadArray& (0+255),c
  1533  0013D0                     u1428:
  1534  0013D0  50C5               	movf	4037,w,c	;volatile
  1535  0013D2  0B1F               	andlw	31
  1536  0013D4  1029               	iorwf	??_ReadArray,w,c
  1537  0013D6  0900               	iorlw	0
  1538  0013D8  A4D8               	btfss	status,2,c
  1539  0013DA  D7F4               	goto	l1934
  1540  0013DC  CFC9 F02A          	movff	4041,ReadArray@data	;volatile
  1541  0013E0                     l1936:
  1542  0013E0  502C               	movf	ReadArray@DeviceAddr,w,c
  1543  0013E2  ECE2  F00B         	call	_WriteI2C1
  1544  0013E6  6E2D               	movwf	ReadArray@ComRes,c
  1545  0013E8  282D               	incf	ReadArray@ComRes,w,c
  1546  0013EA  A4D8               	btfss	status,2,c
  1547  0013EC  D004               	goto	l1942
  1548  0013EE  CFC9 F02A          	movff	4041,ReadArray@data	;volatile
  1549  0013F2  9EC6               	bcf	4038,7,c	;volatile
  1550  0013F4  D004               	goto	l107
  1551  0013F6                     l1942:
  1552  0013F6  502D               	movf	ReadArray@ComRes,w,c
  1553  0013F8  0AFE               	xorlw	254
  1554  0013FA  B4D8               	btfsc	status,2,c
  1555  0013FC  0012               	return	
  1556  0013FE                     l107:
  1557  0013FE  662D               	tstfsz	ReadArray@ComRes,c
  1558  001400  D7EF               	goto	l1936
  1559  001402                     l1946:
  1560  001402  5025               	movf	ReadArray@RegisterAdd,w,c
  1561  001404  ECE2  F00B         	call	_WriteI2C1
  1562  001408  6E2D               	movwf	ReadArray@ComRes,c
  1563  00140A  282D               	incf	ReadArray@ComRes,w,c
  1564  00140C  A4D8               	btfss	status,2,c
  1565  00140E  D004               	goto	l1952
  1566  001410  CFC9 F02A          	movff	4041,ReadArray@data	;volatile
  1567  001414  9EC6               	bcf	4038,7,c	;volatile
  1568  001416  D004               	goto	l113
  1569  001418                     l1952:
  1570  001418  502D               	movf	ReadArray@ComRes,w,c
  1571  00141A  0AFE               	xorlw	254
  1572  00141C  B4D8               	btfsc	status,2,c
  1573  00141E  0012               	return	
  1574  001420                     l113:
  1575  001420  662D               	tstfsz	ReadArray@ComRes,c
  1576  001422  D7EF               	goto	l1946
  1577  001424                     l1956:
  1578  001424  A4C7               	btfss	4039,2,c	;volatile
  1579  001426  D003               	goto	u1500
  1580  001428  6A29               	clrf	??_ReadArray& (0+255),c
  1581  00142A  2A29               	incf	??_ReadArray& (0+255),f,c
  1582  00142C  D001               	goto	u1508
  1583  00142E                     u1500:
  1584  00142E  6A29               	clrf	??_ReadArray& (0+255),c
  1585  001430                     u1508:
  1586  001430  50C5               	movf	4037,w,c	;volatile
  1587  001432  0B1F               	andlw	31
  1588  001434  1029               	iorwf	??_ReadArray,w,c
  1589  001436  0900               	iorlw	0
  1590  001438  A4D8               	btfss	status,2,c
  1591  00143A  D7F4               	goto	l1956
  1592  00143C  80D8               	bsf	status,0,c
  1593  00143E  342B               	rlcf	ReadArray@DeviceAdd,w,c
  1594  001440  6E2C               	movwf	ReadArray@DeviceAddr,c
  1595  001442  82C5               	bsf	4037,1,c	;volatile
  1596  001444                     l119:
  1597  001444  B2C5               	btfsc	4037,1,c	;volatile
  1598  001446  D7FE               	goto	l119
  1599  001448                     l1962:
  1600  001448  A4C7               	btfss	4039,2,c	;volatile
  1601  00144A  D003               	goto	u1530
  1602  00144C  6A29               	clrf	??_ReadArray& (0+255),c
  1603  00144E  2A29               	incf	??_ReadArray& (0+255),f,c
  1604  001450  D001               	goto	u1538
  1605  001452                     u1530:
  1606  001452  6A29               	clrf	??_ReadArray& (0+255),c
  1607  001454                     u1538:
  1608  001454  50C5               	movf	4037,w,c	;volatile
  1609  001456  0B1F               	andlw	31
  1610  001458  1029               	iorwf	??_ReadArray,w,c
  1611  00145A  0900               	iorlw	0
  1612  00145C  A4D8               	btfss	status,2,c
  1613  00145E  D7F4               	goto	l1962
  1614  001460  CFC9 F02A          	movff	4041,ReadArray@data	;volatile
  1615  001464                     l1964:
  1616  001464  502C               	movf	ReadArray@DeviceAddr,w,c
  1617  001466  ECE2  F00B         	call	_WriteI2C1
  1618  00146A  6E2D               	movwf	ReadArray@ComRes,c
  1619  00146C  282D               	incf	ReadArray@ComRes,w,c
  1620  00146E  A4D8               	btfss	status,2,c
  1621  001470  D004               	goto	l1970
  1622  001472  CFC9 F02A          	movff	4041,ReadArray@data	;volatile
  1623  001476  9EC6               	bcf	4038,7,c	;volatile
  1624  001478  D004               	goto	l127
  1625  00147A                     l1970:
  1626  00147A  502D               	movf	ReadArray@ComRes,w,c
  1627  00147C  0AFE               	xorlw	254
  1628  00147E  B4D8               	btfsc	status,2,c
  1629  001480  0012               	return	
  1630  001482                     l127:
  1631  001482  662D               	tstfsz	ReadArray@ComRes,c
  1632  001484  D7EF               	goto	l1964
  1633  001486                     l1974:
  1634  001486  C027  F022         	movff	ReadArray@RegisterValue+1,getsI2C1@rdptr+1
  1635  00148A  C026  F021         	movff	ReadArray@RegisterValue,getsI2C1@rdptr
  1636  00148E  C028  F023         	movff	ReadArray@length,getsI2C1@length
  1637  001492  EC5D  F00C         	call	_getsI2C1	;wreg free
  1638  001496  0900               	iorlw	0
  1639  001498  A4D8               	btfss	status,2,c
  1640  00149A  D7F5               	goto	l1974
  1641  00149C  8AC5               	bsf	4037,5,c	;volatile
  1642  00149E  88C5               	bsf	4037,4,c	;volatile
  1643  0014A0                     l133:
  1644  0014A0  B8C5               	btfsc	4037,4,c	;volatile
  1645  0014A2  D7FE               	goto	l133
  1646  0014A4                     l136:
  1647  0014A4  B8C5               	btfsc	4037,4,c	;volatile
  1648  0014A6  D7FE               	goto	l136
  1649  0014A8  84C5               	bsf	4037,2,c	;volatile
  1650  0014AA                     l139:
  1651  0014AA  A4C5               	btfss	4037,2,c	;volatile
  1652                           
  1653                           ;	Return value of _ReadArray is never used
  1654  0014AC  0012               	return	
  1655  0014AE  D7FD               	goto	l139
  1656  0014B0                     __end_of_ReadArray:
  1657                           	opt stack 0
  1658                           tosu	equ	0xFFF
  1659                           tosh	equ	0xFFE
  1660                           tosl	equ	0xFFD
  1661                           pclath	equ	0xFFA
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _getsI2C1 *****************
  1679 ;; Defined at:
  1680 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\i2c\i2c1gets.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  rdptr           2   32[COMRAM] PTR unsigned char 
  1683 ;;		 -> main@TxData(1), main@AccelID(1), 
  1684 ;;  length          1   34[COMRAM] unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      char 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:        4 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		_ReadI2C1
  1705 ;; This function is called by:
  1706 ;;		_ReadArray
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text7
  1711  0018BA                     __ptext7:
  1712                           	opt stack 0
  1713  0018BA                     _getsI2C1:
  1714                           	opt stack 26
  1715                           
  1716                           ;incstack = 0
  1717  0018BA  D026               	goto	l1994
  1718  0018BC                     l1978:
  1719  0018BC  ECC3  F00C         	call	_ReadI2C1	;wreg free
  1720  0018C0  C021  FFD9         	movff	getsI2C1@rdptr,fsr2l
  1721  0018C4  C022  FFDA         	movff	getsI2C1@rdptr+1,fsr2h
  1722  0018C8  6EDF               	movwf	indf2,c
  1723  0018CA  4A21               	infsnz	getsI2C1@rdptr,f,c
  1724  0018CC  2A22               	incf	getsI2C1@rdptr+1,f,c
  1725  0018CE                     l495:
  1726  0018CE  B6C5               	btfsc	4037,3,c	;volatile
  1727  0018D0  D7FE               	goto	l495
  1728  0018D2  A6A1               	btfss	4001,3,c	;volatile
  1729  0018D4  D002               	goto	l1986
  1730  0018D6  0EFF               	movlw	255
  1731  0018D8  0012               	return	
  1732  0018DA                     l1986:
  1733  0018DA  CFC6 F024          	movff	4038,??_getsI2C1	;volatile
  1734  0018DE  0E0F               	movlw	15
  1735  0018E0  1624               	andwf	??_getsI2C1,f,c
  1736  0018E2  5024               	movf	??_getsI2C1,w,c
  1737  0018E4  0A08               	xorlw	8
  1738  0018E6  B4D8               	btfsc	status,2,c
  1739  0018E8  D008               	goto	l1990
  1740  0018EA  CFC6 F024          	movff	4038,??_getsI2C1	;volatile
  1741  0018EE  0E0F               	movlw	15
  1742  0018F0  1624               	andwf	??_getsI2C1,f,c
  1743  0018F2  5024               	movf	??_getsI2C1,w,c
  1744  0018F4  0A0B               	xorlw	11
  1745  0018F6  A4D8               	btfss	status,2,c
  1746  0018F8  D007               	goto	l1994
  1747  0018FA                     l1990:
  1748  0018FA  5023               	movf	getsI2C1@length,w,c
  1749  0018FC  B4D8               	btfsc	status,2,c
  1750  0018FE  D004               	goto	l1994
  1751  001900  9AC5               	bcf	4037,5,c	;volatile
  1752  001902  88C5               	bsf	4037,4,c	;volatile
  1753  001904                     l504:
  1754  001904  B8C5               	btfsc	4037,4,c	;volatile
  1755  001906  D7FE               	goto	l504
  1756  001908                     l1994:
  1757  001908  0623               	decf	getsI2C1@length,f,c
  1758  00190A  2823               	incf	getsI2C1@length& (0+255),w,c
  1759  00190C  A4D8               	btfss	status,2,c
  1760  00190E  D7D6               	goto	l1978
  1761  001910  0E00               	movlw	0
  1762  001912  0012               	return	
  1763  001914                     __end_of_getsI2C1:
  1764                           	opt stack 0
  1765                           tosu	equ	0xFFF
  1766                           tosh	equ	0xFFE
  1767                           tosl	equ	0xFFD
  1768                           pclath	equ	0xFFA
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1l	equ	0xFE1
  1780                           indf2	equ	0xFDF
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _ReadI2C1 *****************
  1786 ;; Defined at:
  1787 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\i2c\i2c1read.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      unsigned char 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;Total ram usage:        1 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_getsI2C1
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text8
  1816  001986                     __ptext8:
  1817                           	opt stack 0
  1818  001986                     _ReadI2C1:
  1819                           	opt stack 26
  1820                           
  1821                           ;incstack = 0
  1822  001986  CFC6 F020          	movff	4038,??_ReadI2C1	;volatile
  1823  00198A  0E0F               	movlw	15
  1824  00198C  1620               	andwf	??_ReadI2C1,f,c
  1825  00198E  5020               	movf	??_ReadI2C1,w,c
  1826  001990  0A08               	xorlw	8
  1827  001992  B4D8               	btfsc	status,2,c
  1828  001994  D007               	goto	l529
  1829  001996  CFC6 F020          	movff	4038,??_ReadI2C1	;volatile
  1830  00199A  0E0F               	movlw	15
  1831  00199C  1620               	andwf	??_ReadI2C1,f,c
  1832  00199E  5020               	movf	??_ReadI2C1,w,c
  1833  0019A0  0A0B               	xorlw	11
  1834  0019A2  B4D8               	btfsc	status,2,c
  1835  0019A4                     l529:
  1836  0019A4  86C5               	bsf	4037,3,c	;volatile
  1837  0019A6                     l530:
  1838  0019A6  A0C7               	btfss	4039,0,c	;volatile
  1839  0019A8  D7FE               	goto	l530
  1840  0019AA  50C9               	movf	4041,w,c	;volatile
  1841  0019AC  0012               	return	
  1842  0019AE                     __end_of_ReadI2C1:
  1843                           	opt stack 0
  1844                           tosu	equ	0xFFF
  1845                           tosh	equ	0xFFE
  1846                           tosl	equ	0xFFD
  1847                           pclath	equ	0xFFA
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1l	equ	0xFE1
  1859                           indf2	equ	0xFDF
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _WriteI2C1 *****************
  1865 ;; Defined at:
  1866 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\i2c\i2c1writ.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  data_out        1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  data_out        1   32[COMRAM] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      char 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_WriteArray
  1891 ;;		_ReadArray
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text9
  1896  0017C4                     __ptext9:
  1897                           	opt stack 0
  1898  0017C4                     _WriteI2C1:
  1899                           	opt stack 27
  1900                           
  1901                           ;incstack = 0
  1902                           ;WriteI2C1@data_out stored from wreg
  1903  0017C4  CFE8 F021          	movff	wreg,WriteI2C1@data_out
  1904  0017C8  C021  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  1905  0017CC  AEC6               	btfss	4038,7,c	;volatile
  1906  0017CE  D002               	goto	l1896
  1907  0017D0  0EFF               	movlw	255
  1908  0017D2  0012               	return	
  1909  0017D4                     l1896:
  1910  0017D4  CFC6 F020          	movff	4038,??_WriteI2C1	;volatile
  1911  0017D8  0E0F               	movlw	15
  1912  0017DA  1620               	andwf	??_WriteI2C1,f,c
  1913  0017DC  5020               	movf	??_WriteI2C1,w,c
  1914  0017DE  0A08               	xorlw	8
  1915  0017E0  B4D8               	btfsc	status,2,c
  1916  0017E2  D012               	goto	l1914
  1917  0017E4  CFC6 F020          	movff	4038,??_WriteI2C1	;volatile
  1918  0017E8  0E0F               	movlw	15
  1919  0017EA  1620               	andwf	??_WriteI2C1,f,c
  1920  0017EC  5020               	movf	??_WriteI2C1,w,c
  1921  0017EE  0A0B               	xorlw	11
  1922  0017F0  B4D8               	btfsc	status,2,c
  1923  0017F2  D00A               	goto	l1914
  1924  0017F4  88C6               	bsf	4038,4,c	;volatile
  1925  0017F6                     l554:
  1926  0017F6  A69E               	btfss	3998,3,c	;volatile
  1927  0017F8  D7FE               	goto	l554
  1928  0017FA  A4C7               	btfss	4039,2,c	;volatile
  1929  0017FC  B0C7               	btfsc	4039,0,c	;volatile
  1930  0017FE  D002               	goto	l1910
  1931  001800  0EFE               	movlw	254
  1932  001802  0012               	return	
  1933  001804                     l1910:
  1934  001804  0E00               	movlw	0
  1935  001806  0012               	return	
  1936  001808                     l1914:
  1937  001808  CFC6 F020          	movff	4038,??_WriteI2C1	;volatile
  1938  00180C  0E0F               	movlw	15
  1939  00180E  1620               	andwf	??_WriteI2C1,f,c
  1940  001810  5020               	movf	??_WriteI2C1,w,c
  1941  001812  0A08               	xorlw	8
  1942  001814  B4D8               	btfsc	status,2,c
  1943  001816  D008               	goto	l563
  1944  001818  CFC6 F020          	movff	4038,??_WriteI2C1	;volatile
  1945  00181C  0E0F               	movlw	15
  1946  00181E  1620               	andwf	??_WriteI2C1,f,c
  1947  001820  5020               	movf	??_WriteI2C1,w,c
  1948  001822  0A0B               	xorlw	11
  1949  001824  A4D8               	btfss	status,2,c
  1950  001826  0012               	return	
  1951  001828                     l563:
  1952  001828  B0C7               	btfsc	4039,0,c	;volatile
  1953  00182A  D7FE               	goto	l563
  1954  00182C                     l1918:
  1955  00182C  A4C7               	btfss	4039,2,c	;volatile
  1956  00182E  D003               	goto	u1380
  1957  001830  6A20               	clrf	??_WriteI2C1& (0+255),c
  1958  001832  2A20               	incf	??_WriteI2C1& (0+255),f,c
  1959  001834  D001               	goto	u1388
  1960  001836                     u1380:
  1961  001836  6A20               	clrf	??_WriteI2C1& (0+255),c
  1962  001838                     u1388:
  1963  001838  50C5               	movf	4037,w,c	;volatile
  1964  00183A  0B1F               	andlw	31
  1965  00183C  1020               	iorwf	??_WriteI2C1,w,c
  1966  00183E  0900               	iorlw	0
  1967  001840  A4D8               	btfss	status,2,c
  1968  001842  D7F4               	goto	l1918
  1969  001844  ACC5               	btfss	4037,6,c	;volatile
  1970  001846  D002               	goto	l1926
  1971  001848  0EFE               	movlw	254
  1972  00184A  0012               	return	
  1973  00184C                     l1926:
  1974  00184C  0E00               	movlw	0
  1975  00184E  0012               	return	
  1976  001850                     __end_of_WriteI2C1:
  1977                           	opt stack 0
  1978                           tosu	equ	0xFFF
  1979                           tosh	equ	0xFFE
  1980                           tosl	equ	0xFFD
  1981                           pclath	equ	0xFFA
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           prodh	equ	0xFF4
  1987                           prodl	equ	0xFF3
  1988                           intcon	equ	0xFF2
  1989                           postinc0	equ	0xFEE
  1990                           wreg	equ	0xFE8
  1991                           postdec1	equ	0xFE5
  1992                           fsr1l	equ	0xFE1
  1993                           indf2	equ	0xFDF
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _Open1 *****************
  1999 ;; Defined at:
  2000 ;;		line 33 in file "EAB_Serial.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  BaudRate        4   40[COMRAM] long 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  freq            4   14[BANK0 ] long 
  2005 ;;  BRGval          2   18[BANK0 ] int 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      unsigned char 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;Total ram usage:       18 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    3
  2022 ;; This function calls:
  2023 ;;		_GetFreq
  2024 ;;		___aldiv
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text10
  2031  0014B0                     __ptext10:
  2032                           	opt stack 0
  2033  0014B0                     _Open1:
  2034                           	opt stack 27
  2035                           
  2036                           ;incstack = 0
  2037  0014B0  D801               	call	u2028
  2038  0014B2  D00C               	goto	u2029
  2039  0014B4                     u2028:
  2040  0014B4  0005               	push	
  2041  0014B6  6EFA               	movwf	pclath,c
  2042  0014B8  0100               	movlb	0	; () banked
  2043  0014BA  0100               	movlb	0	; () banked
  2044  0014BC  5174               	movf	(_Oscillator+20)& (0+255),w,b
  2045  0014BE  6EFD               	movwf	tosl,c
  2046  0014C0  0100               	movlb	0	; () banked
  2047  0014C2  5175               	movf	(_Oscillator+21)& (0+255),w,b
  2048  0014C4  6EFE               	movwf	tosh,c
  2049  0014C6  6AFF               	clrf	tosu,c
  2050  0014C8  50FA               	movf	pclath,w,c
  2051  0014CA  0012               	return		;indir
  2052  0014CC                     u2029:
  2053  0014CC  C020  F096         	movff	?_GetFreq,Open1@freq
  2054  0014D0  C021  F097         	movff	?_GetFreq+1,Open1@freq+1
  2055  0014D4  C022  F098         	movff	?_GetFreq+2,Open1@freq+2
  2056  0014D8  C023  F099         	movff	?_GetFreq+3,Open1@freq+3
  2057  0014DC  C096  F020         	movff	Open1@freq,___aldiv@dividend
  2058  0014E0  C097  F021         	movff	Open1@freq+1,___aldiv@dividend+1
  2059  0014E4  C098  F022         	movff	Open1@freq+2,___aldiv@dividend+2
  2060  0014E8  C099  F023         	movff	Open1@freq+3,___aldiv@dividend+3
  2061  0014EC  C029  F08E         	movff	Open1@BaudRate,??_Open1
  2062  0014F0  C02A  F08F         	movff	Open1@BaudRate+1,??_Open1+1
  2063  0014F4  C02B  F090         	movff	Open1@BaudRate+2,??_Open1+2
  2064  0014F8  C02C  F091         	movff	Open1@BaudRate+3,??_Open1+3
  2065  0014FC  0E02               	movlw	2
  2066  0014FE                     u2035:
  2067  0014FE  90D8               	bcf	status,0,c
  2068  001500  0100               	movlb	0	; () banked
  2069  001502  378E               	rlcf	??_Open1& (0+255),f,b
  2070  001504  378F               	rlcf	(??_Open1+1)& (0+255),f,b
  2071  001506  3790               	rlcf	(??_Open1+2)& (0+255),f,b
  2072  001508  3791               	rlcf	(??_Open1+3)& (0+255),f,b
  2073  00150A  2EE8               	decfsz	wreg,f,c
  2074  00150C  D7F8               	goto	u2035
  2075  00150E  C08E  F024         	movff	??_Open1,___aldiv@divisor
  2076  001512  C08F  F025         	movff	??_Open1+1,___aldiv@divisor+1
  2077  001516  C090  F026         	movff	??_Open1+2,___aldiv@divisor+2
  2078  00151A  C091  F027         	movff	??_Open1+3,___aldiv@divisor+3
  2079  00151E  EC34  F009         	call	___aldiv	;wreg free
  2080  001522  C020  F092         	movff	?___aldiv,??_Open1+4
  2081  001526  C021  F093         	movff	?___aldiv+1,??_Open1+5
  2082  00152A  C022  F094         	movff	?___aldiv+2,??_Open1+6
  2083  00152E  C023  F095         	movff	?___aldiv+3,??_Open1+7
  2084  001532  0EFF               	movlw	255
  2085  001534  0100               	movlb	0	; () banked
  2086  001536  2592               	addwf	(??_Open1+4)& (0+255),w,b
  2087  001538  0100               	movlb	0	; () banked
  2088  00153A  0100               	movlb	0	; () banked
  2089  00153C  6F9A               	movwf	Open1@BRGval& (0+255),b
  2090  00153E  0EFF               	movlw	255
  2091  001540  0100               	movlb	0	; () banked
  2092  001542  2193               	addwfc	(??_Open1+5)& (0+255),w,b
  2093  001544  0100               	movlb	0	; () banked
  2094  001546  6F9B               	movwf	(Open1@BRGval+1)& (0+255),b
  2095                           
  2096                           ; BSR set to: 0
  2097  001548  0100               	movlb	0	; () banked
  2098  00154A  0100               	movlb	0	; () banked
  2099  00154C  519B               	movf	(Open1@BRGval+1)& (0+255),w,b
  2100  00154E  0A80               	xorlw	128
  2101  001550  0F80               	addlw	-128
  2102  001552  0E01               	movlw	1
  2103  001554  B4D8               	btfsc	status,2,c
  2104  001556  5D9A               	subwf	Open1@BRGval& (0+255),w,b
  2105  001558  A0D8               	btfss	status,0,c
  2106  00155A  0012               	return	
  2107                           
  2108                           ; BSR set to: 0
  2109  00155C  86B8               	bsf	4024,3,c	;volatile
  2110  00155E  84AC               	bsf	4012,2,c	;volatile
  2111  001560  98AC               	bcf	4012,4,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  001562  0100               	movlb	0	; () banked
  2115  001564  C09B  F08E         	movff	Open1@BRGval+1,??_Open1
  2116  001568  C08E  F08F         	movff	??_Open1,??_Open1+1
  2117  00156C  0100               	movlb	0	; () banked
  2118  00156E  6B90               	clrf	(??_Open1+2)& (0+255),b
  2119  001570  0100               	movlb	0	; () banked
  2120  001572  518F               	movf	(??_Open1+1)& (0+255),w,b
  2121  001574  6EB0               	movwf	4016,c	;volatile
  2122                           
  2123                           ; BSR set to: 0
  2124  001576  C09A  FFAF         	movff	Open1@BRGval,4015	;volatile
  2125                           
  2126                           ; BSR set to: 0
  2127  00157A  010F               	movlb	15	; () banked
  2128  00157C  010F               	movlb	15	; () banked
  2129  00157E  9D3A               	bcf	58,6,b	;volatile
  2130                           
  2131                           ; BSR set to: 15
  2132  001580  010F               	movlb	15	; () banked
  2133  001582  010F               	movlb	15	; () banked
  2134  001584  9F3A               	bcf	58,7,b	;volatile
  2135                           
  2136                           ; BSR set to: 15
  2137  001586  8C94               	bsf	3988,6,c	;volatile
  2138                           
  2139                           ; BSR set to: 15
  2140  001588  8E94               	bsf	3988,7,c	;volatile
  2141                           
  2142                           ; BSR set to: 15
  2143  00158A  8AAC               	bsf	4012,5,c	;volatile
  2144                           
  2145                           ; BSR set to: 15
  2146  00158C  88AB               	bsf	4011,4,c	;volatile
  2147                           
  2148                           ; BSR set to: 15
  2149  00158E  8EAB               	bsf	4011,7,c	;volatile
  2150  001590  0012               	return	
  2151  001592                     __end_of_Open1:
  2152                           	opt stack 0
  2153                           tosu	equ	0xFFF
  2154                           tosh	equ	0xFFE
  2155                           tosl	equ	0xFFD
  2156                           pclath	equ	0xFFA
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _Open2 *****************
  2174 ;; Defined at:
  2175 ;;		line 61 in file "EAB_Serial.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  BaudRate        4   40[COMRAM] long 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  freq            4   14[BANK0 ] long 
  2180 ;;  temp            2   18[BANK0 ] int 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;Total ram usage:       18 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    3
  2197 ;; This function calls:
  2198 ;;		_GetFreq
  2199 ;;		___aldiv
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text11
  2206  001592                     __ptext11:
  2207                           	opt stack 0
  2208  001592                     _Open2:
  2209                           	opt stack 27
  2210                           
  2211                           ;incstack = 0
  2212  001592  D801               	call	u2058
  2213  001594  D00C               	goto	u2059
  2214  001596                     u2058:
  2215  001596  0005               	push	
  2216  001598  6EFA               	movwf	pclath,c
  2217  00159A  0100               	movlb	0	; () banked
  2218  00159C  0100               	movlb	0	; () banked
  2219  00159E  5174               	movf	(_Oscillator+20)& (0+255),w,b
  2220  0015A0  6EFD               	movwf	tosl,c
  2221  0015A2  0100               	movlb	0	; () banked
  2222  0015A4  5175               	movf	(_Oscillator+21)& (0+255),w,b
  2223  0015A6  6EFE               	movwf	tosh,c
  2224  0015A8  6AFF               	clrf	tosu,c
  2225  0015AA  50FA               	movf	pclath,w,c
  2226  0015AC  0012               	return		;indir
  2227  0015AE                     u2059:
  2228  0015AE  C020  F096         	movff	?_GetFreq,Open2@freq
  2229  0015B2  C021  F097         	movff	?_GetFreq+1,Open2@freq+1
  2230  0015B6  C022  F098         	movff	?_GetFreq+2,Open2@freq+2
  2231  0015BA  C023  F099         	movff	?_GetFreq+3,Open2@freq+3
  2232  0015BE  C096  F020         	movff	Open2@freq,___aldiv@dividend
  2233  0015C2  C097  F021         	movff	Open2@freq+1,___aldiv@dividend+1
  2234  0015C6  C098  F022         	movff	Open2@freq+2,___aldiv@dividend+2
  2235  0015CA  C099  F023         	movff	Open2@freq+3,___aldiv@dividend+3
  2236  0015CE  C029  F08E         	movff	Open2@BaudRate,??_Open2
  2237  0015D2  C02A  F08F         	movff	Open2@BaudRate+1,??_Open2+1
  2238  0015D6  C02B  F090         	movff	Open2@BaudRate+2,??_Open2+2
  2239  0015DA  C02C  F091         	movff	Open2@BaudRate+3,??_Open2+3
  2240  0015DE  0E02               	movlw	2
  2241  0015E0                     u2065:
  2242  0015E0  90D8               	bcf	status,0,c
  2243  0015E2  0100               	movlb	0	; () banked
  2244  0015E4  378E               	rlcf	??_Open2& (0+255),f,b
  2245  0015E6  378F               	rlcf	(??_Open2+1)& (0+255),f,b
  2246  0015E8  3790               	rlcf	(??_Open2+2)& (0+255),f,b
  2247  0015EA  3791               	rlcf	(??_Open2+3)& (0+255),f,b
  2248  0015EC  2EE8               	decfsz	wreg,f,c
  2249  0015EE  D7F8               	goto	u2065
  2250  0015F0  C08E  F024         	movff	??_Open2,___aldiv@divisor
  2251  0015F4  C08F  F025         	movff	??_Open2+1,___aldiv@divisor+1
  2252  0015F8  C090  F026         	movff	??_Open2+2,___aldiv@divisor+2
  2253  0015FC  C091  F027         	movff	??_Open2+3,___aldiv@divisor+3
  2254  001600  EC34  F009         	call	___aldiv	;wreg free
  2255  001604  C020  F092         	movff	?___aldiv,??_Open2+4
  2256  001608  C021  F093         	movff	?___aldiv+1,??_Open2+5
  2257  00160C  C022  F094         	movff	?___aldiv+2,??_Open2+6
  2258  001610  C023  F095         	movff	?___aldiv+3,??_Open2+7
  2259  001614  0EFF               	movlw	255
  2260  001616  0100               	movlb	0	; () banked
  2261  001618  2592               	addwf	(??_Open2+4)& (0+255),w,b
  2262  00161A  0100               	movlb	0	; () banked
  2263  00161C  0100               	movlb	0	; () banked
  2264  00161E  6F9A               	movwf	Open2@temp& (0+255),b
  2265  001620  0EFF               	movlw	255
  2266  001622  0100               	movlb	0	; () banked
  2267  001624  2193               	addwfc	(??_Open2+5)& (0+255),w,b
  2268  001626  0100               	movlb	0	; () banked
  2269  001628  6F9B               	movwf	(Open2@temp+1)& (0+255),b
  2270                           
  2271                           ; BSR set to: 0
  2272  00162A  0100               	movlb	0	; () banked
  2273  00162C  0100               	movlb	0	; () banked
  2274  00162E  519B               	movf	(Open2@temp+1)& (0+255),w,b
  2275  001630  0A80               	xorlw	128
  2276  001632  0F80               	addlw	-128
  2277  001634  0E01               	movlw	1
  2278  001636  B4D8               	btfsc	status,2,c
  2279  001638  5D9A               	subwf	Open2@temp& (0+255),w,b
  2280  00163A  A0D8               	btfss	status,0,c
  2281  00163C  0012               	return	
  2282                           
  2283                           ; BSR set to: 0
  2284  00163E  8670               	bsf	3952,3,c	;volatile
  2285  001640  8472               	bsf	3954,2,c	;volatile
  2286  001642  9872               	bcf	3954,4,c	;volatile
  2287                           
  2288                           ; BSR set to: 0
  2289  001644  0100               	movlb	0	; () banked
  2290  001646  C09B  F08E         	movff	Open2@temp+1,??_Open2
  2291  00164A  C08E  F08F         	movff	??_Open2,??_Open2+1
  2292  00164E  0100               	movlb	0	; () banked
  2293  001650  6B90               	clrf	(??_Open2+2)& (0+255),b
  2294  001652  0100               	movlb	0	; () banked
  2295  001654  518F               	movf	(??_Open2+1)& (0+255),w,b
  2296  001656  6E76               	movwf	3958,c	;volatile
  2297                           
  2298                           ; BSR set to: 0
  2299  001658  C09A  FF75         	movff	Open2@temp,3957	;volatile
  2300                           
  2301                           ; BSR set to: 0
  2302  00165C  8C93               	bsf	3987,6,c	;volatile
  2303                           
  2304                           ; BSR set to: 0
  2305  00165E  8E93               	bsf	3987,7,c	;volatile
  2306                           
  2307                           ; BSR set to: 0
  2308  001660  8A72               	bsf	3954,5,c	;volatile
  2309                           
  2310                           ; BSR set to: 0
  2311  001662  8871               	bsf	3953,4,c	;volatile
  2312                           
  2313                           ; BSR set to: 0
  2314  001664  8E71               	bsf	3953,7,c	;volatile
  2315  001666  0012               	return	
  2316  001668                     __end_of_Open2:
  2317                           	opt stack 0
  2318                           tosu	equ	0xFFF
  2319                           tosh	equ	0xFFE
  2320                           tosl	equ	0xFFD
  2321                           pclath	equ	0xFFA
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           prodh	equ	0xFF4
  2327                           prodl	equ	0xFF3
  2328                           intcon	equ	0xFF2
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1l	equ	0xFE1
  2333                           indf2	equ	0xFDF
  2334                           fsr2h	equ	0xFDA
  2335                           fsr2l	equ	0xFD9
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _Open *****************
  2339 ;; Defined at:
  2340 ;;		line 23 in file "EAB_I2C.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  I2Cfreq         4   40[COMRAM] long 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  SysFreq         4   14[BANK0 ] long 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;		None               void
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:       16 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    3
  2361 ;; This function calls:
  2362 ;;		_GetFreq
  2363 ;;		_OpenI2C1
  2364 ;;		___aldiv
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text12
  2371  001718                     __ptext12:
  2372                           	opt stack 0
  2373  001718                     _Open:
  2374                           	opt stack 27
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;incstack = 0
  2378  001718  D801               	call	u2008
  2379  00171A  D00C               	goto	u2009
  2380  00171C                     u2008:
  2381  00171C  0005               	push	
  2382  00171E  6EFA               	movwf	pclath,c
  2383  001720  0100               	movlb	0	; () banked
  2384  001722  0100               	movlb	0	; () banked
  2385  001724  5174               	movf	(_Oscillator+20)& (0+255),w,b
  2386  001726  6EFD               	movwf	tosl,c
  2387  001728  0100               	movlb	0	; () banked
  2388  00172A  5175               	movf	(_Oscillator+21)& (0+255),w,b
  2389  00172C  6EFE               	movwf	tosh,c
  2390  00172E  6AFF               	clrf	tosu,c
  2391  001730  50FA               	movf	pclath,w,c
  2392  001732  0012               	return		;indir
  2393  001734                     u2009:
  2394  001734  C020  F096         	movff	?_GetFreq,Open@SysFreq
  2395  001738  C021  F097         	movff	?_GetFreq+1,Open@SysFreq+1
  2396  00173C  C022  F098         	movff	?_GetFreq+2,Open@SysFreq+2
  2397  001740  C023  F099         	movff	?_GetFreq+3,Open@SysFreq+3
  2398  001744  0100               	movlb	0	; () banked
  2399  001746  6F8E               	movwf	??_Open& (0+255),b
  2400  001748  0E00               	movlw	0
  2401  00174A  6E20               	movwf	OpenI2C1@slew,c
  2402  00174C  0100               	movlb	0	; () banked
  2403  00174E  518E               	movf	??_Open& (0+255),w,b
  2404  001750  0E08               	movlw	8
  2405  001752  EC1D  F00D         	call	_OpenI2C1
  2406  001756  C096  F020         	movff	Open@SysFreq,___aldiv@dividend
  2407  00175A  C097  F021         	movff	Open@SysFreq+1,___aldiv@dividend+1
  2408  00175E  C098  F022         	movff	Open@SysFreq+2,___aldiv@dividend+2
  2409  001762  C099  F023         	movff	Open@SysFreq+3,___aldiv@dividend+3
  2410  001766  C029  F08E         	movff	Open@I2Cfreq,??_Open
  2411  00176A  C02A  F08F         	movff	Open@I2Cfreq+1,??_Open+1
  2412  00176E  C02B  F090         	movff	Open@I2Cfreq+2,??_Open+2
  2413  001772  C02C  F091         	movff	Open@I2Cfreq+3,??_Open+3
  2414  001776  0E02               	movlw	2
  2415  001778                     u2015:
  2416  001778  90D8               	bcf	status,0,c
  2417  00177A  0100               	movlb	0	; () banked
  2418  00177C  378E               	rlcf	??_Open& (0+255),f,b
  2419  00177E  378F               	rlcf	(??_Open+1)& (0+255),f,b
  2420  001780  3790               	rlcf	(??_Open+2)& (0+255),f,b
  2421  001782  3791               	rlcf	(??_Open+3)& (0+255),f,b
  2422  001784  2EE8               	decfsz	wreg,f,c
  2423  001786  D7F8               	goto	u2015
  2424  001788  C08E  F024         	movff	??_Open,___aldiv@divisor
  2425  00178C  C08F  F025         	movff	??_Open+1,___aldiv@divisor+1
  2426  001790  C090  F026         	movff	??_Open+2,___aldiv@divisor+2
  2427  001794  C091  F027         	movff	??_Open+3,___aldiv@divisor+3
  2428  001798  EC34  F009         	call	___aldiv	;wreg free
  2429  00179C  C020  F092         	movff	?___aldiv,??_Open+4
  2430  0017A0  C021  F093         	movff	?___aldiv+1,??_Open+5
  2431  0017A4  C022  F094         	movff	?___aldiv+2,??_Open+6
  2432  0017A8  C023  F095         	movff	?___aldiv+3,??_Open+7
  2433  0017AC  0100               	movlb	0	; () banked
  2434  0017AE  0592               	decf	(??_Open+4)& (0+255),w,b
  2435  0017B0  6EC8               	movwf	4040,c	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438  0017B2  010F               	movlb	15	; () banked
  2439  0017B4  010F               	movlb	15	; () banked
  2440  0017B6  973A               	bcf	58,3,b	;volatile
  2441                           
  2442                           ; BSR set to: 15
  2443  0017B8  010F               	movlb	15	; () banked
  2444  0017BA  010F               	movlb	15	; () banked
  2445  0017BC  993A               	bcf	58,4,b	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448  0017BE  8694               	bsf	3988,3,c	;volatile
  2449                           
  2450                           ; BSR set to: 15
  2451  0017C0  8894               	bsf	3988,4,c	;volatile
  2452                           
  2453                           ; BSR set to: 15
  2454  0017C2  0012               	return	
  2455  0017C4                     __end_of_Open:
  2456                           	opt stack 0
  2457                           tosu	equ	0xFFF
  2458                           tosh	equ	0xFFE
  2459                           tosl	equ	0xFFD
  2460                           pclath	equ	0xFFA
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           intcon	equ	0xFF2
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec1	equ	0xFE5
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function ___aldiv *****************
  2478 ;; Defined at:
  2479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  dividend        4   31[COMRAM] long 
  2482 ;;  divisor         4   35[COMRAM] long 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        4    2[BANK0 ] long 
  2485 ;;  sign            1    1[BANK0 ] unsigned char 
  2486 ;;  counter         1    0[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  4   31[COMRAM] long 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:       15 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_Open
  2507 ;;		_Open1
  2508 ;;		_Open2
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text13
  2513  001268                     __ptext13:
  2514                           	opt stack 0
  2515  001268                     ___aldiv:
  2516                           	opt stack 27
  2517                           
  2518                           ; BSR set to: 15
  2519                           ;incstack = 0
  2520  001268  6E28               	movwf	??___aldiv& (0+255),c
  2521  00126A  0E00               	movlw	0
  2522  00126C  0100               	movlb	0	; () banked
  2523  00126E  0100               	movlb	0	; () banked
  2524  001270  6F89               	movwf	___aldiv@sign& (0+255),b
  2525  001272  5028               	movf	??___aldiv& (0+255),w,c
  2526                           
  2527                           ; BSR set to: 0
  2528  001274  5027               	movf	___aldiv@divisor+3,w,c
  2529  001276  0A80               	xorlw	128
  2530  001278  0F80               	addlw	128
  2531  00127A  E108               	bnz	u2085
  2532  00127C  0E00               	movlw	0
  2533  00127E  5C26               	subwf	___aldiv@divisor+2,w,c
  2534  001280  E105               	bnz	u2085
  2535  001282  0E00               	movlw	0
  2536  001284  5C25               	subwf	___aldiv@divisor+1,w,c
  2537  001286  E102               	bnz	u2085
  2538  001288  0E00               	movlw	0
  2539  00128A  5C24               	subwf	___aldiv@divisor,w,c
  2540  00128C                     u2085:
  2541  00128C  B0D8               	btfsc	status,0,c
  2542  00128E  D00E               	goto	l2262
  2543                           
  2544                           ; BSR set to: 0
  2545  001290  1E27               	comf	___aldiv@divisor+3,f,c
  2546  001292  1E26               	comf	___aldiv@divisor+2,f,c
  2547  001294  1E25               	comf	___aldiv@divisor+1,f,c
  2548  001296  6C24               	negf	___aldiv@divisor,c
  2549  001298  0E00               	movlw	0
  2550  00129A  2225               	addwfc	___aldiv@divisor+1,f,c
  2551  00129C  2226               	addwfc	___aldiv@divisor+2,f,c
  2552  00129E  2227               	addwfc	___aldiv@divisor+3,f,c
  2553                           
  2554                           ; BSR set to: 0
  2555  0012A0  6E28               	movwf	??___aldiv& (0+255),c
  2556  0012A2  0E01               	movlw	1
  2557  0012A4  0100               	movlb	0	; () banked
  2558  0012A6  0100               	movlb	0	; () banked
  2559  0012A8  6F89               	movwf	___aldiv@sign& (0+255),b
  2560  0012AA  5028               	movf	??___aldiv& (0+255),w,c
  2561  0012AC                     l2262:
  2562                           
  2563                           ; BSR set to: 0
  2564  0012AC  5023               	movf	___aldiv@dividend+3,w,c
  2565  0012AE  0A80               	xorlw	128
  2566  0012B0  0F80               	addlw	128
  2567  0012B2  E108               	bnz	u2095
  2568  0012B4  0E00               	movlw	0
  2569  0012B6  5C22               	subwf	___aldiv@dividend+2,w,c
  2570  0012B8  E105               	bnz	u2095
  2571  0012BA  0E00               	movlw	0
  2572  0012BC  5C21               	subwf	___aldiv@dividend+1,w,c
  2573  0012BE  E102               	bnz	u2095
  2574  0012C0  0E00               	movlw	0
  2575  0012C2  5C20               	subwf	___aldiv@dividend,w,c
  2576  0012C4                     u2095:
  2577  0012C4  B0D8               	btfsc	status,0,c
  2578  0012C6  D00C               	goto	l2268
  2579                           
  2580                           ; BSR set to: 0
  2581  0012C8  1E23               	comf	___aldiv@dividend+3,f,c
  2582  0012CA  1E22               	comf	___aldiv@dividend+2,f,c
  2583  0012CC  1E21               	comf	___aldiv@dividend+1,f,c
  2584  0012CE  6C20               	negf	___aldiv@dividend,c
  2585  0012D0  0E00               	movlw	0
  2586  0012D2  2221               	addwfc	___aldiv@dividend+1,f,c
  2587  0012D4  2222               	addwfc	___aldiv@dividend+2,f,c
  2588  0012D6  2223               	addwfc	___aldiv@dividend+3,f,c
  2589                           
  2590                           ; BSR set to: 0
  2591  0012D8  0E01               	movlw	1
  2592  0012DA  0100               	movlb	0	; () banked
  2593  0012DC  0100               	movlb	0	; () banked
  2594  0012DE  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  2595  0012E0                     l2268:
  2596                           
  2597                           ; BSR set to: 0
  2598  0012E0  0E00               	movlw	0
  2599  0012E2  0100               	movlb	0	; () banked
  2600  0012E4  0100               	movlb	0	; () banked
  2601  0012E6  6F8A               	movwf	___aldiv@quotient& (0+255),b
  2602  0012E8  0E00               	movlw	0
  2603  0012EA  0100               	movlb	0	; () banked
  2604  0012EC  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  2605  0012EE  0E00               	movlw	0
  2606  0012F0  0100               	movlb	0	; () banked
  2607  0012F2  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  2608  0012F4  0E00               	movlw	0
  2609  0012F6  0100               	movlb	0	; () banked
  2610  0012F8  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  2611                           
  2612                           ; BSR set to: 0
  2613  0012FA  5027               	movf	___aldiv@divisor+3,w,c
  2614  0012FC  1024               	iorwf	___aldiv@divisor,w,c
  2615  0012FE  1025               	iorwf	___aldiv@divisor+1,w,c
  2616  001300  1026               	iorwf	___aldiv@divisor+2,w,c
  2617  001302  B4D8               	btfsc	status,2,c
  2618  001304  D039               	goto	l2290
  2619                           
  2620                           ; BSR set to: 0
  2621  001306  6E28               	movwf	??___aldiv& (0+255),c
  2622  001308  0E01               	movlw	1
  2623  00130A  0100               	movlb	0	; () banked
  2624  00130C  0100               	movlb	0	; () banked
  2625  00130E  6F88               	movwf	___aldiv@counter& (0+255),b
  2626  001310  5028               	movf	??___aldiv& (0+255),w,c
  2627  001312  D008               	goto	l2276
  2628  001314                     l2274:
  2629                           
  2630                           ; BSR set to: 0
  2631  001314  90D8               	bcf	status,0,c
  2632  001316  3624               	rlcf	___aldiv@divisor,f,c
  2633  001318  3625               	rlcf	___aldiv@divisor+1,f,c
  2634  00131A  3626               	rlcf	___aldiv@divisor+2,f,c
  2635  00131C  3627               	rlcf	___aldiv@divisor+3,f,c
  2636  00131E  0100               	movlb	0	; () banked
  2637  001320  0100               	movlb	0	; () banked
  2638  001322  2B88               	incf	___aldiv@counter& (0+255),f,b
  2639  001324                     l2276:
  2640                           
  2641                           ; BSR set to: 0
  2642  001324  AE27               	btfss	___aldiv@divisor+3,7,c
  2643  001326  D7F6               	goto	l2274
  2644  001328                     l2278:
  2645                           
  2646                           ; BSR set to: 0
  2647  001328  0100               	movlb	0	; () banked
  2648  00132A  90D8               	bcf	status,0,c
  2649  00132C  0100               	movlb	0	; () banked
  2650  00132E  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  2651  001330  0100               	movlb	0	; () banked
  2652  001332  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2653  001334  0100               	movlb	0	; () banked
  2654  001336  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2655  001338  0100               	movlb	0	; () banked
  2656  00133A  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2657                           
  2658                           ; BSR set to: 0
  2659  00133C  5024               	movf	___aldiv@divisor,w,c
  2660  00133E  5C20               	subwf	___aldiv@dividend,w,c
  2661  001340  5025               	movf	___aldiv@divisor+1,w,c
  2662  001342  5821               	subwfb	___aldiv@dividend+1,w,c
  2663  001344  5026               	movf	___aldiv@divisor+2,w,c
  2664  001346  5822               	subwfb	___aldiv@dividend+2,w,c
  2665  001348  5027               	movf	___aldiv@divisor+3,w,c
  2666  00134A  5823               	subwfb	___aldiv@dividend+3,w,c
  2667  00134C  A0D8               	btfss	status,0,c
  2668  00134E  D00B               	goto	l2286
  2669                           
  2670                           ; BSR set to: 0
  2671  001350  5024               	movf	___aldiv@divisor,w,c
  2672  001352  5E20               	subwf	___aldiv@dividend,f,c
  2673  001354  5025               	movf	___aldiv@divisor+1,w,c
  2674  001356  5A21               	subwfb	___aldiv@dividend+1,f,c
  2675  001358  5026               	movf	___aldiv@divisor+2,w,c
  2676  00135A  5A22               	subwfb	___aldiv@dividend+2,f,c
  2677  00135C  5027               	movf	___aldiv@divisor+3,w,c
  2678  00135E  5A23               	subwfb	___aldiv@dividend+3,f,c
  2679                           
  2680                           ; BSR set to: 0
  2681  001360  0100               	movlb	0	; () banked
  2682  001362  0100               	movlb	0	; () banked
  2683  001364  818A               	bsf	___aldiv@quotient& (0+255),0,b
  2684  001366                     l2286:
  2685                           
  2686                           ; BSR set to: 0
  2687  001366  90D8               	bcf	status,0,c
  2688  001368  3227               	rrcf	___aldiv@divisor+3,f,c
  2689  00136A  3226               	rrcf	___aldiv@divisor+2,f,c
  2690  00136C  3225               	rrcf	___aldiv@divisor+1,f,c
  2691  00136E  3224               	rrcf	___aldiv@divisor,f,c
  2692                           
  2693                           ; BSR set to: 0
  2694  001370  0100               	movlb	0	; () banked
  2695  001372  0100               	movlb	0	; () banked
  2696  001374  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  2697  001376  D7D8               	goto	l2278
  2698  001378                     l2290:
  2699                           
  2700                           ; BSR set to: 0
  2701  001378  0100               	movlb	0	; () banked
  2702  00137A  0100               	movlb	0	; () banked
  2703  00137C  5189               	movf	___aldiv@sign& (0+255),w,b
  2704  00137E  B4D8               	btfsc	status,2,c
  2705  001380  D010               	goto	l2294
  2706                           
  2707                           ; BSR set to: 0
  2708  001382  0100               	movlb	0	; () banked
  2709  001384  0100               	movlb	0	; () banked
  2710  001386  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2711  001388  0100               	movlb	0	; () banked
  2712  00138A  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2713  00138C  0100               	movlb	0	; () banked
  2714  00138E  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2715  001390  0100               	movlb	0	; () banked
  2716  001392  6D8A               	negf	___aldiv@quotient& (0+255),b
  2717  001394  0E00               	movlw	0
  2718  001396  0100               	movlb	0	; () banked
  2719  001398  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2720  00139A  0100               	movlb	0	; () banked
  2721  00139C  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2722  00139E  0100               	movlb	0	; () banked
  2723  0013A0  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2724  0013A2                     l2294:
  2725                           
  2726                           ; BSR set to: 0
  2727  0013A2  C08A  F020         	movff	___aldiv@quotient,?___aldiv
  2728  0013A6  C08B  F021         	movff	___aldiv@quotient+1,?___aldiv+1
  2729  0013AA  C08C  F022         	movff	___aldiv@quotient+2,?___aldiv+2
  2730  0013AE  C08D  F023         	movff	___aldiv@quotient+3,?___aldiv+3
  2731  0013B2  0012               	return	
  2732  0013B4                     __end_of___aldiv:
  2733                           	opt stack 0
  2734                           tosu	equ	0xFFF
  2735                           tosh	equ	0xFFE
  2736                           tosl	equ	0xFFD
  2737                           pclath	equ	0xFFA
  2738                           tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           prodh	equ	0xFF4
  2743                           prodl	equ	0xFF3
  2744                           intcon	equ	0xFF2
  2745                           postinc0	equ	0xFEE
  2746                           wreg	equ	0xFE8
  2747                           postdec1	equ	0xFE5
  2748                           fsr1l	equ	0xFE1
  2749                           indf2	equ	0xFDF
  2750                           fsr2h	equ	0xFDA
  2751                           fsr2l	equ	0xFD9
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _OpenI2C1 *****************
  2755 ;; Defined at:
  2756 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\i2c\i2c1open.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  sync_mode       1    wreg     unsigned char 
  2759 ;;  slew            1   31[COMRAM] unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  sync_mode       1   32[COMRAM] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;		None               void
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    2
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_Open
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text14
  2786  001A3A                     __ptext14:
  2787                           	opt stack 0
  2788  001A3A                     _OpenI2C1:
  2789                           	opt stack 27
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;incstack = 0
  2793                           ;OpenI2C1@sync_mode stored from wreg
  2794  001A3A  CFE8 F021          	movff	wreg,OpenI2C1@sync_mode
  2795  001A3E  0E3F               	movlw	63
  2796  001A40  16C7               	andwf	4039,f,c	;volatile
  2797  001A42  0E00               	movlw	0
  2798  001A44  6EC6               	movwf	4038,c	;volatile
  2799  001A46  0E00               	movlw	0
  2800  001A48  6EC5               	movwf	4037,c	;volatile
  2801  001A4A  5021               	movf	OpenI2C1@sync_mode,w,c
  2802  001A4C  12C6               	iorwf	4038,f,c	;volatile
  2803  001A4E  5020               	movf	OpenI2C1@slew,w,c
  2804  001A50  12C7               	iorwf	4039,f,c	;volatile
  2805  001A52  8AC6               	bsf	4038,5,c	;volatile
  2806  001A54  0012               	return	
  2807  001A56                     __end_of_OpenI2C1:
  2808                           	opt stack 0
  2809                           tosu	equ	0xFFF
  2810                           tosh	equ	0xFFE
  2811                           tosl	equ	0xFFD
  2812                           pclath	equ	0xFFA
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           prodh	equ	0xFF4
  2818                           prodl	equ	0xFF3
  2819                           intcon	equ	0xFF2
  2820                           postinc0	equ	0xFEE
  2821                           wreg	equ	0xFE8
  2822                           postdec1	equ	0xFE5
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _GetFreq *****************
  2830 ;; Defined at:
  2831 ;;		line 128 in file "EAB_Oscillator.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  4   31[COMRAM] long 
  2838 ;; Registers used:
  2839 ;;		None
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        4 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_Open
  2856 ;;		_Open1
  2857 ;;		_Open2
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text15
  2862  001A56                     __ptext15:
  2863                           	opt stack 0
  2864  001A56                     _GetFreq:
  2865                           	opt stack 27
  2866                           
  2867                           ;incstack = 0
  2868  001A56  C03A  F020         	movff	_OscFreq,?_GetFreq
  2869  001A5A  C03B  F021         	movff	_OscFreq+1,?_GetFreq+1
  2870  001A5E  C03C  F022         	movff	_OscFreq+2,?_GetFreq+2
  2871  001A62  C03D  F023         	movff	_OscFreq+3,?_GetFreq+3
  2872  001A66  0012               	return	
  2873  001A68                     __end_of_GetFreq:
  2874                           	opt stack 0
  2875                           tosu	equ	0xFFF
  2876                           tosh	equ	0xFFE
  2877                           tosl	equ	0xFFD
  2878                           pclath	equ	0xFFA
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           intcon	equ	0xFF2
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           postdec1	equ	0xFE5
  2889                           fsr1l	equ	0xFE1
  2890                           indf2	equ	0xFDF
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _LowPriority_InterruptHandler *****************
  2896 ;; Defined at:
  2897 ;;		line 21 in file "EAB_InterruptHandler.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;		None               void
  2904 ;; Registers used:
  2905 ;;		None
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:       17 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		Interrupt level 1
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	intcodelo
  2926  000018                     __pintcodelo:
  2927                           	opt stack 0
  2928  000018                     _LowPriority_InterruptHandler:
  2929                           	opt stack 26
  2930                           
  2931                           ;incstack = 0
  2932  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2933  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2934  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2935  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2936  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2937  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2938  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2939  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2940  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2941  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2942  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2943  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2944  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2945  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2946  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2947  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2948  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2949  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2950  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2951  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2952  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2953  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2954  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2955  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2956  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2957  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2958  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2959  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2960  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2961  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2962  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2963  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2964  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2965  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2966  0000A0  0010               	retfie	
  2967  0000A2                     __end_of_LowPriority_InterruptHandler:
  2968                           	opt stack 0
  2969                           tosu	equ	0xFFF
  2970                           tosh	equ	0xFFE
  2971                           tosl	equ	0xFFD
  2972                           pclatu	equ	0xFFB
  2973                           pclath	equ	0xFFA
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           postinc0	equ	0xFEE
  2982                           fsr0h	equ	0xFEA
  2983                           fsr0l	equ	0xFE9
  2984                           wreg	equ	0xFE8
  2985                           postdec1	equ	0xFE5
  2986                           fsr1h	equ	0xFE2
  2987                           fsr1l	equ	0xFE1
  2988                           bsr	equ	0xFE0
  2989                           indf2	equ	0xFDF
  2990                           fsr2h	equ	0xFDA
  2991                           fsr2l	equ	0xFD9
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function _HighPriority_InterruptHandler *****************
  2995 ;; Defined at:
  2996 ;;		line 14 in file "EAB_InterruptHandler.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;		None               void
  3003 ;; Registers used:
  3004 ;;		None
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:       14 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		Interrupt level 2
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	intcode
  3024  000008                     __pintcode:
  3025                           	opt stack 0
  3026  000008                     _HighPriority_InterruptHandler:
  3027                           	opt stack 26
  3028                           
  3029                           ;incstack = 0
  3030  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  3031  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  3032  000010  EF28  F00C         	goto	int_func
  3033                           tosu	equ	0xFFF
  3034                           tosh	equ	0xFFE
  3035                           tosl	equ	0xFFD
  3036                           pclatu	equ	0xFFB
  3037                           pclath	equ	0xFFA
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           intcon	equ	0xFF2
  3045                           postinc0	equ	0xFEE
  3046                           fsr0h	equ	0xFEA
  3047                           fsr0l	equ	0xFE9
  3048                           wreg	equ	0xFE8
  3049                           postdec1	equ	0xFE5
  3050                           fsr1h	equ	0xFE2
  3051                           fsr1l	equ	0xFE1
  3052                           bsr	equ	0xFE0
  3053                           indf2	equ	0xFDF
  3054                           fsr2h	equ	0xFDA
  3055                           fsr2l	equ	0xFD9
  3056                           status	equ	0xFD8
  3057                           
  3058                           	psect	intcode_body
  3059  001850                     __pintcode_body:
  3060                           	opt stack 26
  3061  001850                     int_func:
  3062                           	opt stack 26
  3063  001850  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  3064  001854  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  3065  001858  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  3066  00185C  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  3067  001860  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  3068  001864  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  3069  001868  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  3070  00186C  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  3071  001870  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  3072  001874  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  3073  001878  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  3074  00187C  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  3075  001880  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  3076  001884  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  3077  001888  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  3078  00188C  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  3079  001890  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  3080  001894  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  3081  001898  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  3082  00189C  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  3083  0018A0  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  3084  0018A4  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  3085  0018A8  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  3086  0018AC  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  3087  0018B0  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  3088  0018B4  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  3089  0018B8  0011               	retfie		f
  3090  0018BA                     __end_of_HighPriority_InterruptHandler:
  3091                           	opt stack 0
  3092                           tosu	equ	0xFFF
  3093                           tosh	equ	0xFFE
  3094                           tosl	equ	0xFFD
  3095                           pclatu	equ	0xFFB
  3096                           pclath	equ	0xFFA
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodh	equ	0xFF4
  3102                           prodl	equ	0xFF3
  3103                           intcon	equ	0xFF2
  3104                           postinc0	equ	0xFEE
  3105                           fsr0h	equ	0xFEA
  3106                           fsr0l	equ	0xFE9
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           fsr1h	equ	0xFE2
  3110                           fsr1l	equ	0xFE1
  3111                           bsr	equ	0xFE0
  3112                           indf2	equ	0xFDF
  3113                           fsr2h	equ	0xFDA
  3114                           fsr2l	equ	0xFD9
  3115                           status	equ	0xFD8
  3116                           tosu	equ	0xFFF
  3117                           tosh	equ	0xFFE
  3118                           tosl	equ	0xFFD
  3119                           pclatu	equ	0xFFB
  3120                           pclath	equ	0xFFA
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodh	equ	0xFF4
  3126                           prodl	equ	0xFF3
  3127                           intcon	equ	0xFF2
  3128                           postinc0	equ	0xFEE
  3129                           fsr0h	equ	0xFEA
  3130                           fsr0l	equ	0xFE9
  3131                           wreg	equ	0xFE8
  3132                           postdec1	equ	0xFE5
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           bsr	equ	0xFE0
  3136                           indf2	equ	0xFDF
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141                           	psect	rparam
  3142  0000                     tosu	equ	0xFFF
  3143                           tosh	equ	0xFFE
  3144                           tosl	equ	0xFFD
  3145                           pclatu	equ	0xFFB
  3146                           pclath	equ	0xFFA
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           postinc0	equ	0xFEE
  3155                           fsr0h	equ	0xFEA
  3156                           fsr0l	equ	0xFE9
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           bsr	equ	0xFE0
  3162                           indf2	equ	0xFDF
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        57
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      64
    BANK0           160     24      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S115$3$0	PTR unsigned char  size(2) Largest target is 0

    S115$2$0	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    S153$2$2	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), 

    S153$1$2	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    getsI2C1@rdptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    S2493$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S2493$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S2493$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S2493$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S2447$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S2447$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    SendArray2@ArrayData	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    SendArray1@ArrayData	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    ReadArray@RegisterValue	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), main@AccelID(BANK0[1]), 

    WriteArray@RegisterValue	PTR unsigned char  size(2) Largest target is 1
		 -> main@TxData(BANK0[1]), 

    S153$WriteArray	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> WriteArray(), 

    I2C1.WriteArray	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> WriteArray(), 

    S153$ReadArray	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ReadArray(), 

    I2C1.ReadArray	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ReadArray(), 

    S153$Open	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> Open(), 

    I2C1.Open	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> Open(), 

    S115$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S115$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S115$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S115$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S115$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S115$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S78$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S78$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S78$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S78$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S78$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S78$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_ReadArray
    _WriteArray->_WriteI2C1
    _ReadArray->_getsI2C1
    _getsI2C1->_ReadI2C1
    _Open2->___aldiv
    _Open1->___aldiv
    _Open->___aldiv

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv
    _Open->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5166
                                             20 BANK0      4     4      0
                               _Open *
                              _Open1 *
                              _Open2 *
                          _ReadArray *
                         _SendArray1 *
                         _SendArray2 *
                       _SetFreq_8MHZ *
                     _SetTimer0_1Sec *
                         _WriteArray *
 ---------------------------------------------------------------------------------
 (1) _WriteArray                                           8     4      4     474
                                             33 COMRAM     8     4      4
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (1) _SetTimer0_1Sec                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendArray2                                           3     0      3     239
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _SendArray1                                           3     0      3      67
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ReadArray                                            9     5      4     843
                                             36 COMRAM     9     5      4
                          _WriteI2C1
                           _getsI2C1
 ---------------------------------------------------------------------------------
 (2) _getsI2C1                                             4     1      3     195
                                             32 COMRAM     4     1      3
                           _ReadI2C1
 ---------------------------------------------------------------------------------
 (3) _ReadI2C1                                             1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4    1122
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4    1068
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open                                                16    12      4    1165
                                             40 COMRAM     4     0      4
                                              6 BANK0     12    12      0
                            _GetFreq *
                           _OpenI2C1
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     907
                                             31 COMRAM     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1     139
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open *
     _GetFreq *
     _OpenI2C1 *
     ___aldiv *
   _Open1 *
     _GetFreq *
     ___aldiv *
   _Open2 *
     _GetFreq *
     ___aldiv *
   _ReadArray *
     _WriteI2C1
     _getsI2C1
       _ReadI2C1
   _SendArray1 *
   _SendArray2 *
   _SetFreq_8MHZ *
   _SetTimer0_1Sec *
   _WriteArray *
     _WriteI2C1

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      40       1       67.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Aug 18 00:38:31 2014

                                    l90 1700                                      l83 16D4  
                                    l77 16B2                                      l69 1674  
                                    l94 1712                                      l99 13C0  
                   SendArray1@ArrayData 0020                                      bsr 000FE0  
                                   l113 1420                                     l107 13FE  
                                   l133 14A0                                     l127 1482  
                                   l119 1444                                     l136 14A4  
                                   l322 19B6                                     l139 14AA  
                                   l333 19DC                                     l504 1904  
                                   l530 19A6                                     l529 19A4  
                                   l554 17F6                                     l563 1828  
                                   l495 18CE                                     _PR2 000FBB  
                   SendArray2@ArrayData 0020                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                         ?_SetTimer0_1Sec 0001  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l2074 19CA  
                                  l2262 12AC                                    l2086 19F0  
                                  _I2C1 0082                                    l2168 11FA  
                                  l2274 1314                                    l2290 1378  
                                  l2276 1324                                    l2268 12E0  
                                  l2294 13A2                                    l2286 1366  
                                  l2278 1328                                    l1910 1804  
                                  l1914 1808                                    l1850 1678  
                                  l1852 1694                                    l1926 184C  
                                  l1918 182C                                    l1942 13F6  
                                  l1934 13C4                                    l1862 16B6  
                                  l1952 1418                                    l1936 13E0  
                                  l1872 16DA                                    l1970 147A  
                                  l1962 1448                                    l1946 1402  
                                  l1858 16AA                                    l1964 1464  
                                  l1956 1424                                    l1868 16CC  
                                  l1990 18FA                                    l1974 1486  
                                  l1878 16F8                                    l1896 17D4  
                                  l1986 18DA                                    l1978 18BC  
                                  l1994 1908                                    u2015 1778  
                                  u2008 171C                                    u1160 1682  
                                  u2009 1734                                    u2035 14FE  
                                  u2028 14B4                                    u1500 142E  
                                  u1420 13CE                                    u2029 14CC  
                                  u1168 1684                                    u2065 15E0  
                                  u2058 1596                                    u1530 1452  
                                  u2059 15AE                                    u1380 1836  
                                  u1508 1430                                    u1428 13D0  
                                  u2085 128C                                    u2095 12C4  
                                  u1538 1454                                    u1388 1838  
                                  u1908 1094                                    u1909 10AC  
                                  u1918 10C8                                    u1919 10DC  
                                  u1928 10F0                                    u1929 1108  
                                  u1938 111C                                    u1939 1134  
                                  u1948 1138                                    u1949 1176  
                                  u1958 117A                                    u1959 11B8  
                                  u1968 11BC                                    u1988 121C  
                                  u1989 1234                                    u1998 1250  
                    _EnableRx2interrupt 000000                          _TIMER2_100usec 1033  
                                  _Open 1718                                    _main 1070  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                   __end_of_TIMER0_16mSec 105A  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 1A68                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                                   ?_Open 0029  
                       __end_of___aldiv 13B4                                   ?_main 0001  
                                 _T0CON 000FD5                                   _T2CON 000FBA  
                        __CFG_DEBUG$OFF 000000                  __end_of_TIMER0_130mSec 1029  
                                 _Open1 14B0                                   _Open2 1592  
                __end_of_TIMER2_100usec 103D                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                       __initialization 1914                            __end_of_Open 17C4  
                          __end_of_main 1268                        __end_of_ReadI2C1 19AE  
                           Open1@BRGval 009A                        __end_of_OpenI2C1 1A56  
                                ??_Open 008E                                  ??_main 009C  
                         __activetblptr 000003                   _SetTimer0_130milliSec 000000  
            __end_of_TIMER2_PR2_100usec 1063                                  ?_Open1 0029  
                                ?_Open2 0029                              _SendArray1 19AE  
                            _SendArray2 19D4                             Open@I2Cfreq 0029  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0024                                  _SPBRG1 000FAF  
                                _SPBRG2 000F75                                  _TX1REG 000FAD  
                                _TX2REG 000F73                      __size_of_ReadArray 00FC  
                                _SSPADD 000FC8                        __end_of_getsI2C1 1914  
                            _Oscillator 0060                                  _Timer0 1001  
                                _Timer1 1069                                  _Timer2 1010  
                             ??___aldiv 0028                           ?_SetFreq_8MHZ 0001  
                  _SetTimer0_16milliSec 000000                            __pdataCOMRAM 002E  
                          __mediumconst 0000                          WriteArray@data 0027  
                           Open@SysFreq 0096                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                    __size_of_WriteI2C1 008C                              __accesstop 0060  
               __end_of__initialization 1958                   _SetTimer2_100microSec 000000  
                        __pcstackCOMRAM 0001                           __end_of_Open1 1592  
                         __end_of_Open2 1668                              _WriteArray 1668  
                          __pidataBANK0 195E                          ??_SetFreq_8MHZ 0020  
                     __end_of_ReadArray 14B0                        ??_SetTimer0_1Sec 0020  
                   WriteArray@DeviceAdd 0028                                 ??_Open1 008E  
                               ??_Open2 008E                             ?_SendArray1 0020  
                           ?_SendArray2 0020                             _PinFunction 000F38  
                             ?_ReadI2C1 0001                               ?_OpenI2C1 0020  
                            _delayCount 003F                            OpenI2C1@slew 0020  
                     __end_of_WriteI2C1 1850                           _SetFreq_32MHZ 000000  
                         _SetFreq_16MHZ 000000   __end_of_HighPriority_InterruptHandler 18BA  
__size_of_HighPriority_InterruptHandler 18B2           _HighPriority_InterruptHandler 0008  
                         _SetFreq_64MHZ 000000                             _SendString1 000000  
                           _SendString2 000000                                 _SPBRGH1 000FB0  
                               _SPBRGH2 000F76                               ?_getsI2C1 0021  
                               _SSP1BUF 000FC9                   WriteArray@RegisterAdd 0022  
                      _TIMER2_PR2_1msec 1047                              ??_ReadI2C1 0020  
                               _GetFreq 1A56                              ??_OpenI2C1 0021  
                               _OscFreq 003A                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 002E  
                               _Serial2 0076                           ReadArray@data 002A  
                           ?_WriteArray 0022                                 ___aldiv 1268  
                   __size_of_SendArray1 0026                     __size_of_SendArray2 0026  
                          __psmallconst 1000                                 __pcinit 1914  
                               __ramtop 1000                                 __ptext0 1070  
                               __ptext1 1668                                 __ptext2 1A1C  
                               __ptext3 19FA                                 __ptext4 19AE  
                               __ptext5 19D4                                 __ptext6 13B4  
                               __ptext7 18BA                                 __ptext8 1986  
                               __ptext9 17C4                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                               _T2CONbits 000FBA  
                      ___aldiv@dividend 0020                    ReadArray@RegisterAdd 0025  
                            ??_getsI2C1 0024                          __pintcode_body 1850  
                  end_of_initialization 1958                    __end_of_SetFreq_8MHZ 1A1C  
                               int_func 1850                      _TIMER2_PR2_100usec 105A  
                      ___aldiv@quotient 008A                                 postdec1 000FE5  
                               postinc0 000FEE    __end_of_LowPriority_InterruptHandler 00A2  
 __size_of_LowPriority_InterruptHandler 008A            _LowPriority_InterruptHandler 0018  
                      __CFG_FOSC$INTIO7 000000                 WriteArray@RegisterValue 0023  
        ?_HighPriority_InterruptHandler 0001                     __size_of_WriteArray 00B0  
                            main@TxData 009F                           _TIMER0_16mSec 1051  
                  __end_of_TIMER0_1mSec 1069                    __end_of_TIMER2_1msec 1047  
                        __end_of_Timer0 1010                          __end_of_Timer1 106E  
                        __end_of_Timer2 101F                               Open1@freq 0096  
                             Open2@freq 0096                               Open2@temp 009A  
                        getsI2C1@length 0023                           __pidataCOMRAM 1A68  
         ?_LowPriority_InterruptHandler 0001                     start_initialization 1914  
                             _ReadArray 13B4                               _ReadByte1 000000  
                             _ReadByte2 000000                            ??_SendArray1 0023  
                          ??_SendArray2 0023                               _SendByte1 000000  
                             _SendByte2 000000                       __size_of_ReadI2C1 0028  
                          _PinDirection 000F92                               _SetTimer0 000000  
                             _SetTimer1 000000                               _SetTimer2 000000  
                     __size_of_OpenI2C1 001C                               _Timer0Int 000000  
                             _Timer1Int 000000                               _Timer2Int 000000  
                       ReadArray@ComRes 002D                           Open1@BaudRate 0029  
              __end_of_TIMER2_PR2_1msec 1051                      _SetTimer0_1millSec 000000  
                    __end_of_SendArray1 19D4                      __end_of_SendArray2 19FA  
                           __pdataBANK0 0060                     ReadArray@DeviceAddr 002C  
                         Open2@BaudRate 0029                         ReadArray@length 0028  
                    _SetTimer2_1millSec 000000                             __pbssCOMRAM 003F  
                             _WriteI2C1 17C4                   __size_of_SetFreq_8MHZ 0022  
                         __pcstackBANK0 0088                              ?_ReadArray 0025  
                          _OscFreqIndex 003E                       __size_of_getsI2C1 005A  
                              ?_GetFreq 0020                               __pintcode 0008  
                          ??_WriteArray 0026                                ?___aldiv 0020  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 19FA                             __smallconst 1000  
                            ?_WriteI2C1 0001                          __size_of_Open1 00E2  
                        __size_of_Open2 00D6          ??_LowPriority_InterruptHandler 0001  
                        _SetFreq_250KHZ 000000                          _SetFreq_500KHZ 000000  
                    __end_of_WriteArray 1718                 __size_of_SetTimer0_1Sec 001E  
                       ___aldiv@divisor 0024                         ___aldiv@counter 0088  
                              _IPR1bits 000F9F                                _PIE1bits 000F9D  
                              _IPR3bits 000FA5                                _PIE3bits 000FA3  
                ReadArray@RegisterValue 0026                                _PIR1bits 000F9E  
                              _PIR2bits 000FA1                                _PIR3bits 000FA4  
                              _RCONbits 000FD0                                _SSP1CON1 000FC6  
                              _SSP1CON2 000FC5                                _SSP1STAT 000FC7  
                   __end_of_TIMER0_1Sec 1033                             ??_ReadArray 0029  
                          _TIMER0_1mSec 1063                        SendArray1@length 0022  
                      SendArray2@length 0022                            _TIMER2_1msec 103D  
                             copy_data0 192C                               copy_data1 194C  
                         getsI2C1@rdptr 0021                                _ReadI2C1 1986  
                              _OpenI2C1 1A3A                        __size_of_GetFreq 0012  
                              __Hrparam 0000         ??_HighPriority_InterruptHandler 0012  
                              __Lrparam 0000                      ReadArray@DeviceAdd 002B  
                      __size_of___aldiv 014C                             ??_WriteI2C1 0020  
                              _getsI2C1 18BA                                __ptext10 14B0  
                              __ptext11 1592                                __ptext12 1718  
                              __ptext13 1268                                __ptext14 1A3A  
                              __ptext15 1A56                            _SSP1CON1bits 000FC6  
                          _SSP1CON2bits 000FC5                             _OSCCON2bits 000FD2  
                         __size_of_Open 00AC                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 01F8                       WriteI2C1@data_out 0021  
                          _SSP1STATbits 000FC7                             _TIMER0_1Sec 1029  
                     OpenI2C1@sync_mode 0021                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                          _SetTimer0_1Sec 1A1C  
                      WriteArray@ComRes 0029                                intlevel1 0000  
                              intlevel2 0000                              _RCSTA1bits 000FAB  
                            _RCSTA2bits 000F71                              _OSCCONbits 000FD3  
                      WriteArray@length 0025                            ___aldiv@sign 0089  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                __end_of_SetTimer0_1Sec 1A3A                             main@AccelID 009E  
