

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Aug 17 23:15:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    20  0000                     
    21 ;; Function _SetFreq_250KHZ is unused but had its address taken
    22  0000                     
    23 ;; Function _SetFreq_500KHZ is unused but had its address taken
    24  0000                     
    25 ;; Function _SetFreq_1MHZ is unused but had its address taken
    26  0000                     
    27 ;; Function _SetFreq_2MHZ is unused but had its address taken
    28  0000                     
    29 ;; Function _SetFreq_4MHZ is unused but had its address taken
    30  0000                     
    31 ;; Function _SetFreq_16MHZ is unused but had its address taken
    32  0000                     
    33 ;; Function _SetFreq_32MHZ is unused but had its address taken
    34  0000                     
    35 ;; Function _SetFreq_64MHZ is unused but had its address taken
    36  0000                     
    37                           	psect	idataCOMRAM
    38  0001F4                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for _Oscillator
    42  0001F4  0000               	dw	0
    43  0001F6  0000               	dw	0
    44  0001F8  0000               	dw	0
    45  0001FA  0000               	dw	0
    46  0001FC  0000               	dw	0
    47  0001FE  0000               	dw	0
    48  000200  01D2               	dw	_SetFreq_8MHZ& (0+65535)
    49  000202  0000               	dw	0
    50  000204  0000               	dw	0
    51  000206  0000               	dw	0
    52  000208  0210               	dw	_GetFreq& (0+65535)
    53                           
    54                           ;initializer for _OscFreq
    55  00020A  4240               	dw	16960
    56  00020C  000F               	dw	15
    57                           
    58                           ;initializer for _OscFreqIndex
    59  00020E  03                 	db	3
    60  0000                     _PinDirection	set	3986
    61  0000                     _PinFunction	set	3896
    62  0000                     _PinWrite	set	3977
    63  0000                     _OSCCON	set	4051
    64  0000                     _OSCCON2bits	set	4050
    65  0000                     _OSCCONbits	set	4051
    66  0000                     _OSCTUNEbits	set	3995
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  0001A4                     __pcinit:
    72                           	opt stack 0
    73  0001A4                     start_initialization:
    74                           	opt stack 0
    75  0001A4                     __initialization:
    76                           	opt stack 0
    77                           
    78                           ; Clear objects allocated to COMRAM (2 bytes)
    79  0001A4  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
    80  0001A6  6A44               	clrf	__pbssCOMRAM& (0+255),c
    81                           
    82                           ; Initialize objects allocated to COMRAM (27 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  0001A8  0EF4               	movlw	low __pidataCOMRAM
    85  0001AA  6EF6               	movwf	tblptrl,c
    86  0001AC  0E01               	movlw	high __pidataCOMRAM
    87  0001AE  6EF7               	movwf	tblptrh,c
    88  0001B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  0001B2  6EF8               	movwf	tblptru,c
    90  0001B4  EE00  F029         	lfsr	0,__pdataCOMRAM
    91  0001B8  EE10 F01B          	lfsr	1,27
    92  0001BC                     copy_data0:
    93  0001BC  0009               	tblrd		*+
    94  0001BE  CFF5 FFEE          	movff	tablat,postinc0
    95  0001C2  50E5               	movf	postdec1,w,c
    96  0001C4  50E1               	movf	fsr1l,w,c
    97  0001C6  E1FA               	bnz	copy_data0
    98  0001C8                     end_of_initialization:
    99                           	opt stack 0
   100  0001C8                     __end_of__initialization:
   101                           	opt stack 0
   102  0001C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   103  0001CA  6EF8               	movwf	tblptru,c
   104  0001CC  0100               	movlb	0
   105  0001CE  EF53  F000         	goto	_main	;jump to C main() function
   106                           tblptru	equ	0xFF8
   107                           tblptrh	equ	0xFF7
   108                           tblptrl	equ	0xFF6
   109                           tablat	equ	0xFF5
   110                           postinc0	equ	0xFEE
   111                           postdec1	equ	0xFE5
   112                           fsr1l	equ	0xFE1
   113                           
   114                           	psect	bssCOMRAM
   115  000044                     __pbssCOMRAM:
   116                           	opt stack 0
   117  000044                     _delayCount:
   118                           	opt stack 0
   119  000044                     	ds	2
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           postinc0	equ	0xFEE
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           
   128                           	psect	dataCOMRAM
   129  000029                     __pdataCOMRAM:
   130                           	opt stack 0
   131  000029                     _Oscillator:
   132                           	opt stack 0
   133  000029                     	ds	22
   134  00003F                     _OscFreq:
   135                           	opt stack 0
   136  00003F                     	ds	4
   137  000043                     _OscFreqIndex:
   138                           	opt stack 0
   139  000043                     	ds	1
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	cstackCOMRAM
   149  000001                     __pcstackCOMRAM:
   150                           	opt stack 0
   151  000001                     ??_LowPriority_InterruptHandler:
   152  000001                     
   153                           ; 1 bytes @ 0x0
   154  000001                     	ds	17
   155  000012                     ??_HighPriority_InterruptHandler:
   156                           
   157                           ; 0 bytes @ 0x11
   158  000012                     	ds	14
   159  000020                     ??_SetFreq_8MHZ:
   160  000020                     ?_GetFreq:
   161                           	opt stack 0
   162                           
   163                           ; 4 bytes @ 0x1F
   164  000020                     	ds	4
   165  000024                     ??_main:
   166                           
   167                           ; 0 bytes @ 0x23
   168  000024                     	ds	1
   169  000025                     main@y:
   170                           	opt stack 0
   171                           
   172                           ; 4 bytes @ 0x24
   173  000025                     	ds	4
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           postdec1	equ	0xFE5
   180                           fsr1l	equ	0xFE1
   181                           
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 32 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;  y               4   36[COMRAM] long 
   192 ;; Return value:  Size  Location     Type
   193 ;;		None               void
   194 ;; Registers used:
   195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   205 ;;Total ram usage:        5 bytes
   206 ;; Hardware stack levels required when called:    3
   207 ;; This function calls:
   208 ;;		_GetFreq
   209 ;;		_SetFreq_8MHZ
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216  0000A6                     __ptext0:
   217                           	opt stack 0
   218  0000A6                     _main:
   219                           	opt stack 28
   220                           
   221                           ;main.c: 36: long y;
   222                           ;main.c: 39: Oscillator.SetFreq_8MHZ();
   223                           
   224                           ;incstack = 0
   225  0000A6  EE20  F035         	lfsr	2,_Oscillator+12
   226  0000AA  D801               	call	u18
   227  0000AC  D00A               	goto	u19
   228  0000AE                     u18:
   229  0000AE  0005               	push	
   230  0000B0  6EFA               	movwf	pclath,c
   231  0000B2  50DE               	movf	postinc2,w,c
   232  0000B4  6EFD               	movwf	tosl,c
   233  0000B6  50DE               	movf	postinc2,w,c
   234  0000B8  6EFE               	movwf	tosh,c
   235  0000BA  50F8               	movf	tblptru,w,c
   236  0000BC  6EFF               	movwf	tosu,c
   237  0000BE  50FA               	movf	pclath,w,c
   238  0000C0  0012               	return		;indir
   239  0000C2                     u19:
   240                           
   241                           ;main.c: 40: y=Oscillator.GetFreq();
   242  0000C2  EE20  F03D         	lfsr	2,_Oscillator+20
   243  0000C6  D801               	call	u28
   244  0000C8  D00A               	goto	u29
   245  0000CA                     u28:
   246  0000CA  0005               	push	
   247  0000CC  6EFA               	movwf	pclath,c
   248  0000CE  50DE               	movf	postinc2,w,c
   249  0000D0  6EFD               	movwf	tosl,c
   250  0000D2  50DE               	movf	postinc2,w,c
   251  0000D4  6EFE               	movwf	tosh,c
   252  0000D6  50F8               	movf	tblptru,w,c
   253  0000D8  6EFF               	movwf	tosu,c
   254  0000DA  50FA               	movf	pclath,w,c
   255  0000DC  0012               	return		;indir
   256  0000DE                     u29:
   257  0000DE  C020  F025         	movff	?_GetFreq,main@y
   258  0000E2  C021  F026         	movff	?_GetFreq+1,main@y+1
   259  0000E6  C022  F027         	movff	?_GetFreq+2,main@y+2
   260  0000EA  C023  F028         	movff	?_GetFreq+3,main@y+3
   261                           
   262                           ;main.c: 42: (PinFunction.TX1 = 0, PinDirection.TX1 = 0 );
   263  0000EE  010F               	movlb	15	; () banked
   264  0000F0  010F               	movlb	15	; () banked
   265  0000F2  9D3A               	bcf	58,6,b	;volatile
   266                           
   267                           ; BSR set to: 15
   268  0000F4  9C94               	bcf	3988,6,c	;volatile
   269  0000F6                     l691:
   270                           
   271                           ;main.c: 45: {
   272                           ;main.c: 47: (PinWrite.TX1 =!PinWrite.TX1);
   273  0000F6  BC8B               	btfsc	3979,6,c	;volatile
   274  0000F8  D002               	goto	u30
   275  0000FA  0E01               	movlw	1
   276  0000FC  D001               	goto	u36
   277  0000FE                     u30:
   278  0000FE  0E00               	movlw	0
   279  000100                     u36:
   280  000100  6E24               	movwf	??_main& (0+255),c
   281  000102  3A24               	swapf	??_main,f,c
   282  000104  4624               	rlncf	??_main,f,c
   283  000106  4624               	rlncf	??_main,f,c
   284  000108  508B               	movf	3979,w,c	;volatile
   285  00010A  1824               	xorwf	??_main,w,c
   286  00010C  0BBF               	andlw	-65
   287  00010E  1824               	xorwf	??_main,w,c
   288  000110  6E8B               	movwf	3979,c	;volatile
   289                           
   290                           ;main.c: 48: for(delayCount = 0; delayCount< 100;delayCount++) _delay((unsigned int)((10
      +                          00)*(8000000/4000000.0)));;
   291  000112  0E00               	movlw	0
   292  000114  6E45               	movwf	_delayCount+1,c
   293  000116  0E00               	movlw	0
   294  000118  6E44               	movwf	_delayCount,c
   295  00011A  0E64               	movlw	100
   296  00011C  5C44               	subwf	_delayCount,w,c
   297  00011E  0E00               	movlw	0
   298  000120  5845               	subwfb	_delayCount+1,w,c
   299  000122  B0D8               	btfsc	status,0,c
   300  000124  D7E8               	goto	l691
   301  000126  0E03               	movlw	3
   302  000128  6E24               	movwf	??_main& (0+255),c
   303  00012A  0E98               	movlw	152
   304  00012C                     u77:
   305  00012C  2EE8               	decfsz	wreg,f,c
   306  00012E  D7FE               	goto	u77
   307  000130  2E24               	decfsz	??_main& (0+255),f,c
   308  000132  D7FC               	goto	u77
   309  000134  4A44               	infsnz	_delayCount,f,c
   310  000136  2A45               	incf	_delayCount+1,f,c
   311  000138  D7F0               	goto	L1
   312  00013A                     __end_of_main:
   313                           	opt stack 0
   314                           tosu	equ	0xFFF
   315                           tosh	equ	0xFFE
   316                           tosl	equ	0xFFD
   317                           pclath	equ	0xFFA
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           postinc2	equ	0xFDE
   327                           status	equ	0xFD8
   328                           
   329 ;; *************** function _SetFreq_8MHZ *****************
   330 ;; Defined at:
   331 ;;		line 85 in file "EAB_Oscillator.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      unsigned char 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    2
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text1
   360  0001D2                     __ptext1:
   361                           	opt stack 0
   362  0001D2                     _SetFreq_8MHZ:
   363                           	opt stack 28
   364                           
   365                           ;incstack = 0
   366  0001D2  50D3               	movf	4051,w,c	;volatile
   367  0001D4  0B8C               	andlw	140
   368  0001D6  0962               	iorlw	98
   369  0001D8  6ED3               	movwf	4051,c	;volatile
   370  0001DA  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   371  0001DC  0E06               	movlw	6
   372  0001DE  6E43               	movwf	_OscFreqIndex,c
   373  0001E0  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   374  0001E2  0E00               	movlw	0
   375  0001E4  6E3F               	movwf	_OscFreq,c
   376  0001E6  0E12               	movlw	18
   377  0001E8  6E40               	movwf	_OscFreq+1,c
   378  0001EA  0E7A               	movlw	122
   379  0001EC  6E41               	movwf	_OscFreq+2,c
   380  0001EE  0E00               	movlw	0
   381  0001F0  6E42               	movwf	_OscFreq+3,c
   382  0001F2  0012               	return	
   383  0001F4                     __end_of_SetFreq_8MHZ:
   384                           	opt stack 0
   385                           tosu	equ	0xFFF
   386                           tosh	equ	0xFFE
   387                           tosl	equ	0xFFD
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           postinc2	equ	0xFDE
   398                           status	equ	0xFD8
   399                           
   400 ;; *************** function _GetFreq *****************
   401 ;; Defined at:
   402 ;;		line 128 in file "EAB_Oscillator.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  4   31[COMRAM] long 
   409 ;; Registers used:
   410 ;;		None
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        4 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    2
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text2
   431  000210                     __ptext2:
   432                           	opt stack 0
   433  000210                     _GetFreq:
   434                           	opt stack 28
   435                           
   436                           ;incstack = 0
   437  000210  C03F  F020         	movff	_OscFreq,?_GetFreq
   438  000214  C040  F021         	movff	_OscFreq+1,?_GetFreq+1
   439  000218  C041  F022         	movff	_OscFreq+2,?_GetFreq+2
   440  00021C  C042  F023         	movff	_OscFreq+3,?_GetFreq+3
   441  000220  0012               	return	
   442  000222                     __end_of_GetFreq:
   443                           	opt stack 0
   444                           tosu	equ	0xFFF
   445                           tosh	equ	0xFFE
   446                           tosl	equ	0xFFD
   447                           pclath	equ	0xFFA
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           postinc2	equ	0xFDE
   457                           status	equ	0xFD8
   458                           
   459 ;; *************** function _LowPriority_InterruptHandler *****************
   460 ;; Defined at:
   461 ;;		line 21 in file "EAB_InterruptHandler.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		None
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:       17 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		Interrupt level 1
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	intcodelo
   490  000018                     __pintcodelo:
   491                           	opt stack 0
   492  000018                     _LowPriority_InterruptHandler:
   493                           	opt stack 28
   494                           
   495                           ;incstack = 0
   496  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
   497  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
   498  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
   499  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
   500  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
   501  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
   502  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
   503  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
   504  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
   505  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
   506  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
   507  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
   508  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
   509  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
   510  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
   511  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
   512  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
   513  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
   514  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
   515  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
   516  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
   517  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
   518  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
   519  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
   520  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
   521  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
   522  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
   523  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
   524  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
   525  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
   526  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
   527  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
   528  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
   529  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
   530  0000A0  0010               	retfie	
   531  0000A2                     __end_of_LowPriority_InterruptHandler:
   532                           	opt stack 0
   533                           tosu	equ	0xFFF
   534                           tosh	equ	0xFFE
   535                           tosl	equ	0xFFD
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           prodh	equ	0xFF4
   543                           prodl	equ	0xFF3
   544                           postinc0	equ	0xFEE
   545                           fsr0h	equ	0xFEA
   546                           fsr0l	equ	0xFE9
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1h	equ	0xFE2
   550                           fsr1l	equ	0xFE1
   551                           bsr	equ	0xFE0
   552                           postinc2	equ	0xFDE
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557 ;; *************** function _HighPriority_InterruptHandler *****************
   558 ;; Defined at:
   559 ;;		line 14 in file "EAB_InterruptHandler.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;		None               void
   566 ;; Registers used:
   567 ;;		None
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;Total ram usage:       14 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		Interrupt level 2
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	intcode
   587  000008                     __pintcode:
   588                           	opt stack 0
   589  000008                     _HighPriority_InterruptHandler:
   590                           	opt stack 28
   591                           
   592                           ;incstack = 0
   593  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
   594  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
   595  000010  EF9D  F000         	goto	int_func
   596                           tosu	equ	0xFFF
   597                           tosh	equ	0xFFE
   598                           tosl	equ	0xFFD
   599                           pclatu	equ	0xFFB
   600                           pclath	equ	0xFFA
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           prodh	equ	0xFF4
   606                           prodl	equ	0xFF3
   607                           postinc0	equ	0xFEE
   608                           fsr0h	equ	0xFEA
   609                           fsr0l	equ	0xFE9
   610                           wreg	equ	0xFE8
   611                           postdec1	equ	0xFE5
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           bsr	equ	0xFE0
   615                           postinc2	equ	0xFDE
   616                           fsr2h	equ	0xFDA
   617                           fsr2l	equ	0xFD9
   618                           status	equ	0xFD8
   619                           
   620                           	psect	intcode_body
   621  00013A                     __pintcode_body:
   622                           	opt stack 28
   623  00013A                     int_func:
   624                           	opt stack 28
   625  00013A  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
   626  00013E  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
   627  000142  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
   628  000146  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
   629  00014A  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
   630  00014E  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
   631  000152  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
   632  000156  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
   633  00015A  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
   634  00015E  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
   635  000162  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
   636  000166  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
   637  00016A  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
   638  00016E  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
   639  000172  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
   640  000176  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
   641  00017A  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
   642  00017E  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
   643  000182  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
   644  000186  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
   645  00018A  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
   646  00018E  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
   647  000192  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
   648  000196  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
   649  00019A  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
   650  00019E  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
   651  0001A2  0011               	retfie		f
   652  0001A4                     __end_of_HighPriority_InterruptHandler:
   653                           	opt stack 0
   654  0000                     tosu	equ	0xFFF
   655                           tosh	equ	0xFFE
   656                           tosl	equ	0xFFD
   657                           pclatu	equ	0xFFB
   658                           pclath	equ	0xFFA
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           prodh	equ	0xFF4
   664                           prodl	equ	0xFF3
   665                           postinc0	equ	0xFEE
   666                           fsr0h	equ	0xFEA
   667                           fsr0l	equ	0xFE9
   668                           wreg	equ	0xFE8
   669                           postdec1	equ	0xFE5
   670                           fsr1h	equ	0xFE2
   671                           fsr1l	equ	0xFE1
   672                           bsr	equ	0xFE0
   673                           postinc2	equ	0xFDE
   674                           fsr2h	equ	0xFDA
   675                           fsr2l	equ	0xFD9
   676                           status	equ	0xFD8
   677                           tosu	equ	0xFFF
   678                           tosh	equ	0xFFE
   679                           tosl	equ	0xFFD
   680                           pclatu	equ	0xFFB
   681                           pclath	equ	0xFFA
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           prodh	equ	0xFF4
   687                           prodl	equ	0xFF3
   688                           postinc0	equ	0xFEE
   689                           fsr0h	equ	0xFEA
   690                           fsr0l	equ	0xFE9
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1h	equ	0xFE2
   694                           fsr1l	equ	0xFE1
   695                           bsr	equ	0xFE0
   696                           postinc2	equ	0xFDE
   697                           fsr2h	equ	0xFDA
   698                           fsr2l	equ	0xFD9
   699                           status	equ	0xFD8
   700                           
   701                           	psect	rparam
   702  0000                     tosu	equ	0xFFF
   703                           tosh	equ	0xFFE
   704                           tosl	equ	0xFFD
   705                           pclatu	equ	0xFFB
   706                           pclath	equ	0xFFA
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           postinc0	equ	0xFEE
   714                           fsr0h	equ	0xFEA
   715                           fsr0l	equ	0xFE9
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           bsr	equ	0xFE0
   721                           postinc2	equ	0xFDE
   722                           fsr2h	equ	0xFDA
   723                           fsr2l	equ	0xFD9
   724                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_GetFreq

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0       0
                                             35 COMRAM     5     5      0
                            _GetFreq *
                       _SetFreq_8MHZ *
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetFreq *
   _SetFreq_8MHZ *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      45       1       72.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      12        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Aug 17 23:15:01 2014

                                    u30 00FE                                      u18 00AE  
                                    u19 00C2                                      u36 0100  
                                    u28 00CA                                      u29 00DE  
                                    u77 012C                                      bsr 000FE0  
                                   l691 00F6                                     tosl 000FFD  
                                   wreg 000FE8                            __CFG_LVP$OFF 000000  
                                  _main 00A6                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    pclat 000FFA  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00A2                         __end_of_GetFreq 0222  
                                 ?_main 0001                          __CFG_DEBUG$OFF 000000  
                                 main@y 0025                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                       __initialization 01A4                            __end_of_main 013A  
                                ??_main 0024                           __activetblptr 000002  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0024                              _Oscillator 0029  
                         ?_SetFreq_8MHZ 0001                            __pdataCOMRAM 0029  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                              __accesstop 0060  
               __end_of__initialization 01C8                          __pcstackCOMRAM 0001  
                        ??_SetFreq_8MHZ 0020                             _PinFunction 000F38  
                            _delayCount 0044                           _SetFreq_32MHZ 000000  
                         _SetFreq_16MHZ 000000   __end_of_HighPriority_InterruptHandler 01A4  
__size_of_HighPriority_InterruptHandler 019C           _HighPriority_InterruptHandler 0008  
                         _SetFreq_64MHZ 000000                                 _GetFreq 0210  
                               _OscFreq 003F                                 __Hparam 0000  
                               __Lparam 0000                                 __pcinit 01A4  
                               __ramtop 1000                                 __ptext0 00A6  
                               __ptext1 01D2                                 __ptext2 0210  
                        __pintcode_body 013A                    end_of_initialization 01C8  
                  __end_of_SetFreq_8MHZ 01F4                           __Lmediumconst 0000  
                               int_func 013A                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc2 000FDE  
  __end_of_LowPriority_InterruptHandler 00A2   __size_of_LowPriority_InterruptHandler 008A  
          _LowPriority_InterruptHandler 0018                        __CFG_FOSC$INTIO7 000000  
        ?_HighPriority_InterruptHandler 0001                           __pidataCOMRAM 01F4  
         ?_LowPriority_InterruptHandler 0001                     start_initialization 01A4  
                          _PinDirection 000F92                             __pbssCOMRAM 0044  
                 __size_of_SetFreq_8MHZ 0022                            _OscFreqIndex 0043  
                              ?_GetFreq 0020                               __pintcode 0008  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 01D2          ??_LowPriority_InterruptHandler 0001  
                        _SetFreq_250KHZ 000000                          _SetFreq_500KHZ 000000  
                             copy_data0 01BC                        __size_of_GetFreq 0012  
                              _PinWrite 000F89                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 0094                             _OSCTUNEbits 000F9B  
                              intlevel1 0000                                intlevel2 0000  
                            _OSCCONbits 000FD3  
