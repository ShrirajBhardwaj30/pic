

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Aug 07 11:16:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    30  0000                     
    31 ;; Function _SetFreq_250KHZ is unused but had its address taken
    32  0000                     
    33 ;; Function _SetFreq_500KHZ is unused but had its address taken
    34  0000                     
    35 ;; Function _SetFreq_1MHZ is unused but had its address taken
    36  0000                     
    37 ;; Function _SetFreq_2MHZ is unused but had its address taken
    38  0000                     
    39 ;; Function _SetFreq_4MHZ is unused but had its address taken
    40  0000                     
    41 ;; Function _SetFreq_16MHZ is unused but had its address taken
    42  0000                     
    43 ;; Function _SetFreq_32MHZ is unused but had its address taken
    44  0000                     
    45 ;; Function _SetFreq_64MHZ is unused but had its address taken
    46  0000                     
    47 ;; Function _SendArray1 is unused but had its address taken
    48  0000                     
    49 ;; Function _SendArray2 is unused but had its address taken
    50  0000                     
    51 ;; Function _SendString1 is unused but had its address taken
    52  0000                     
    53 ;; Function _SendString2 is unused but had its address taken
    54  0000                     
    55 ;; Function _ReadByte1 is unused but had its address taken
    56  0000                     
    57 ;; Function _ReadByte2 is unused but had its address taken
    58  0000                     
    59 ;; Function _EnableRx1interrupt is unused but had its address taken
    60  0000                     
    61 ;; Function _EnableRx2interrupt is unused but had its address taken
    62  0000                     
    63 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    64  0000                     
    65 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    66  0000                     
    67 ;; Function _SetTimer0_1millSec is unused but had its address taken
    68  0000                     
    69 ;; Function _SetTimer0 is unused but had its address taken
    70  0000                     
    71 ;; Function _Timer0Int is unused but had its address taken
    72  0000                     
    73 ;; Function _SetTimer1 is unused but had its address taken
    74  0000                     
    75 ;; Function _Timer1Int is unused but had its address taken
    76  0000                     
    77 ;; Function _SetTimer2_1millSec is unused but had its address taken
    78  0000                     
    79 ;; Function _SetTimer2_100microSec is unused but had its address taken
    80  0000                     
    81 ;; Function _SetTimer2 is unused but had its address taken
    82  0000                     
    83 ;; Function _Timer2Int is unused but had its address taken
    84  0000                     
    85                           	psect	idataCOMRAM
    86  00157C                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _Serial1
    90  00157C  11BC               	dw	_Open1& (0+65535)
    91  00157E  158E               	dw	_SendByte1& (0+65535)
    92  001580  0000               	dw	0
    93  001582  0000               	dw	0
    94  001584  0000               	dw	0
    95  001586  0000               	dw	0
    96                           
    97                           ;initializer for _OscFreq
    98  001588  4240               	dw	16960
    99  00158A  000F               	dw	15
   100                           
   101                           ;initializer for _OscFreqIndex
   102  00158C  03                 	db	3
   103                           
   104                           	psect	idataBANK0
   105  0014FC                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _Oscillator
   109  0014FC  0000               	dw	0
   110  0014FE  0000               	dw	0
   111  001500  0000               	dw	0
   112  001502  0000               	dw	0
   113  001504  0000               	dw	0
   114  001506  0000               	dw	0
   115  001508  152A               	dw	_SetFreq_8MHZ& (0+65535)
   116  00150A  0000               	dw	0
   117  00150C  0000               	dw	0
   118  00150E  0000               	dw	0
   119  001510  156A               	dw	_GetFreq& (0+65535)
   120                           
   121                           ;initializer for _Serial2
   122  001512  129E               	dw	_Open2& (0+65535)
   123  001514  159C               	dw	_SendByte2& (0+65535)
   124  001516  0000               	dw	0
   125  001518  0000               	dw	0
   126  00151A  0000               	dw	0
   127  00151C  0000               	dw	0
   128                           
   129                           ;initializer for main@F8969
   130  00151E  48                 	db	72
   131  00151F  65                 	db	101
   132  001520  6C                 	db	108
   133  001521  6C                 	db	108
   134  001522  6F                 	db	111
   135  001523  20                 	db	32
   136  001524  00                 	db	0
   137                           
   138                           ;initializer for main@F8967
   139  001525  01                 	db	1
   140  001526  02                 	db	2
   141  001527  03                 	db	3
   142  001528  04                 	db	4
   143  001529  05                 	db	5
   144                           
   145                           	psect	smallconst
   146  001000                     __psmallconst:
   147                           	opt stack 0
   148  001000  00                 	db	0
   149  001001                     _Timer0:
   150                           	opt stack 0
   151  001001  154C               	dw	_SetTimer0_1Sec& (0+65535)
   152  001003  0000               	dw	0
   153  001005  0000               	dw	0
   154  001007  0000               	dw	0
   155  001009  0000               	dw	0
   156  00100B  0000               	dw	0
   157  00100D  3A                 	db	58
   158  00100E  2C                 	db	44
   159  00100F  7E                 	db	126
   160  001010                     __end_of_Timer0:
   161                           	opt stack 0
   162  001010                     _Timer2:
   163                           	opt stack 0
   164  001010  0000               	dw	0
   165  001012  0000               	dw	0
   166  001014  0000               	dw	0
   167  001016  0000               	dw	0
   168  001018  AA                 	db	170
   169  001019  B3                 	db	179
   170  00101A  3E                 	db	62
   171  00101B  98                 	db	152
   172  00101C  BA                 	db	186
   173  00101D  DC                 	db	220
   174  00101E  FE                 	db	254
   175  00101F                     __end_of_Timer2:
   176                           	opt stack 0
   177  00101F                     _TIMER0_130mSec:
   178                           	opt stack 0
   179  00101F  C1                 	db	193
   180  001020  C4                 	db	196
   181  001021  C5                 	db	197
   182  001022  C6                 	db	198
   183  001023  C7                 	db	199
   184  001024  80                 	db	128
   185  001025  81                 	db	129
   186  001026  82                 	db	130
   187  001027  83                 	db	131
   188  001028  84                 	db	132
   189  001029                     __end_of_TIMER0_130mSec:
   190                           	opt stack 0
   191  001029                     _TIMER0_1Sec:
   192                           	opt stack 0
   193  001029  C4                 	db	196
   194  00102A  C7                 	db	199
   195  00102B  80                 	db	128
   196  00102C  81                 	db	129
   197  00102D  82                 	db	130
   198  00102E  83                 	db	131
   199  00102F  84                 	db	132
   200  001030  85                 	db	133
   201  001031  86                 	db	134
   202  001032  87                 	db	135
   203  001033                     __end_of_TIMER0_1Sec:
   204                           	opt stack 0
   205  001033                     _TIMER2_100usec:
   206                           	opt stack 0
   207  001033  84                 	db	132
   208  001034  84                 	db	132
   209  001035  84                 	db	132
   210  001036  84                 	db	132
   211  001037  84                 	db	132
   212  001038  84                 	db	132
   213  001039  8C                 	db	140
   214  00103A  9C                 	db	156
   215  00103B  BC                 	db	188
   216  00103C  00                 	db	0
   217  00103D                     __end_of_TIMER2_100usec:
   218                           	opt stack 0
   219  00103D                     _TIMER2_1msec:
   220                           	opt stack 0
   221  00103D  84                 	db	132
   222  00103E  84                 	db	132
   223  00103F  84                 	db	132
   224  001040  84                 	db	132
   225  001041  CC                 	db	204
   226  001042  CC                 	db	204
   227  001043  CC                 	db	204
   228  001044  A5                 	db	165
   229  001045  CD                 	db	205
   230  001046  A7                 	db	167
   231  001047                     __end_of_TIMER2_1msec:
   232                           	opt stack 0
   233  001047                     _TIMER2_PR2_1msec:
   234                           	opt stack 0
   235  001047  08                 	db	8
   236  001048  3E                 	db	62
   237  001049  7D                 	db	125
   238  00104A  FA                 	db	250
   239  00104B  32                 	db	50
   240  00104C  64                 	db	100
   241  00104D  C8                 	db	200
   242  00104E  C8                 	db	200
   243  00104F  C8                 	db	200
   244  001050  C8                 	db	200
   245  001051                     __end_of_TIMER2_PR2_1msec:
   246                           	opt stack 0
   247  001051                     _TIMER0_16mSec:
   248                           	opt stack 0
   249  001051  C1                 	db	193
   250  001052  C2                 	db	194
   251  001053  C3                 	db	195
   252  001054  C4                 	db	196
   253  001055  C5                 	db	197
   254  001056  C6                 	db	198
   255  001057  C7                 	db	199
   256  001058  80                 	db	128
   257  001059  81                 	db	129
   258  00105A                     __end_of_TIMER0_16mSec:
   259                           	opt stack 0
   260  00105A                     _TIMER2_PR2_100usec:
   261                           	opt stack 0
   262  00105A  06                 	db	6
   263  00105B  0D                 	db	13
   264  00105C  19                 	db	25
   265  00105D  32                 	db	50
   266  00105E  64                 	db	100
   267  00105F  C8                 	db	200
   268  001060  C8                 	db	200
   269  001061  C8                 	db	200
   270  001062  C8                 	db	200
   271  001063                     __end_of_TIMER2_PR2_100usec:
   272                           	opt stack 0
   273  001063                     _TIMER0_1mSec:
   274                           	opt stack 0
   275  001063  C0                 	db	192
   276  001064  C1                 	db	193
   277  001065  C2                 	db	194
   278  001066  C3                 	db	195
   279  001067  C4                 	db	196
   280  001068  C5                 	db	197
   281  001069                     __end_of_TIMER0_1mSec:
   282                           	opt stack 0
   283  001069                     _Timer1:
   284                           	opt stack 0
   285  001069  0000               	dw	0
   286  00106B  0000               	dw	0
   287  00106D  3A                 	db	58
   288  00106E                     __end_of_Timer1:
   289                           	opt stack 0
   290  0000                     _PinDirection	set	3986
   291  0000                     _PinFunction	set	3896
   292  0000                     _BAUDCON1bits	set	4024
   293  0000                     _BAUDCON2bits	set	3952
   294  0000                     _INTCONbits	set	4082
   295  0000                     _IPR1bits	set	3999
   296  0000                     _IPR3bits	set	4005
   297  0000                     _OSCCON	set	4051
   298  0000                     _OSCCON2bits	set	4050
   299  0000                     _OSCCONbits	set	4051
   300  0000                     _OSCTUNEbits	set	3995
   301  0000                     _PIE1bits	set	3997
   302  0000                     _PIE3bits	set	4003
   303  0000                     _PIR1bits	set	3998
   304  0000                     _PIR3bits	set	4004
   305  0000                     _PR2	set	4027
   306  0000                     _RC1REG	set	4014
   307  0000                     _RC2REG	set	3956
   308  0000                     _RCONbits	set	4048
   309  0000                     _RCSTA1bits	set	4011
   310  0000                     _RCSTA2bits	set	3953
   311  0000                     _SPBRG1	set	4015
   312  0000                     _SPBRG2	set	3957
   313  0000                     _SPBRGH1	set	4016
   314  0000                     _SPBRGH2	set	3958
   315  0000                     _T0CON	set	4053
   316  0000                     _T0CONbits	set	4053
   317  0000                     _T1CONbits	set	4045
   318  0000                     _T2CON	set	4026
   319  0000                     _T2CONbits	set	4026
   320  0000                     _TX1REG	set	4013
   321  0000                     _TX2REG	set	3955
   322  0000                     _TXSTA1bits	set	4012
   323  0000                     _TXSTA2bits	set	3954
   324                           
   325                           ; #config settings
   326  00106E  00                 	db	0	; dummy byte at the end
   327  0000                     
   328                           	psect	cinit
   329  0014B2                     __pcinit:
   330                           	opt stack 0
   331  0014B2                     start_initialization:
   332                           	opt stack 0
   333  0014B2                     __initialization:
   334                           	opt stack 0
   335                           
   336                           ; Clear objects allocated to COMRAM (2 bytes)
   337  0014B2  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   338  0014B4  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   339                           
   340                           ; Initialize objects allocated to BANK0 (46 bytes)
   341                           ; load TBLPTR registers with __pidataBANK0
   342  0014B6  0EFC               	movlw	low __pidataBANK0
   343  0014B8  6EF6               	movwf	tblptrl,c
   344  0014BA  0E14               	movlw	high __pidataBANK0
   345  0014BC  6EF7               	movwf	tblptrh,c
   346  0014BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   347  0014C0  6EF8               	movwf	tblptru,c
   348  0014C2  EE00  F060         	lfsr	0,__pdataBANK0
   349  0014C6  EE10 F02E          	lfsr	1,46
   350  0014CA                     copy_data0:
   351  0014CA  0009               	tblrd		*+
   352  0014CC  CFF5 FFEE          	movff	tablat,postinc0
   353  0014D0  50E5               	movf	postdec1,w,c
   354  0014D2  50E1               	movf	fsr1l,w,c
   355  0014D4  E1FA               	bnz	copy_data0
   356                           
   357                           ; Initialize objects allocated to COMRAM (17 bytes)
   358                           ; load TBLPTR registers with __pidataCOMRAM
   359  0014D6  0E7C               	movlw	low __pidataCOMRAM
   360  0014D8  6EF6               	movwf	tblptrl,c
   361  0014DA  0E15               	movlw	high __pidataCOMRAM
   362  0014DC  6EF7               	movwf	tblptrh,c
   363  0014DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   364  0014E0  6EF8               	movwf	tblptru,c
   365  0014E2  EE00  F02D         	lfsr	0,__pdataCOMRAM
   366  0014E6  EE10 F011          	lfsr	1,17
   367  0014EA                     copy_data1:
   368  0014EA  0009               	tblrd		*+
   369  0014EC  CFF5 FFEE          	movff	tablat,postinc0
   370  0014F0  50E5               	movf	postdec1,w,c
   371  0014F2  50E1               	movf	fsr1l,w,c
   372  0014F4  E1FA               	bnz	copy_data1
   373  0014F6                     end_of_initialization:
   374                           	opt stack 0
   375  0014F6                     __end_of__initialization:
   376                           	opt stack 0
   377  0014F6  0100               	movlb	0
   378  0014F8  EFBA  F009         	goto	_main	;jump to C main() function
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	bssCOMRAM
   388  00003E                     __pbssCOMRAM:
   389                           	opt stack 0
   390  00003E                     _delayCount:
   391                           	opt stack 0
   392  00003E                     	ds	2
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	dataCOMRAM
   402  00002D                     __pdataCOMRAM:
   403                           	opt stack 0
   404  00002D                     _Serial1:
   405                           	opt stack 0
   406  00002D                     	ds	12
   407  000039                     _OscFreq:
   408                           	opt stack 0
   409  000039                     	ds	4
   410  00003D                     _OscFreqIndex:
   411                           	opt stack 0
   412  00003D                     	ds	1
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	dataBANK0
   422  000060                     __pdataBANK0:
   423                           	opt stack 0
   424  000060                     _Oscillator:
   425                           	opt stack 0
   426  000060                     	ds	22
   427  000076                     _Serial2:
   428                           	opt stack 0
   429  000076                     	ds	12
   430  000082                     main@F8969:
   431                           	opt stack 0
   432  000082                     	ds	7
   433  000089                     main@F8967:
   434                           	opt stack 0
   435  000089                     	ds	5
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	cstackBANK0
   445  00008E                     __pcstackBANK0:
   446                           	opt stack 0
   447  00008E                     ___aldiv@counter:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x0
   451  00008E                     	ds	1
   452  00008F                     ___aldiv@sign:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x1
   456  00008F                     	ds	1
   457  000090                     ___aldiv@quotient:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x2
   461  000090                     	ds	4
   462  000094                     ??_Open1:
   463  000094                     ??_Open2:
   464                           
   465                           ; 0 bytes @ 0x6
   466  000094                     	ds	8
   467  00009C                     Open1@freq:
   468                           	opt stack 0
   469  00009C                     Open2@freq:
   470                           	opt stack 0
   471                           
   472                           ; 4 bytes @ 0xE
   473  00009C                     	ds	4
   474  0000A0                     Open1@BRGval:
   475                           	opt stack 0
   476  0000A0                     Open2@temp:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480  0000A0                     	ds	2
   481  0000A2                     ??_main:
   482                           
   483                           ; 0 bytes @ 0x14
   484  0000A2                     	ds	2
   485  0000A4                     main@StringData:
   486                           	opt stack 0
   487                           
   488                           ; 7 bytes @ 0x16
   489  0000A4                     	ds	7
   490  0000AB                     main@ArrayData:
   491                           	opt stack 0
   492                           
   493                           ; 5 bytes @ 0x1D
   494  0000AB                     	ds	5
   495  0000B0                     main@data:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x22
   499  0000B0                     	ds	1
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackCOMRAM
   509  000001                     __pcstackCOMRAM:
   510                           	opt stack 0
   511  000001                     ??_LowPriority_InterruptHandler:
   512  000001                     
   513                           ; 1 bytes @ 0x0
   514  000001                     	ds	17
   515  000012                     ??_HighPriority_InterruptHandler:
   516                           
   517                           ; 0 bytes @ 0x11
   518  000012                     	ds	14
   519  000020                     ??_SetFreq_8MHZ:
   520  000020                     ?_GetFreq:
   521                           	opt stack 0
   522  000020                     ?___aldiv:
   523                           	opt stack 0
   524  000020                     SendByte1@Data:
   525                           	opt stack 0
   526  000020                     SendByte2@Data:
   527                           	opt stack 0
   528  000020                     ___aldiv@dividend:
   529                           	opt stack 0
   530                           
   531                           ; 4 bytes @ 0x1F
   532  000020                     	ds	4
   533  000024                     ___aldiv@divisor:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x23
   537  000024                     	ds	4
   538  000028                     ??___aldiv:
   539                           
   540                           ; 0 bytes @ 0x27
   541  000028                     	ds	1
   542  000029                     Open1@BaudRate:
   543                           	opt stack 0
   544  000029                     Open2@BaudRate:
   545                           	opt stack 0
   546                           
   547                           ; 4 bytes @ 0x28
   548  000029                     	ds	4
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 20 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  StringData      7   22[BANK0 ] unsigned char [7]
   567 ;;  ArrayData       5   29[BANK0 ] unsigned char [5]
   568 ;;  data            1   34[BANK0 ] unsigned char 
   569 ;;  RcvByte         1    0        unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;Total ram usage:       15 bytes
   584 ;; Hardware stack levels required when called:    4
   585 ;; This function calls:
   586 ;;		_Open1
   587 ;;		_Open2
   588 ;;		_SendByte1
   589 ;;		_SendByte2
   590 ;;		_SetFreq_8MHZ
   591 ;;		_SetTimer0_1Sec
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text0
   598  001374                     __ptext0:
   599                           	opt stack 0
   600  001374                     _main:
   601                           	opt stack 26
   602                           
   603                           ;main.c: 23: char data = 'a', RcvByte;
   604                           
   605                           ;incstack = 0
   606  001374  0100               	movlb	0	; () banked
   607  001376  6FA2               	movwf	??_main& (0+255),b
   608  001378  0E61               	movlw	97
   609  00137A  0100               	movlb	0	; () banked
   610  00137C  0100               	movlb	0	; () banked
   611  00137E  6FB0               	movwf	main@data& (0+255),b
   612  001380  0100               	movlb	0	; () banked
   613  001382  51A2               	movf	??_main& (0+255),w,b
   614                           
   615                           ; BSR set to: 0
   616                           ;main.c: 24: char ArrayData[5] ={1,2,3,4,5};
   617  001384  EE20  F089         	lfsr	2,main@F8967
   618  001388  EE10  F0AB         	lfsr	1,main@ArrayData
   619  00138C  0E05               	movlw	5
   620  00138E                     u621:
   621  00138E  CFDE FFE6          	movff	postinc2,postinc1
   622  001392  2EE8               	decfsz	wreg,f,c
   623  001394  D7FC               	goto	u621
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 25: char StringData[] ="Hello ";
   627  001396  EE20  F082         	lfsr	2,main@F8969
   628  00139A  EE10  F0A4         	lfsr	1,main@StringData
   629  00139E  0E07               	movlw	7
   630  0013A0                     u631:
   631  0013A0  CFDE FFE6          	movff	postinc2,postinc1
   632  0013A4  2EE8               	decfsz	wreg,f,c
   633  0013A6  D7FC               	goto	u631
   634                           
   635                           ; BSR set to: 0
   636                           ;main.c: 28: Oscillator.SetFreq_8MHZ();
   637  0013A8  D801               	call	u648
   638  0013AA  D00C               	goto	u649
   639  0013AC                     u648:
   640  0013AC  0005               	push	
   641  0013AE  6EFA               	movwf	pclath,c
   642  0013B0  0100               	movlb	0	; () banked
   643  0013B2  0100               	movlb	0	; () banked
   644  0013B4  516C               	movf	(_Oscillator+12)& (0+255),w,b
   645  0013B6  6EFD               	movwf	tosl,c
   646  0013B8  0100               	movlb	0	; () banked
   647  0013BA  516D               	movf	(_Oscillator+13)& (0+255),w,b
   648  0013BC  6EFE               	movwf	tosh,c
   649  0013BE  6AFF               	clrf	tosu,c
   650  0013C0  50FA               	movf	pclath,w,c
   651  0013C2  0012               	return		;indir
   652  0013C4                     u649:
   653                           
   654                           ;main.c: 29: Timer0.SetPeriod_1Sec();
   655  0013C4  0E01               	movlw	low _Timer0
   656  0013C6  6EF6               	movwf	tblptrl,c
   657  0013C8  0E10               	movlw	high _Timer0
   658  0013CA  6EF7               	movwf	tblptrh,c
   659  0013CC  0E00               	movlw	low (_Timer0 shr (0+16))
   660  0013CE  6EF8               	movwf	tblptru,c
   661  0013D0  0009               	tblrd		*+
   662  0013D2  CFF5 F0A2          	movff	tablat,??_main
   663  0013D6  0009               	tblrd		*+
   664  0013D8  CFF5 F0A3          	movff	tablat,??_main+1
   665  0013DC  D801               	call	u658
   666  0013DE  D00A               	goto	u659
   667  0013E0                     u658:
   668  0013E0  0005               	push	
   669  0013E2  6EFA               	movwf	pclath,c
   670  0013E4  0100               	movlb	0	; () banked
   671  0013E6  51A2               	movf	??_main& (0+255),w,b
   672  0013E8  6EFD               	movwf	tosl,c
   673  0013EA  51A3               	movf	(??_main+1)& (0+255),w,b
   674  0013EC  6EFE               	movwf	tosh,c
   675  0013EE  6AFF               	clrf	tosu,c
   676  0013F0  50FA               	movf	pclath,w,c
   677  0013F2  0012               	return		;indir
   678  0013F4                     u659:
   679                           
   680                           ;main.c: 32: Serial2.Open(9600);
   681  0013F4  0E80               	movlw	128
   682  0013F6  6E29               	movwf	Open2@BaudRate,c
   683  0013F8  0E25               	movlw	37
   684  0013FA  6E2A               	movwf	Open2@BaudRate+1,c
   685  0013FC  0E00               	movlw	0
   686  0013FE  6E2B               	movwf	Open2@BaudRate+2,c
   687  001400  0E00               	movlw	0
   688  001402  6E2C               	movwf	Open2@BaudRate+3,c
   689  001404  D801               	call	u668
   690  001406  D00C               	goto	l1558
   691  001408                     u668:
   692  001408  0005               	push	
   693  00140A  6EFA               	movwf	pclath,c
   694  00140C  0100               	movlb	0	; () banked
   695  00140E  0100               	movlb	0	; () banked
   696  001410  5176               	movf	_Serial2& (0+255),w,b
   697  001412  6EFD               	movwf	tosl,c
   698  001414  0100               	movlb	0	; () banked
   699  001416  5177               	movf	(_Serial2+1)& (0+255),w,b
   700  001418  6EFE               	movwf	tosh,c
   701  00141A  6AFF               	clrf	tosu,c
   702  00141C  50FA               	movf	pclath,w,c
   703  00141E  0012               	return		;indir
   704  001420                     l1558:
   705                           
   706                           ;main.c: 36: {
   707                           ;main.c: 38: if(INTCONbits.TMR0IF)
   708  001420  A4F2               	btfss	intcon,2,c	;volatile
   709  001422  D7FE               	goto	l1558
   710                           
   711                           ;main.c: 39: {
   712                           ;main.c: 40: INTCONbits.TMR0IF = 0;
   713  001424  94F2               	bcf	intcon,2,c	;volatile
   714                           
   715                           ;main.c: 42: Serial2.SendByte(data);
   716  001426  D801               	call	u688
   717  001428  D7FB               	goto	l1558
   718  00142A                     u688:
   719  00142A  0005               	push	
   720  00142C  6EFA               	movwf	pclath,c
   721  00142E  0100               	movlb	0	; () banked
   722  001430  0100               	movlb	0	; () banked
   723  001432  5178               	movf	(_Serial2+2)& (0+255),w,b
   724  001434  6EFD               	movwf	tosl,c
   725  001436  0100               	movlb	0	; () banked
   726  001438  5179               	movf	(_Serial2+3)& (0+255),w,b
   727  00143A  6EFE               	movwf	tosh,c
   728  00143C  6AFF               	clrf	tosu,c
   729  00143E  50FA               	movf	pclath,w,c
   730  001440  0100               	movlb	0	; () banked
   731  001442  0100               	movlb	0	; () banked
   732  001444  51B0               	movf	main@data& (0+255),w,b
   733  001446  0012               	return		;indir
   734  001448                     __end_of_main:
   735                           	opt stack 0
   736                           tosu	equ	0xFFF
   737                           tosh	equ	0xFFE
   738                           tosl	equ	0xFFD
   739                           pclath	equ	0xFFA
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           intcon	equ	0xFF2
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postinc1	equ	0xFE6
   748                           postdec1	equ	0xFE5
   749                           fsr1l	equ	0xFE1
   750                           postinc2	equ	0xFDE
   751                           
   752 ;; *************** function _SetTimer0_1Sec *****************
   753 ;; Defined at:
   754 ;;		line 54 in file "EAB_Timer.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      unsigned char 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    2
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text1
   783  00154C                     __ptext1:
   784                           	opt stack 0
   785  00154C                     _SetTimer0_1Sec:
   786                           	opt stack 27
   787                           
   788                           ;incstack = 0
   789  00154C  503D               	movf	_OscFreqIndex,w,c
   790  00154E  0D01               	mullw	1
   791  001550  0E29               	movlw	low _TIMER0_1Sec
   792  001552  24F3               	addwf	prodl,w,c
   793  001554  6EF6               	movwf	tblptrl,c
   794  001556  0E10               	movlw	high _TIMER0_1Sec
   795  001558  20F4               	addwfc	prodh,w,c
   796  00155A  6EF7               	movwf	tblptrh,c
   797  00155C  6AF8               	clrf	tblptru,c
   798  00155E  0E00               	movlw	low (__mediumconst shr (0+16))
   799  001560  22F8               	addwfc	tblptru,f,c
   800  001562  0008               	tblrd		*
   801  001564  CFF5 FFD5          	movff	tablat,4053	;volatile
   802  001568  0012               	return	
   803  00156A                     __end_of_SetTimer0_1Sec:
   804                           	opt stack 0
   805                           tosu	equ	0xFFF
   806                           tosh	equ	0xFFE
   807                           tosl	equ	0xFFD
   808                           pclath	equ	0xFFA
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           prodh	equ	0xFF4
   814                           prodl	equ	0xFF3
   815                           intcon	equ	0xFF2
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postinc1	equ	0xFE6
   819                           postdec1	equ	0xFE5
   820                           fsr1l	equ	0xFE1
   821                           postinc2	equ	0xFDE
   822                           
   823 ;; *************** function _SetFreq_8MHZ *****************
   824 ;; Defined at:
   825 ;;		line 85 in file "EAB_Oscillator.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      unsigned char 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        1 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    2
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text2
   854  00152A                     __ptext2:
   855                           	opt stack 0
   856  00152A                     _SetFreq_8MHZ:
   857                           	opt stack 27
   858                           
   859                           ;incstack = 0
   860  00152A  50D3               	movf	4051,w,c	;volatile
   861  00152C  0B8C               	andlw	140
   862  00152E  0962               	iorlw	98
   863  001530  6ED3               	movwf	4051,c	;volatile
   864  001532  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   865  001534  0E06               	movlw	6
   866  001536  6E3D               	movwf	_OscFreqIndex,c
   867  001538  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   868  00153A  0E00               	movlw	0
   869  00153C  6E39               	movwf	_OscFreq,c
   870  00153E  0E12               	movlw	18
   871  001540  6E3A               	movwf	_OscFreq+1,c
   872  001542  0E7A               	movlw	122
   873  001544  6E3B               	movwf	_OscFreq+2,c
   874  001546  0E00               	movlw	0
   875  001548  6E3C               	movwf	_OscFreq+3,c
   876  00154A  0012               	return	
   877  00154C                     __end_of_SetFreq_8MHZ:
   878                           	opt stack 0
   879                           tosu	equ	0xFFF
   880                           tosh	equ	0xFFE
   881                           tosl	equ	0xFFD
   882                           pclath	equ	0xFFA
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           prodh	equ	0xFF4
   888                           prodl	equ	0xFF3
   889                           intcon	equ	0xFF2
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postinc1	equ	0xFE6
   893                           postdec1	equ	0xFE5
   894                           fsr1l	equ	0xFE1
   895                           postinc2	equ	0xFDE
   896                           
   897 ;; *************** function _SendByte1 *****************
   898 ;; Defined at:
   899 ;;		line 87 in file "EAB_Serial.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  Data            1    wreg     unsigned char 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  Data            1   31[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      unsigned char 
   906 ;; Registers used:
   907 ;;		wreg
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        1 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    2
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text3
   928  00158E                     __ptext3:
   929                           	opt stack 0
   930  00158E                     _SendByte1:
   931                           	opt stack 27
   932                           
   933                           ;incstack = 0
   934                           ;SendByte1@Data stored from wreg
   935  00158E  CFE8 F020          	movff	wreg,SendByte1@Data
   936  001592                     l195:
   937  001592  A2AC               	btfss	4012,1,c	;volatile
   938  001594  D7FE               	goto	l195
   939  001596  C020  FFAD         	movff	SendByte1@Data,4013	;volatile
   940  00159A  0012               	return	
   941  00159C                     __end_of_SendByte1:
   942                           	opt stack 0
   943                           tosu	equ	0xFFF
   944                           tosh	equ	0xFFE
   945                           tosl	equ	0xFFD
   946                           pclath	equ	0xFFA
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           prodh	equ	0xFF4
   952                           prodl	equ	0xFF3
   953                           intcon	equ	0xFF2
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postinc1	equ	0xFE6
   957                           postdec1	equ	0xFE5
   958                           fsr1l	equ	0xFE1
   959                           postinc2	equ	0xFDE
   960                           
   961 ;; *************** function _SendByte2 *****************
   962 ;; Defined at:
   963 ;;		line 94 in file "EAB_Serial.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  Data            1    wreg     unsigned char 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  Data            1   31[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      unsigned char 
   970 ;; Registers used:
   971 ;;		wreg
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;Total ram usage:        1 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text4
   992  00159C                     __ptext4:
   993                           	opt stack 0
   994  00159C                     _SendByte2:
   995                           	opt stack 27
   996                           
   997                           ;incstack = 0
   998                           ;SendByte2@Data stored from wreg
   999  00159C  CFE8 F020          	movff	wreg,SendByte2@Data
  1000  0015A0                     l201:
  1001  0015A0  A272               	btfss	3954,1,c	;volatile
  1002  0015A2  D7FE               	goto	l201
  1003  0015A4  C020  FF73         	movff	SendByte2@Data,3955	;volatile
  1004  0015A8  0012               	return	
  1005  0015AA                     __end_of_SendByte2:
  1006                           	opt stack 0
  1007                           tosu	equ	0xFFF
  1008                           tosh	equ	0xFFE
  1009                           tosl	equ	0xFFD
  1010                           pclath	equ	0xFFA
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           prodh	equ	0xFF4
  1016                           prodl	equ	0xFF3
  1017                           intcon	equ	0xFF2
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postinc1	equ	0xFE6
  1021                           postdec1	equ	0xFE5
  1022                           fsr1l	equ	0xFE1
  1023                           postinc2	equ	0xFDE
  1024                           
  1025 ;; *************** function _Open1 *****************
  1026 ;; Defined at:
  1027 ;;		line 33 in file "EAB_Serial.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  BaudRate        4   40[COMRAM] long 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  freq            4   14[BANK0 ] long 
  1032 ;;  BRGval          2   18[BANK0 ] int 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      unsigned char 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;Total ram usage:       18 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		_GetFreq
  1051 ;;		___aldiv
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text5
  1058  0011BC                     __ptext5:
  1059                           	opt stack 0
  1060  0011BC                     _Open1:
  1061                           	opt stack 26
  1062                           
  1063                           ;incstack = 0
  1064  0011BC  D801               	call	u698
  1065  0011BE  D00C               	goto	u699
  1066  0011C0                     u698:
  1067  0011C0  0005               	push	
  1068  0011C2  6EFA               	movwf	pclath,c
  1069  0011C4  0100               	movlb	0	; () banked
  1070  0011C6  0100               	movlb	0	; () banked
  1071  0011C8  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1072  0011CA  6EFD               	movwf	tosl,c
  1073  0011CC  0100               	movlb	0	; () banked
  1074  0011CE  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1075  0011D0  6EFE               	movwf	tosh,c
  1076  0011D2  6AFF               	clrf	tosu,c
  1077  0011D4  50FA               	movf	pclath,w,c
  1078  0011D6  0012               	return		;indir
  1079  0011D8                     u699:
  1080  0011D8  C020  F09C         	movff	?_GetFreq,Open1@freq
  1081  0011DC  C021  F09D         	movff	?_GetFreq+1,Open1@freq+1
  1082  0011E0  C022  F09E         	movff	?_GetFreq+2,Open1@freq+2
  1083  0011E4  C023  F09F         	movff	?_GetFreq+3,Open1@freq+3
  1084  0011E8  C09C  F020         	movff	Open1@freq,___aldiv@dividend
  1085  0011EC  C09D  F021         	movff	Open1@freq+1,___aldiv@dividend+1
  1086  0011F0  C09E  F022         	movff	Open1@freq+2,___aldiv@dividend+2
  1087  0011F4  C09F  F023         	movff	Open1@freq+3,___aldiv@dividend+3
  1088  0011F8  C029  F094         	movff	Open1@BaudRate,??_Open1
  1089  0011FC  C02A  F095         	movff	Open1@BaudRate+1,??_Open1+1
  1090  001200  C02B  F096         	movff	Open1@BaudRate+2,??_Open1+2
  1091  001204  C02C  F097         	movff	Open1@BaudRate+3,??_Open1+3
  1092  001208  0E02               	movlw	2
  1093  00120A                     u705:
  1094  00120A  90D8               	bcf	status,0,c
  1095  00120C  0100               	movlb	0	; () banked
  1096  00120E  3794               	rlcf	??_Open1& (0+255),f,b
  1097  001210  3795               	rlcf	(??_Open1+1)& (0+255),f,b
  1098  001212  3796               	rlcf	(??_Open1+2)& (0+255),f,b
  1099  001214  3797               	rlcf	(??_Open1+3)& (0+255),f,b
  1100  001216  2EE8               	decfsz	wreg,f,c
  1101  001218  D7F8               	goto	u705
  1102  00121A  C094  F024         	movff	??_Open1,___aldiv@divisor
  1103  00121E  C095  F025         	movff	??_Open1+1,___aldiv@divisor+1
  1104  001222  C096  F026         	movff	??_Open1+2,___aldiv@divisor+2
  1105  001226  C097  F027         	movff	??_Open1+3,___aldiv@divisor+3
  1106  00122A  EC38  F008         	call	___aldiv
  1107  00122E  C020  F098         	movff	?___aldiv,??_Open1+4
  1108  001232  C021  F099         	movff	?___aldiv+1,??_Open1+5
  1109  001236  C022  F09A         	movff	?___aldiv+2,??_Open1+6
  1110  00123A  C023  F09B         	movff	?___aldiv+3,??_Open1+7
  1111  00123E  0EFF               	movlw	255
  1112  001240  0100               	movlb	0	; () banked
  1113  001242  2598               	addwf	(??_Open1+4)& (0+255),w,b
  1114  001244  0100               	movlb	0	; () banked
  1115  001246  0100               	movlb	0	; () banked
  1116  001248  6FA0               	movwf	Open1@BRGval& (0+255),b
  1117  00124A  0EFF               	movlw	255
  1118  00124C  0100               	movlb	0	; () banked
  1119  00124E  2199               	addwfc	(??_Open1+5)& (0+255),w,b
  1120  001250  0100               	movlb	0	; () banked
  1121  001252  6FA1               	movwf	(Open1@BRGval+1)& (0+255),b
  1122                           
  1123                           ; BSR set to: 0
  1124  001254  0100               	movlb	0	; () banked
  1125  001256  0100               	movlb	0	; () banked
  1126  001258  51A1               	movf	(Open1@BRGval+1)& (0+255),w,b
  1127  00125A  0A80               	xorlw	128
  1128  00125C  0F80               	addlw	-128
  1129  00125E  0E01               	movlw	1
  1130  001260  B4D8               	btfsc	status,2,c
  1131  001262  5DA0               	subwf	Open1@BRGval& (0+255),w,b
  1132  001264  A0D8               	btfss	status,0,c
  1133  001266  0012               	return	
  1134                           
  1135                           ; BSR set to: 0
  1136  001268  86B8               	bsf	4024,3,c	;volatile
  1137  00126A  84AC               	bsf	4012,2,c	;volatile
  1138  00126C  98AC               	bcf	4012,4,c	;volatile
  1139                           
  1140                           ; BSR set to: 0
  1141  00126E  0100               	movlb	0	; () banked
  1142  001270  C0A1  F094         	movff	Open1@BRGval+1,??_Open1
  1143  001274  C094  F095         	movff	??_Open1,??_Open1+1
  1144  001278  0100               	movlb	0	; () banked
  1145  00127A  6B96               	clrf	(??_Open1+2)& (0+255),b
  1146  00127C  0100               	movlb	0	; () banked
  1147  00127E  5195               	movf	(??_Open1+1)& (0+255),w,b
  1148  001280  6EB0               	movwf	4016,c	;volatile
  1149                           
  1150                           ; BSR set to: 0
  1151  001282  C0A0  FFAF         	movff	Open1@BRGval,4015	;volatile
  1152                           
  1153                           ; BSR set to: 0
  1154  001286  010F               	movlb	15	; () banked
  1155  001288  010F               	movlb	15	; () banked
  1156  00128A  9D3A               	bcf	58,6,b	;volatile
  1157                           
  1158                           ; BSR set to: 15
  1159  00128C  010F               	movlb	15	; () banked
  1160  00128E  010F               	movlb	15	; () banked
  1161  001290  9F3A               	bcf	58,7,b	;volatile
  1162                           
  1163                           ; BSR set to: 15
  1164  001292  8C94               	bsf	3988,6,c	;volatile
  1165                           
  1166                           ; BSR set to: 15
  1167  001294  8E94               	bsf	3988,7,c	;volatile
  1168                           
  1169                           ; BSR set to: 15
  1170  001296  8AAC               	bsf	4012,5,c	;volatile
  1171                           
  1172                           ; BSR set to: 15
  1173  001298  88AB               	bsf	4011,4,c	;volatile
  1174                           
  1175                           ; BSR set to: 15
  1176  00129A  8EAB               	bsf	4011,7,c	;volatile
  1177  00129C  0012               	return	
  1178  00129E                     __end_of_Open1:
  1179                           	opt stack 0
  1180                           tosu	equ	0xFFF
  1181                           tosh	equ	0xFFE
  1182                           tosl	equ	0xFFD
  1183                           pclath	equ	0xFFA
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           prodh	equ	0xFF4
  1189                           prodl	equ	0xFF3
  1190                           intcon	equ	0xFF2
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postinc1	equ	0xFE6
  1194                           postdec1	equ	0xFE5
  1195                           fsr1l	equ	0xFE1
  1196                           postinc2	equ	0xFDE
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _Open2 *****************
  1200 ;; Defined at:
  1201 ;;		line 61 in file "EAB_Serial.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  BaudRate        4   40[COMRAM] long 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  freq            4   14[BANK0 ] long 
  1206 ;;  temp            2   18[BANK0 ] int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      unsigned char 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;Total ram usage:       18 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		_GetFreq
  1225 ;;		___aldiv
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text6
  1232  00129E                     __ptext6:
  1233                           	opt stack 0
  1234  00129E                     _Open2:
  1235                           	opt stack 26
  1236                           
  1237                           ;incstack = 0
  1238  00129E  D801               	call	u728
  1239  0012A0  D00C               	goto	u729
  1240  0012A2                     u728:
  1241  0012A2  0005               	push	
  1242  0012A4  6EFA               	movwf	pclath,c
  1243  0012A6  0100               	movlb	0	; () banked
  1244  0012A8  0100               	movlb	0	; () banked
  1245  0012AA  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1246  0012AC  6EFD               	movwf	tosl,c
  1247  0012AE  0100               	movlb	0	; () banked
  1248  0012B0  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1249  0012B2  6EFE               	movwf	tosh,c
  1250  0012B4  6AFF               	clrf	tosu,c
  1251  0012B6  50FA               	movf	pclath,w,c
  1252  0012B8  0012               	return		;indir
  1253  0012BA                     u729:
  1254  0012BA  C020  F09C         	movff	?_GetFreq,Open2@freq
  1255  0012BE  C021  F09D         	movff	?_GetFreq+1,Open2@freq+1
  1256  0012C2  C022  F09E         	movff	?_GetFreq+2,Open2@freq+2
  1257  0012C6  C023  F09F         	movff	?_GetFreq+3,Open2@freq+3
  1258  0012CA  C09C  F020         	movff	Open2@freq,___aldiv@dividend
  1259  0012CE  C09D  F021         	movff	Open2@freq+1,___aldiv@dividend+1
  1260  0012D2  C09E  F022         	movff	Open2@freq+2,___aldiv@dividend+2
  1261  0012D6  C09F  F023         	movff	Open2@freq+3,___aldiv@dividend+3
  1262  0012DA  C029  F094         	movff	Open2@BaudRate,??_Open2
  1263  0012DE  C02A  F095         	movff	Open2@BaudRate+1,??_Open2+1
  1264  0012E2  C02B  F096         	movff	Open2@BaudRate+2,??_Open2+2
  1265  0012E6  C02C  F097         	movff	Open2@BaudRate+3,??_Open2+3
  1266  0012EA  0E02               	movlw	2
  1267  0012EC                     u735:
  1268  0012EC  90D8               	bcf	status,0,c
  1269  0012EE  0100               	movlb	0	; () banked
  1270  0012F0  3794               	rlcf	??_Open2& (0+255),f,b
  1271  0012F2  3795               	rlcf	(??_Open2+1)& (0+255),f,b
  1272  0012F4  3796               	rlcf	(??_Open2+2)& (0+255),f,b
  1273  0012F6  3797               	rlcf	(??_Open2+3)& (0+255),f,b
  1274  0012F8  2EE8               	decfsz	wreg,f,c
  1275  0012FA  D7F8               	goto	u735
  1276  0012FC  C094  F024         	movff	??_Open2,___aldiv@divisor
  1277  001300  C095  F025         	movff	??_Open2+1,___aldiv@divisor+1
  1278  001304  C096  F026         	movff	??_Open2+2,___aldiv@divisor+2
  1279  001308  C097  F027         	movff	??_Open2+3,___aldiv@divisor+3
  1280  00130C  EC38  F008         	call	___aldiv	;wreg free
  1281  001310  C020  F098         	movff	?___aldiv,??_Open2+4
  1282  001314  C021  F099         	movff	?___aldiv+1,??_Open2+5
  1283  001318  C022  F09A         	movff	?___aldiv+2,??_Open2+6
  1284  00131C  C023  F09B         	movff	?___aldiv+3,??_Open2+7
  1285  001320  0EFF               	movlw	255
  1286  001322  0100               	movlb	0	; () banked
  1287  001324  2598               	addwf	(??_Open2+4)& (0+255),w,b
  1288  001326  0100               	movlb	0	; () banked
  1289  001328  0100               	movlb	0	; () banked
  1290  00132A  6FA0               	movwf	Open2@temp& (0+255),b
  1291  00132C  0EFF               	movlw	255
  1292  00132E  0100               	movlb	0	; () banked
  1293  001330  2199               	addwfc	(??_Open2+5)& (0+255),w,b
  1294  001332  0100               	movlb	0	; () banked
  1295  001334  6FA1               	movwf	(Open2@temp+1)& (0+255),b
  1296                           
  1297                           ; BSR set to: 0
  1298  001336  0100               	movlb	0	; () banked
  1299  001338  0100               	movlb	0	; () banked
  1300  00133A  51A1               	movf	(Open2@temp+1)& (0+255),w,b
  1301  00133C  0A80               	xorlw	128
  1302  00133E  0F80               	addlw	-128
  1303  001340  0E01               	movlw	1
  1304  001342  B4D8               	btfsc	status,2,c
  1305  001344  5DA0               	subwf	Open2@temp& (0+255),w,b
  1306  001346  A0D8               	btfss	status,0,c
  1307  001348  0012               	return	
  1308                           
  1309                           ; BSR set to: 0
  1310  00134A  8670               	bsf	3952,3,c	;volatile
  1311  00134C  8472               	bsf	3954,2,c	;volatile
  1312  00134E  9872               	bcf	3954,4,c	;volatile
  1313                           
  1314                           ; BSR set to: 0
  1315  001350  0100               	movlb	0	; () banked
  1316  001352  C0A1  F094         	movff	Open2@temp+1,??_Open2
  1317  001356  C094  F095         	movff	??_Open2,??_Open2+1
  1318  00135A  0100               	movlb	0	; () banked
  1319  00135C  6B96               	clrf	(??_Open2+2)& (0+255),b
  1320  00135E  0100               	movlb	0	; () banked
  1321  001360  5195               	movf	(??_Open2+1)& (0+255),w,b
  1322  001362  6E76               	movwf	3958,c	;volatile
  1323                           
  1324                           ; BSR set to: 0
  1325  001364  C0A0  FF75         	movff	Open2@temp,3957	;volatile
  1326                           
  1327                           ; BSR set to: 0
  1328  001368  8C93               	bsf	3987,6,c	;volatile
  1329                           
  1330                           ; BSR set to: 0
  1331  00136A  8E93               	bsf	3987,7,c	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334  00136C  8A72               	bsf	3954,5,c	;volatile
  1335                           
  1336                           ; BSR set to: 0
  1337  00136E  8871               	bsf	3953,4,c	;volatile
  1338                           
  1339                           ; BSR set to: 0
  1340  001370  8E71               	bsf	3953,7,c	;volatile
  1341  001372  0012               	return	
  1342  001374                     __end_of_Open2:
  1343                           	opt stack 0
  1344                           tosu	equ	0xFFF
  1345                           tosh	equ	0xFFE
  1346                           tosl	equ	0xFFD
  1347                           pclath	equ	0xFFA
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           postinc1	equ	0xFE6
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           postinc2	equ	0xFDE
  1361                           status	equ	0xFD8
  1362                           
  1363 ;; *************** function ___aldiv *****************
  1364 ;; Defined at:
  1365 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  dividend        4   31[COMRAM] long 
  1368 ;;  divisor         4   35[COMRAM] long 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  quotient        4    2[BANK0 ] long 
  1371 ;;  sign            1    1[BANK0 ] unsigned char 
  1372 ;;  counter         1    0[BANK0 ] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  4   31[COMRAM] long 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:       15 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    2
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_Open1
  1393 ;;		_Open2
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text7
  1398  001070                     __ptext7:
  1399                           	opt stack 0
  1400  001070                     ___aldiv:
  1401                           	opt stack 26
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;incstack = 0
  1405  001070  6E28               	movwf	??___aldiv& (0+255),c
  1406  001072  0E00               	movlw	0
  1407  001074  0100               	movlb	0	; () banked
  1408  001076  0100               	movlb	0	; () banked
  1409  001078  6F8F               	movwf	___aldiv@sign& (0+255),b
  1410  00107A  5028               	movf	??___aldiv& (0+255),w,c
  1411                           
  1412                           ; BSR set to: 0
  1413  00107C  5027               	movf	___aldiv@divisor+3,w,c
  1414  00107E  0A80               	xorlw	128
  1415  001080  0F80               	addlw	128
  1416  001082  E108               	bnz	u755
  1417  001084  0E00               	movlw	0
  1418  001086  5C26               	subwf	___aldiv@divisor+2,w,c
  1419  001088  E105               	bnz	u755
  1420  00108A  0E00               	movlw	0
  1421  00108C  5C25               	subwf	___aldiv@divisor+1,w,c
  1422  00108E  E102               	bnz	u755
  1423  001090  0E00               	movlw	0
  1424  001092  5C24               	subwf	___aldiv@divisor,w,c
  1425  001094                     u755:
  1426  001094  B0D8               	btfsc	status,0,c
  1427  001096  D00E               	goto	l1630
  1428                           
  1429                           ; BSR set to: 0
  1430  001098  1E27               	comf	___aldiv@divisor+3,f,c
  1431  00109A  1E26               	comf	___aldiv@divisor+2,f,c
  1432  00109C  1E25               	comf	___aldiv@divisor+1,f,c
  1433  00109E  6C24               	negf	___aldiv@divisor,c
  1434  0010A0  0E00               	movlw	0
  1435  0010A2  2225               	addwfc	___aldiv@divisor+1,f,c
  1436  0010A4  2226               	addwfc	___aldiv@divisor+2,f,c
  1437  0010A6  2227               	addwfc	___aldiv@divisor+3,f,c
  1438                           
  1439                           ; BSR set to: 0
  1440  0010A8  6E28               	movwf	??___aldiv& (0+255),c
  1441  0010AA  0E01               	movlw	1
  1442  0010AC  0100               	movlb	0	; () banked
  1443  0010AE  0100               	movlb	0	; () banked
  1444  0010B0  6F8F               	movwf	___aldiv@sign& (0+255),b
  1445  0010B2  5028               	movf	??___aldiv& (0+255),w,c
  1446  0010B4                     l1630:
  1447                           
  1448                           ; BSR set to: 0
  1449  0010B4  5023               	movf	___aldiv@dividend+3,w,c
  1450  0010B6  0A80               	xorlw	128
  1451  0010B8  0F80               	addlw	128
  1452  0010BA  E108               	bnz	u765
  1453  0010BC  0E00               	movlw	0
  1454  0010BE  5C22               	subwf	___aldiv@dividend+2,w,c
  1455  0010C0  E105               	bnz	u765
  1456  0010C2  0E00               	movlw	0
  1457  0010C4  5C21               	subwf	___aldiv@dividend+1,w,c
  1458  0010C6  E102               	bnz	u765
  1459  0010C8  0E00               	movlw	0
  1460  0010CA  5C20               	subwf	___aldiv@dividend,w,c
  1461  0010CC                     u765:
  1462  0010CC  B0D8               	btfsc	status,0,c
  1463  0010CE  D00C               	goto	l1636
  1464                           
  1465                           ; BSR set to: 0
  1466  0010D0  1E23               	comf	___aldiv@dividend+3,f,c
  1467  0010D2  1E22               	comf	___aldiv@dividend+2,f,c
  1468  0010D4  1E21               	comf	___aldiv@dividend+1,f,c
  1469  0010D6  6C20               	negf	___aldiv@dividend,c
  1470  0010D8  0E00               	movlw	0
  1471  0010DA  2221               	addwfc	___aldiv@dividend+1,f,c
  1472  0010DC  2222               	addwfc	___aldiv@dividend+2,f,c
  1473  0010DE  2223               	addwfc	___aldiv@dividend+3,f,c
  1474                           
  1475                           ; BSR set to: 0
  1476  0010E0  0E01               	movlw	1
  1477  0010E2  0100               	movlb	0	; () banked
  1478  0010E4  0100               	movlb	0	; () banked
  1479  0010E6  1B8F               	xorwf	___aldiv@sign& (0+255),f,b
  1480  0010E8                     l1636:
  1481                           
  1482                           ; BSR set to: 0
  1483  0010E8  0E00               	movlw	0
  1484  0010EA  0100               	movlb	0	; () banked
  1485  0010EC  0100               	movlb	0	; () banked
  1486  0010EE  6F90               	movwf	___aldiv@quotient& (0+255),b
  1487  0010F0  0E00               	movlw	0
  1488  0010F2  0100               	movlb	0	; () banked
  1489  0010F4  6F91               	movwf	(___aldiv@quotient+1)& (0+255),b
  1490  0010F6  0E00               	movlw	0
  1491  0010F8  0100               	movlb	0	; () banked
  1492  0010FA  6F92               	movwf	(___aldiv@quotient+2)& (0+255),b
  1493  0010FC  0E00               	movlw	0
  1494  0010FE  0100               	movlb	0	; () banked
  1495  001100  6F93               	movwf	(___aldiv@quotient+3)& (0+255),b
  1496                           
  1497                           ; BSR set to: 0
  1498  001102  5027               	movf	___aldiv@divisor+3,w,c
  1499  001104  1024               	iorwf	___aldiv@divisor,w,c
  1500  001106  1025               	iorwf	___aldiv@divisor+1,w,c
  1501  001108  1026               	iorwf	___aldiv@divisor+2,w,c
  1502  00110A  B4D8               	btfsc	status,2,c
  1503  00110C  D039               	goto	l1658
  1504                           
  1505                           ; BSR set to: 0
  1506  00110E  6E28               	movwf	??___aldiv& (0+255),c
  1507  001110  0E01               	movlw	1
  1508  001112  0100               	movlb	0	; () banked
  1509  001114  0100               	movlb	0	; () banked
  1510  001116  6F8E               	movwf	___aldiv@counter& (0+255),b
  1511  001118  5028               	movf	??___aldiv& (0+255),w,c
  1512  00111A  D008               	goto	l1644
  1513  00111C                     l1642:
  1514                           
  1515                           ; BSR set to: 0
  1516  00111C  90D8               	bcf	status,0,c
  1517  00111E  3624               	rlcf	___aldiv@divisor,f,c
  1518  001120  3625               	rlcf	___aldiv@divisor+1,f,c
  1519  001122  3626               	rlcf	___aldiv@divisor+2,f,c
  1520  001124  3627               	rlcf	___aldiv@divisor+3,f,c
  1521  001126  0100               	movlb	0	; () banked
  1522  001128  0100               	movlb	0	; () banked
  1523  00112A  2B8E               	incf	___aldiv@counter& (0+255),f,b
  1524  00112C                     l1644:
  1525                           
  1526                           ; BSR set to: 0
  1527  00112C  AE27               	btfss	___aldiv@divisor+3,7,c
  1528  00112E  D7F6               	goto	l1642
  1529  001130                     l1646:
  1530                           
  1531                           ; BSR set to: 0
  1532  001130  0100               	movlb	0	; () banked
  1533  001132  90D8               	bcf	status,0,c
  1534  001134  0100               	movlb	0	; () banked
  1535  001136  3790               	rlcf	___aldiv@quotient& (0+255),f,b
  1536  001138  0100               	movlb	0	; () banked
  1537  00113A  3791               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1538  00113C  0100               	movlb	0	; () banked
  1539  00113E  3792               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1540  001140  0100               	movlb	0	; () banked
  1541  001142  3793               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1542                           
  1543                           ; BSR set to: 0
  1544  001144  5024               	movf	___aldiv@divisor,w,c
  1545  001146  5C20               	subwf	___aldiv@dividend,w,c
  1546  001148  5025               	movf	___aldiv@divisor+1,w,c
  1547  00114A  5821               	subwfb	___aldiv@dividend+1,w,c
  1548  00114C  5026               	movf	___aldiv@divisor+2,w,c
  1549  00114E  5822               	subwfb	___aldiv@dividend+2,w,c
  1550  001150  5027               	movf	___aldiv@divisor+3,w,c
  1551  001152  5823               	subwfb	___aldiv@dividend+3,w,c
  1552  001154  A0D8               	btfss	status,0,c
  1553  001156  D00B               	goto	l1654
  1554                           
  1555                           ; BSR set to: 0
  1556  001158  5024               	movf	___aldiv@divisor,w,c
  1557  00115A  5E20               	subwf	___aldiv@dividend,f,c
  1558  00115C  5025               	movf	___aldiv@divisor+1,w,c
  1559  00115E  5A21               	subwfb	___aldiv@dividend+1,f,c
  1560  001160  5026               	movf	___aldiv@divisor+2,w,c
  1561  001162  5A22               	subwfb	___aldiv@dividend+2,f,c
  1562  001164  5027               	movf	___aldiv@divisor+3,w,c
  1563  001166  5A23               	subwfb	___aldiv@dividend+3,f,c
  1564                           
  1565                           ; BSR set to: 0
  1566  001168  0100               	movlb	0	; () banked
  1567  00116A  0100               	movlb	0	; () banked
  1568  00116C  8190               	bsf	___aldiv@quotient& (0+255),0,b
  1569  00116E                     l1654:
  1570                           
  1571                           ; BSR set to: 0
  1572  00116E  90D8               	bcf	status,0,c
  1573  001170  3227               	rrcf	___aldiv@divisor+3,f,c
  1574  001172  3226               	rrcf	___aldiv@divisor+2,f,c
  1575  001174  3225               	rrcf	___aldiv@divisor+1,f,c
  1576  001176  3224               	rrcf	___aldiv@divisor,f,c
  1577                           
  1578                           ; BSR set to: 0
  1579  001178  0100               	movlb	0	; () banked
  1580  00117A  0100               	movlb	0	; () banked
  1581  00117C  2F8E               	decfsz	___aldiv@counter& (0+255),f,b
  1582  00117E  D7D8               	goto	l1646
  1583  001180                     l1658:
  1584                           
  1585                           ; BSR set to: 0
  1586  001180  0100               	movlb	0	; () banked
  1587  001182  0100               	movlb	0	; () banked
  1588  001184  518F               	movf	___aldiv@sign& (0+255),w,b
  1589  001186  B4D8               	btfsc	status,2,c
  1590  001188  D010               	goto	l1662
  1591                           
  1592                           ; BSR set to: 0
  1593  00118A  0100               	movlb	0	; () banked
  1594  00118C  0100               	movlb	0	; () banked
  1595  00118E  1F93               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1596  001190  0100               	movlb	0	; () banked
  1597  001192  1F92               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1598  001194  0100               	movlb	0	; () banked
  1599  001196  1F91               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1600  001198  0100               	movlb	0	; () banked
  1601  00119A  6D90               	negf	___aldiv@quotient& (0+255),b
  1602  00119C  0E00               	movlw	0
  1603  00119E  0100               	movlb	0	; () banked
  1604  0011A0  2391               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1605  0011A2  0100               	movlb	0	; () banked
  1606  0011A4  2392               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1607  0011A6  0100               	movlb	0	; () banked
  1608  0011A8  2393               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1609  0011AA                     l1662:
  1610                           
  1611                           ; BSR set to: 0
  1612  0011AA  C090  F020         	movff	___aldiv@quotient,?___aldiv
  1613  0011AE  C091  F021         	movff	___aldiv@quotient+1,?___aldiv+1
  1614  0011B2  C092  F022         	movff	___aldiv@quotient+2,?___aldiv+2
  1615  0011B6  C093  F023         	movff	___aldiv@quotient+3,?___aldiv+3
  1616  0011BA  0012               	return	
  1617  0011BC                     __end_of___aldiv:
  1618                           	opt stack 0
  1619                           tosu	equ	0xFFF
  1620                           tosh	equ	0xFFE
  1621                           tosl	equ	0xFFD
  1622                           pclath	equ	0xFFA
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           intcon	equ	0xFF2
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postinc1	equ	0xFE6
  1633                           postdec1	equ	0xFE5
  1634                           fsr1l	equ	0xFE1
  1635                           postinc2	equ	0xFDE
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _GetFreq *****************
  1639 ;; Defined at:
  1640 ;;		line 128 in file "EAB_Oscillator.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  4   31[COMRAM] long 
  1647 ;; Registers used:
  1648 ;;		None
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;Total ram usage:        4 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    2
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_Open1
  1665 ;;		_Open2
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text8
  1670  00156A                     __ptext8:
  1671                           	opt stack 0
  1672  00156A                     _GetFreq:
  1673                           	opt stack 26
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;incstack = 0
  1677  00156A  C039  F020         	movff	_OscFreq,?_GetFreq
  1678  00156E  C03A  F021         	movff	_OscFreq+1,?_GetFreq+1
  1679  001572  C03B  F022         	movff	_OscFreq+2,?_GetFreq+2
  1680  001576  C03C  F023         	movff	_OscFreq+3,?_GetFreq+3
  1681  00157A  0012               	return	
  1682  00157C                     __end_of_GetFreq:
  1683                           	opt stack 0
  1684                           tosu	equ	0xFFF
  1685                           tosh	equ	0xFFE
  1686                           tosl	equ	0xFFD
  1687                           pclath	equ	0xFFA
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           prodh	equ	0xFF4
  1693                           prodl	equ	0xFF3
  1694                           intcon	equ	0xFF2
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postinc1	equ	0xFE6
  1698                           postdec1	equ	0xFE5
  1699                           fsr1l	equ	0xFE1
  1700                           postinc2	equ	0xFDE
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _LowPriority_InterruptHandler *****************
  1704 ;; Defined at:
  1705 ;;		line 21 in file "EAB_InterruptHandler.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;		None               void
  1712 ;; Registers used:
  1713 ;;		None
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;Total ram usage:       17 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		Interrupt level 1
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	intcodelo
  1734  000018                     __pintcodelo:
  1735                           	opt stack 0
  1736  000018                     _LowPriority_InterruptHandler:
  1737                           	opt stack 26
  1738                           
  1739                           ;incstack = 0
  1740  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  1741  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  1742  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  1743  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  1744  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  1745  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  1746  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  1747  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  1748  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  1749  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  1750  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  1751  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  1752  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  1753  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  1754  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  1755  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  1756  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  1757  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  1758  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  1759  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  1760  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  1761  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  1762  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  1763  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  1764  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  1765  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  1766  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  1767  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  1768  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  1769  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  1770  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  1771  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  1772  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  1773  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  1774  0000A0  0010               	retfie	
  1775  0000A2                     __end_of_LowPriority_InterruptHandler:
  1776                           	opt stack 0
  1777                           tosu	equ	0xFFF
  1778                           tosh	equ	0xFFE
  1779                           tosl	equ	0xFFD
  1780                           pclatu	equ	0xFFB
  1781                           pclath	equ	0xFFA
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           fsr0h	equ	0xFEA
  1791                           fsr0l	equ	0xFE9
  1792                           wreg	equ	0xFE8
  1793                           postinc1	equ	0xFE6
  1794                           postdec1	equ	0xFE5
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           bsr	equ	0xFE0
  1798                           postinc2	equ	0xFDE
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _HighPriority_InterruptHandler *****************
  1804 ;; Defined at:
  1805 ;;		line 14 in file "EAB_InterruptHandler.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;		None               void
  1812 ;; Registers used:
  1813 ;;		None
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;Total ram usage:       14 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		Interrupt level 2
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	intcode
  1833  000008                     __pintcode:
  1834                           	opt stack 0
  1835  000008                     _HighPriority_InterruptHandler:
  1836                           	opt stack 26
  1837                           
  1838                           ;incstack = 0
  1839  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  1840  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  1841  000010  EF24  F00A         	goto	int_func
  1842                           tosu	equ	0xFFF
  1843                           tosh	equ	0xFFE
  1844                           tosl	equ	0xFFD
  1845                           pclatu	equ	0xFFB
  1846                           pclath	equ	0xFFA
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           prodh	equ	0xFF4
  1852                           prodl	equ	0xFF3
  1853                           intcon	equ	0xFF2
  1854                           postinc0	equ	0xFEE
  1855                           fsr0h	equ	0xFEA
  1856                           fsr0l	equ	0xFE9
  1857                           wreg	equ	0xFE8
  1858                           postinc1	equ	0xFE6
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           bsr	equ	0xFE0
  1863                           postinc2	equ	0xFDE
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868                           	psect	intcode_body
  1869  001448                     __pintcode_body:
  1870                           	opt stack 26
  1871  001448                     int_func:
  1872                           	opt stack 26
  1873  001448  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  1874  00144C  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  1875  001450  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  1876  001454  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  1877  001458  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  1878  00145C  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  1879  001460  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  1880  001464  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  1881  001468  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  1882  00146C  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  1883  001470  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  1884  001474  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  1885  001478  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  1886  00147C  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  1887  001480  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  1888  001484  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  1889  001488  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  1890  00148C  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  1891  001490  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  1892  001494  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  1893  001498  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  1894  00149C  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  1895  0014A0  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  1896  0014A4  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  1897  0014A8  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  1898  0014AC  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  1899  0014B0  0011               	retfie		f
  1900  0014B2                     __end_of_HighPriority_InterruptHandler:
  1901                           	opt stack 0
  1902                           tosu	equ	0xFFF
  1903                           tosh	equ	0xFFE
  1904                           tosl	equ	0xFFD
  1905                           pclatu	equ	0xFFB
  1906                           pclath	equ	0xFFA
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           fsr0h	equ	0xFEA
  1916                           fsr0l	equ	0xFE9
  1917                           wreg	equ	0xFE8
  1918                           postinc1	equ	0xFE6
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           bsr	equ	0xFE0
  1923                           postinc2	equ	0xFDE
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           tosu	equ	0xFFF
  1928                           tosh	equ	0xFFE
  1929                           tosl	equ	0xFFD
  1930                           pclatu	equ	0xFFB
  1931                           pclath	equ	0xFFA
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           intcon	equ	0xFF2
  1939                           postinc0	equ	0xFEE
  1940                           fsr0h	equ	0xFEA
  1941                           fsr0l	equ	0xFE9
  1942                           wreg	equ	0xFE8
  1943                           postinc1	equ	0xFE6
  1944                           postdec1	equ	0xFE5
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           bsr	equ	0xFE0
  1948                           postinc2	equ	0xFDE
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953                           	psect	rparam
  1954  0000                     tosu	equ	0xFFF
  1955                           tosh	equ	0xFFE
  1956                           tosl	equ	0xFFD
  1957                           pclatu	equ	0xFFB
  1958                           pclath	equ	0xFFA
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           fsr0h	equ	0xFEA
  1968                           fsr0l	equ	0xFE9
  1969                           wreg	equ	0xFE8
  1970                           postinc1	equ	0xFE6
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           bsr	equ	0xFE0
  1975                           postinc2	equ	0xFDE
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        63
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      63
    BANK0           160     35      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S115$2$0	PTR unsigned char  size(2) Largest target is 0

    S115$3$0	PTR unsigned char  size(2) Largest target is 0

    S1695$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S1695$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S1695$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S1695$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S1649$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S1649$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S115$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S115$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S115$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S115$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S115$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S115$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S78$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S78$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S78$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S78$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S78$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S78$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1966
                                             20 BANK0     15    15      0
                              _Open1 *
                              _Open2 *
                          _SendByte1 *
                          _SendByte2 *
                       _SetFreq_8MHZ *
                     _SetTimer0_1Sec *
 ---------------------------------------------------------------------------------
 (1) _SetTimer0_1Sec                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte2                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte1                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4     968
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4     914
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     753
                                             31 COMRAM     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
   _Open2 *
     _GetFreq *
     ___aldiv *
   _SendByte1 *
   _SendByte2 *
   _SetFreq_8MHZ *
   _SetTimer0_1Sec *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      12        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Aug 07 11:16:55 2014

                                    bsr 000FE0                                     l201 15A0  
                                   l195 1592                                     _PR2 000FBB  
                                   u621 138E                                     u631 13A0  
                                   u705 120A                                     u735 12EC  
                                   u728 12A2                                     u648 13AC  
                                   u729 12BA                                     u649 13C4  
                                   u658 13E0                                     u755 1094  
                                   u659 13F4                                     u668 1408  
                                   u765 10CC                                     u688 142A  
                                   u698 11C0                                     u699 11D8  
                                   tosl 000FFD                           main@ArrayData 00AB  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                         ?_SetTimer0_1Sec 0001  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l1630 10B4  
                                  l1642 111C                                    l1644 112C  
                                  l1636 10E8                                    l1662 11AA  
                                  l1654 116E                                    l1646 1130  
                                  l1558 1420                                    l1658 1180  
                    _EnableRx2interrupt 000000                          _TIMER2_100usec 1033  
                                  _main 1374                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  fsr2l 000FD9                   __end_of_TIMER0_16mSec 105A  
                                  pclat 000FFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 00A2  
                       __end_of_GetFreq 157C                            _BAUDCON1bits 000FB8  
                          _BAUDCON2bits 000F70                         __end_of___aldiv 11BC  
                                 ?_main 0001                                   _T0CON 000FD5  
                                 _T2CON 000FBA                          __CFG_DEBUG$OFF 000000  
                __end_of_TIMER0_130mSec 1029                                   _Open1 11BC  
                                 _Open2 129E                  __end_of_TIMER2_100usec 103D  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                         __initialization 14B2  
                          __end_of_main 1448                             Open1@BRGval 00A0  
                                ??_main 00A2                           __activetblptr 000003  
                 _SetTimer0_130milliSec 000000              __end_of_TIMER2_PR2_100usec 1063  
                                ?_Open1 0029                                  ?_Open2 0029  
                            _SendArray1 000000                              _SendArray2 000000  
                                _RC1REG 000FAE                                  _RC2REG 000F74  
                        __CFG_WDTEN$OFF 000000                                  _OSCCON 000FD3  
                             ??_GetFreq 0024                                  _SPBRG1 000FAF  
                                _SPBRG2 000F75                                  _TX1REG 000FAD  
                                _TX2REG 000F73                              _Oscillator 0060  
                                _Timer0 1001                                  _Timer1 1069  
                                _Timer2 1010                      __size_of_SendByte1 000E  
                    __size_of_SendByte2 000E                               ??___aldiv 0028  
                         ?_SetFreq_8MHZ 0001                    _SetTimer0_16milliSec 000000  
                          __pdataCOMRAM 002D                          main@StringData 00A4  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                            __accesstop 0060                 __end_of__initialization 14F6  
                 _SetTimer2_100microSec 000000                          __pcstackCOMRAM 0001  
                         __end_of_Open1 129E                           __end_of_Open2 1374  
                          __pidataBANK0 14FC                          ??_SetFreq_8MHZ 0020  
                      ??_SetTimer0_1Sec 0020                                 ??_Open1 0094  
                               ??_Open2 0094                       __end_of_SendByte1 159C  
                     __end_of_SendByte2 15AA                             _PinFunction 000F38  
                            _delayCount 003E                           _SetFreq_32MHZ 000000  
                         _SetFreq_16MHZ 000000   __end_of_HighPriority_InterruptHandler 14B2  
__size_of_HighPriority_InterruptHandler 14AA           _HighPriority_InterruptHandler 0008  
                         _SetFreq_64MHZ 000000                             _SendString1 000000  
                           _SendString2 000000                                 _SPBRGH1 000FB0  
                               _SPBRGH2 000F76                        _TIMER2_PR2_1msec 1047  
                               _GetFreq 156A                                 _OscFreq 0039  
                               __Hparam 0000                                 __Lparam 0000  
                               _Serial1 002D                                 _Serial2 0076  
                               ___aldiv 1070                            __psmallconst 1000  
                               __pcinit 14B2                                 __ramtop 1000  
                               __ptext0 1374                                 __ptext1 154C  
                               __ptext2 152A                                 __ptext3 158E  
                               __ptext4 159C                                 __ptext5 11BC  
                               __ptext6 129E                                 __ptext7 1070  
                               __ptext8 156A                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                               _T2CONbits 000FBA  
                      ___aldiv@dividend 0020                          __pintcode_body 1448  
                  end_of_initialization 14F6                    __end_of_SetFreq_8MHZ 154C  
                               int_func 1448                      _TIMER2_PR2_100usec 105A  
                      ___aldiv@quotient 0090                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE    __end_of_LowPriority_InterruptHandler 00A2  
 __size_of_LowPriority_InterruptHandler 008A            _LowPriority_InterruptHandler 0018  
                      __CFG_FOSC$INTIO7 000000          ?_HighPriority_InterruptHandler 0001  
                         _TIMER0_16mSec 1051                    __end_of_TIMER0_1mSec 1069  
                  __end_of_TIMER2_1msec 1047                          __end_of_Timer0 1010  
                        __end_of_Timer1 106E                          __end_of_Timer2 101F  
                             Open1@freq 009C                               Open2@freq 009C  
                             Open2@temp 00A0                           __pidataCOMRAM 157C  
         ?_LowPriority_InterruptHandler 0001                     start_initialization 14B2  
                             _ReadByte1 000000                               _ReadByte2 000000  
                             _SendByte1 158E                               _SendByte2 159C  
                          _PinDirection 000F92                               _SetTimer0 000000  
                             _SetTimer1 000000                               _SetTimer2 000000  
                             _Timer0Int 000000                               _Timer1Int 000000  
                             _Timer2Int 000000                           Open1@BaudRate 0029  
              __end_of_TIMER2_PR2_1msec 1051                      _SetTimer0_1millSec 000000  
                           __pdataBANK0 0060                           Open2@BaudRate 0029  
                    _SetTimer2_1millSec 000000                             __pbssCOMRAM 003E  
                 __size_of_SetFreq_8MHZ 0022                           __pcstackBANK0 008E  
                          _OscFreqIndex 003D                                ?_GetFreq 0020  
                            ?_SendByte1 0001                              ?_SendByte2 0001  
                             __pintcode 0008                                ?___aldiv 0020  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 152A                             __smallconst 1000  
                        __size_of_Open1 00E2                          __size_of_Open2 00D6  
        ??_LowPriority_InterruptHandler 0001                          _SetFreq_250KHZ 000000  
                        _SetFreq_500KHZ 000000                 __size_of_SetTimer0_1Sec 001E  
                       ___aldiv@divisor 0024                         ___aldiv@counter 008E  
                              _IPR1bits 000F9F                                _PIE1bits 000F9D  
                              _IPR3bits 000FA5                                _PIE3bits 000FA3  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
                              _RCONbits 000FD0                               main@F8967 0089  
                             main@F8969 0082                     __end_of_TIMER0_1Sec 1033  
                          _TIMER0_1mSec 1063                            _TIMER2_1msec 103D  
                             copy_data0 14CA                               copy_data1 14EA  
                           ??_SendByte1 0020                             ??_SendByte2 0020  
                      __size_of_GetFreq 0012                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                      __size_of___aldiv 014C                             _OSCCON2bits 000FD2  
                      _SetFreq_31_25KHZ 000000                           __size_of_main 00D4  
                              main@data 00B0                             _TIMER0_1Sec 1029  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                        _SetTimer0_1Sec 154C                                intlevel1 0000  
                              intlevel2 0000                              _RCSTA1bits 000FAB  
                            _RCSTA2bits 000F71                              _OSCCONbits 000FD3  
                          ___aldiv@sign 008F                  __end_of_SetTimer0_1Sec 156A  
                         SendByte1@Data 0020                           SendByte2@Data 0020  
