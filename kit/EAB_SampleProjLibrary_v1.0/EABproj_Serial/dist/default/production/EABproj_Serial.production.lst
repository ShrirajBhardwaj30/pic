

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Aug 18 00:05:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33 ;; Function _SetFreq_31_25KHZ is unused but had its address taken
    34  0000                     
    35 ;; Function _SetFreq_250KHZ is unused but had its address taken
    36  0000                     
    37 ;; Function _SetFreq_500KHZ is unused but had its address taken
    38  0000                     
    39 ;; Function _SetFreq_1MHZ is unused but had its address taken
    40  0000                     
    41 ;; Function _SetFreq_2MHZ is unused but had its address taken
    42  0000                     
    43 ;; Function _SetFreq_4MHZ is unused but had its address taken
    44  0000                     
    45 ;; Function _SetFreq_16MHZ is unused but had its address taken
    46  0000                     
    47 ;; Function _SetFreq_32MHZ is unused but had its address taken
    48  0000                     
    49 ;; Function _SetFreq_64MHZ is unused but had its address taken
    50  0000                     
    51 ;; Function _ReadByte1 is unused but had its address taken
    52  0000                     
    53 ;; Function _ReadByte2 is unused but had its address taken
    54  0000                     
    55 ;; Function _EnableRx1interrupt is unused but had its address taken
    56  0000                     
    57 ;; Function _EnableRx2interrupt is unused but had its address taken
    58  0000                     
    59 ;; Function _SetTimer0_130milliSec is unused but had its address taken
    60  0000                     
    61 ;; Function _SetTimer0_16milliSec is unused but had its address taken
    62  0000                     
    63 ;; Function _SetTimer0_1millSec is unused but had its address taken
    64  0000                     
    65 ;; Function _SetTimer0 is unused but had its address taken
    66  0000                     
    67 ;; Function _Timer0Int is unused but had its address taken
    68  0000                     
    69 ;; Function _SetTimer1 is unused but had its address taken
    70  0000                     
    71 ;; Function _Timer1Int is unused but had its address taken
    72  0000                     
    73 ;; Function _SetTimer2_1millSec is unused but had its address taken
    74  0000                     
    75 ;; Function _SetTimer2_100microSec is unused but had its address taken
    76  0000                     
    77 ;; Function _SetTimer2 is unused but had its address taken
    78  0000                     
    79 ;; Function _Timer2Int is unused but had its address taken
    80  0000                     
    81                           	psect	idataCOMRAM
    82  00168E                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _Serial1
    86  00168E  130A               	dw	_Open1& (0+65535)
    87  001690  16A0               	dw	_SendByte1& (0+65535)
    88  001692  15F0               	dw	_SendArray1& (0+65535)
    89  001694  15A4               	dw	_SendString1& (0+65535)
    90  001696  0000               	dw	0
    91  001698  0000               	dw	0
    92                           
    93                           ;initializer for _OscFreq
    94  00169A  4240               	dw	16960
    95  00169C  000F               	dw	15
    96                           
    97                           ;initializer for _OscFreqIndex
    98  00169E  03                 	db	3
    99                           
   100                           	psect	idataBANK0
   101  001576                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for _Oscillator
   105  001576  0000               	dw	0
   106  001578  0000               	dw	0
   107  00157A  0000               	dw	0
   108  00157C  0000               	dw	0
   109  00157E  0000               	dw	0
   110  001580  0000               	dw	0
   111  001582  163C               	dw	_SetFreq_8MHZ& (0+65535)
   112  001584  0000               	dw	0
   113  001586  0000               	dw	0
   114  001588  0000               	dw	0
   115  00158A  167C               	dw	_GetFreq& (0+65535)
   116                           
   117                           ;initializer for _Serial2
   118  00158C  13EC               	dw	_Open2& (0+65535)
   119  00158E  16AE               	dw	_SendByte2& (0+65535)
   120  001590  1616               	dw	_SendArray2& (0+65535)
   121  001592  15CA               	dw	_SendString2& (0+65535)
   122  001594  0000               	dw	0
   123  001596  0000               	dw	0
   124                           
   125                           ;initializer for main@F8968
   126  001598  48                 	db	72
   127  001599  65                 	db	101
   128  00159A  6C                 	db	108
   129  00159B  6C                 	db	108
   130  00159C  6F                 	db	111
   131  00159D  00                 	db	0
   132                           
   133                           ;initializer for main@F8966
   134  00159E  01                 	db	1
   135  00159F  02                 	db	2
   136  0015A0  03                 	db	3
   137  0015A1  04                 	db	4
   138  0015A2  05                 	db	5
   139                           
   140                           	psect	smallconst
   141  001000                     __psmallconst:
   142                           	opt stack 0
   143  001000  00                 	db	0
   144  001001                     _Timer0:
   145                           	opt stack 0
   146  001001  165E               	dw	_SetTimer0_1Sec& (0+65535)
   147  001003  0000               	dw	0
   148  001005  0000               	dw	0
   149  001007  0000               	dw	0
   150  001009  0000               	dw	0
   151  00100B  0000               	dw	0
   152  00100D  3A                 	db	58
   153  00100E  2C                 	db	44
   154  00100F  7E                 	db	126
   155  001010                     __end_of_Timer0:
   156                           	opt stack 0
   157  001010                     _Timer2:
   158                           	opt stack 0
   159  001010  0000               	dw	0
   160  001012  0000               	dw	0
   161  001014  0000               	dw	0
   162  001016  0000               	dw	0
   163  001018  AA                 	db	170
   164  001019  B3                 	db	179
   165  00101A  3E                 	db	62
   166  00101B  98                 	db	152
   167  00101C  BA                 	db	186
   168  00101D  DC                 	db	220
   169  00101E  FE                 	db	254
   170  00101F                     __end_of_Timer2:
   171                           	opt stack 0
   172  00101F                     _TIMER0_130mSec:
   173                           	opt stack 0
   174  00101F  C1                 	db	193
   175  001020  C4                 	db	196
   176  001021  C5                 	db	197
   177  001022  C6                 	db	198
   178  001023  C7                 	db	199
   179  001024  80                 	db	128
   180  001025  81                 	db	129
   181  001026  82                 	db	130
   182  001027  83                 	db	131
   183  001028  84                 	db	132
   184  001029                     __end_of_TIMER0_130mSec:
   185                           	opt stack 0
   186  001029                     _TIMER0_1Sec:
   187                           	opt stack 0
   188  001029  C4                 	db	196
   189  00102A  C7                 	db	199
   190  00102B  80                 	db	128
   191  00102C  81                 	db	129
   192  00102D  82                 	db	130
   193  00102E  83                 	db	131
   194  00102F  84                 	db	132
   195  001030  85                 	db	133
   196  001031  86                 	db	134
   197  001032  87                 	db	135
   198  001033                     __end_of_TIMER0_1Sec:
   199                           	opt stack 0
   200  001033                     _TIMER2_100usec:
   201                           	opt stack 0
   202  001033  84                 	db	132
   203  001034  84                 	db	132
   204  001035  84                 	db	132
   205  001036  84                 	db	132
   206  001037  84                 	db	132
   207  001038  84                 	db	132
   208  001039  8C                 	db	140
   209  00103A  9C                 	db	156
   210  00103B  BC                 	db	188
   211  00103C  00                 	db	0
   212  00103D                     __end_of_TIMER2_100usec:
   213                           	opt stack 0
   214  00103D                     _TIMER2_1msec:
   215                           	opt stack 0
   216  00103D  84                 	db	132
   217  00103E  84                 	db	132
   218  00103F  84                 	db	132
   219  001040  84                 	db	132
   220  001041  CC                 	db	204
   221  001042  CC                 	db	204
   222  001043  CC                 	db	204
   223  001044  A5                 	db	165
   224  001045  CD                 	db	205
   225  001046  A7                 	db	167
   226  001047                     __end_of_TIMER2_1msec:
   227                           	opt stack 0
   228  001047                     _TIMER2_PR2_1msec:
   229                           	opt stack 0
   230  001047  08                 	db	8
   231  001048  3E                 	db	62
   232  001049  7D                 	db	125
   233  00104A  FA                 	db	250
   234  00104B  32                 	db	50
   235  00104C  64                 	db	100
   236  00104D  C8                 	db	200
   237  00104E  C8                 	db	200
   238  00104F  C8                 	db	200
   239  001050  C8                 	db	200
   240  001051                     __end_of_TIMER2_PR2_1msec:
   241                           	opt stack 0
   242  001051                     _TIMER0_16mSec:
   243                           	opt stack 0
   244  001051  C1                 	db	193
   245  001052  C2                 	db	194
   246  001053  C3                 	db	195
   247  001054  C4                 	db	196
   248  001055  C5                 	db	197
   249  001056  C6                 	db	198
   250  001057  C7                 	db	199
   251  001058  80                 	db	128
   252  001059  81                 	db	129
   253  00105A                     __end_of_TIMER0_16mSec:
   254                           	opt stack 0
   255  00105A                     _TIMER2_PR2_100usec:
   256                           	opt stack 0
   257  00105A  06                 	db	6
   258  00105B  0D                 	db	13
   259  00105C  19                 	db	25
   260  00105D  32                 	db	50
   261  00105E  64                 	db	100
   262  00105F  C8                 	db	200
   263  001060  C8                 	db	200
   264  001061  C8                 	db	200
   265  001062  C8                 	db	200
   266  001063                     __end_of_TIMER2_PR2_100usec:
   267                           	opt stack 0
   268  001063                     _TIMER0_1mSec:
   269                           	opt stack 0
   270  001063  C0                 	db	192
   271  001064  C1                 	db	193
   272  001065  C2                 	db	194
   273  001066  C3                 	db	195
   274  001067  C4                 	db	196
   275  001068  C5                 	db	197
   276  001069                     __end_of_TIMER0_1mSec:
   277                           	opt stack 0
   278  001069                     _Timer1:
   279                           	opt stack 0
   280  001069  0000               	dw	0
   281  00106B  0000               	dw	0
   282  00106D  3A                 	db	58
   283  00106E                     __end_of_Timer1:
   284                           	opt stack 0
   285  0000                     _PinDirection	set	3986
   286  0000                     _PinFunction	set	3896
   287  0000                     _BAUDCON1bits	set	4024
   288  0000                     _BAUDCON2bits	set	3952
   289  0000                     _INTCONbits	set	4082
   290  0000                     _IPR1bits	set	3999
   291  0000                     _IPR3bits	set	4005
   292  0000                     _OSCCON	set	4051
   293  0000                     _OSCCON2bits	set	4050
   294  0000                     _OSCCONbits	set	4051
   295  0000                     _OSCTUNEbits	set	3995
   296  0000                     _PIE1bits	set	3997
   297  0000                     _PIE3bits	set	4003
   298  0000                     _PIR1bits	set	3998
   299  0000                     _PIR3bits	set	4004
   300  0000                     _PR2	set	4027
   301  0000                     _RC1REG	set	4014
   302  0000                     _RC2REG	set	3956
   303  0000                     _RCONbits	set	4048
   304  0000                     _RCSTA1bits	set	4011
   305  0000                     _RCSTA2bits	set	3953
   306  0000                     _SPBRG1	set	4015
   307  0000                     _SPBRG2	set	3957
   308  0000                     _SPBRGH1	set	4016
   309  0000                     _SPBRGH2	set	3958
   310  0000                     _T0CON	set	4053
   311  0000                     _T0CONbits	set	4053
   312  0000                     _T1CONbits	set	4045
   313  0000                     _T2CON	set	4026
   314  0000                     _T2CONbits	set	4026
   315  0000                     _TX1REG	set	4013
   316  0000                     _TX2REG	set	3955
   317  0000                     _TXSTA1bits	set	4012
   318  0000                     _TXSTA2bits	set	3954
   319                           
   320                           ; #config settings
   321  00106E  00                 	db	0	; dummy byte at the end
   322  0000                     
   323                           	psect	cinit
   324  00152C                     __pcinit:
   325                           	opt stack 0
   326  00152C                     start_initialization:
   327                           	opt stack 0
   328  00152C                     __initialization:
   329                           	opt stack 0
   330                           
   331                           ; Clear objects allocated to COMRAM (2 bytes)
   332  00152C  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   333  00152E  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   334                           
   335                           ; Initialize objects allocated to BANK0 (45 bytes)
   336                           ; load TBLPTR registers with __pidataBANK0
   337  001530  0E76               	movlw	low __pidataBANK0
   338  001532  6EF6               	movwf	tblptrl,c
   339  001534  0E15               	movlw	high __pidataBANK0
   340  001536  6EF7               	movwf	tblptrh,c
   341  001538  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   342  00153A  6EF8               	movwf	tblptru,c
   343  00153C  EE00  F060         	lfsr	0,__pdataBANK0
   344  001540  EE10 F02D          	lfsr	1,45
   345  001544                     copy_data0:
   346  001544  0009               	tblrd		*+
   347  001546  CFF5 FFEE          	movff	tablat,postinc0
   348  00154A  50E5               	movf	postdec1,w,c
   349  00154C  50E1               	movf	fsr1l,w,c
   350  00154E  E1FA               	bnz	copy_data0
   351                           
   352                           ; Initialize objects allocated to COMRAM (17 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354  001550  0E8E               	movlw	low __pidataCOMRAM
   355  001552  6EF6               	movwf	tblptrl,c
   356  001554  0E16               	movlw	high __pidataCOMRAM
   357  001556  6EF7               	movwf	tblptrh,c
   358  001558  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359  00155A  6EF8               	movwf	tblptru,c
   360  00155C  EE00  F02D         	lfsr	0,__pdataCOMRAM
   361  001560  EE10 F011          	lfsr	1,17
   362  001564                     copy_data1:
   363  001564  0009               	tblrd		*+
   364  001566  CFF5 FFEE          	movff	tablat,postinc0
   365  00156A  50E5               	movf	postdec1,w,c
   366  00156C  50E1               	movf	fsr1l,w,c
   367  00156E  E1FA               	bnz	copy_data1
   368  001570                     end_of_initialization:
   369                           	opt stack 0
   370  001570                     __end_of__initialization:
   371                           	opt stack 0
   372  001570  0100               	movlb	0
   373  001572  EF38  F008         	goto	_main	;jump to C main() function
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	bssCOMRAM
   383  00003E                     __pbssCOMRAM:
   384                           	opt stack 0
   385  00003E                     _delayCount:
   386                           	opt stack 0
   387  00003E                     	ds	2
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	dataCOMRAM
   397  00002D                     __pdataCOMRAM:
   398                           	opt stack 0
   399  00002D                     _Serial1:
   400                           	opt stack 0
   401  00002D                     	ds	12
   402  000039                     _OscFreq:
   403                           	opt stack 0
   404  000039                     	ds	4
   405  00003D                     _OscFreqIndex:
   406                           	opt stack 0
   407  00003D                     	ds	1
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	dataBANK0
   417  000060                     __pdataBANK0:
   418                           	opt stack 0
   419  000060                     _Oscillator:
   420                           	opt stack 0
   421  000060                     	ds	22
   422  000076                     _Serial2:
   423                           	opt stack 0
   424  000076                     	ds	12
   425  000082                     main@F8968:
   426                           	opt stack 0
   427  000082                     	ds	6
   428  000088                     main@F8966:
   429                           	opt stack 0
   430  000088                     	ds	5
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK0
   440  00008D                     __pcstackBANK0:
   441                           	opt stack 0
   442  00008D                     ___aldiv@counter:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x0
   446  00008D                     	ds	1
   447  00008E                     ___aldiv@sign:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1
   451  00008E                     	ds	1
   452  00008F                     ___aldiv@quotient:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x2
   456  00008F                     	ds	4
   457  000093                     ??_Open1:
   458  000093                     ??_Open2:
   459                           
   460                           ; 0 bytes @ 0x6
   461  000093                     	ds	8
   462  00009B                     Open1@freq:
   463                           	opt stack 0
   464  00009B                     Open2@freq:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0xE
   468  00009B                     	ds	4
   469  00009F                     Open1@BRGval:
   470                           	opt stack 0
   471  00009F                     Open2@temp:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475  00009F                     	ds	2
   476  0000A1                     ??_main:
   477                           
   478                           ; 0 bytes @ 0x14
   479  0000A1                     	ds	2
   480  0000A3                     main@StringData:
   481                           	opt stack 0
   482                           
   483                           ; 6 bytes @ 0x16
   484  0000A3                     	ds	6
   485  0000A9                     main@ArrayData:
   486                           	opt stack 0
   487                           
   488                           ; 5 bytes @ 0x1C
   489  0000A9                     	ds	5
   490  0000AE                     main@data:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x21
   494  0000AE                     	ds	1
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	cstackCOMRAM
   504  000001                     __pcstackCOMRAM:
   505                           	opt stack 0
   506  000001                     ??_LowPriority_InterruptHandler:
   507  000001                     
   508                           ; 1 bytes @ 0x0
   509  000001                     	ds	17
   510  000012                     ??_HighPriority_InterruptHandler:
   511                           
   512                           ; 0 bytes @ 0x11
   513  000012                     	ds	14
   514  000020                     ??_SetFreq_8MHZ:
   515  000020                     ?_GetFreq:
   516                           	opt stack 0
   517  000020                     ?___aldiv:
   518                           	opt stack 0
   519  000020                     SendByte1@Data:
   520                           	opt stack 0
   521  000020                     SendByte2@Data:
   522                           	opt stack 0
   523  000020                     SendArray1@ArrayData:
   524                           	opt stack 0
   525  000020                     SendArray2@ArrayData:
   526                           	opt stack 0
   527  000020                     SendString1@StringData:
   528                           	opt stack 0
   529  000020                     SendString2@StringData:
   530                           	opt stack 0
   531  000020                     ___aldiv@dividend:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x1F
   535  000020                     	ds	2
   536  000022                     SendArray1@length:
   537                           	opt stack 0
   538  000022                     SendArray2@length:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x21
   542  000022                     	ds	1
   543  000023                     
   544                           ; 0 bytes @ 0x22
   545  000023                     	ds	1
   546  000024                     ___aldiv@divisor:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x23
   550  000024                     	ds	4
   551  000028                     ??___aldiv:
   552                           
   553                           ; 0 bytes @ 0x27
   554  000028                     	ds	1
   555  000029                     Open1@BaudRate:
   556                           	opt stack 0
   557  000029                     Open2@BaudRate:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x28
   561  000029                     	ds	4
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 58 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  StringData      6   22[BANK0 ] unsigned char [6]
   580 ;;  ArrayData       5   28[BANK0 ] unsigned char [5]
   581 ;;  data            1   33[BANK0 ] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:       14 bytes
   596 ;; Hardware stack levels required when called:    4
   597 ;; This function calls:
   598 ;;		_Open1
   599 ;;		_Open2
   600 ;;		_SendArray1
   601 ;;		_SendArray2
   602 ;;		_SendByte1
   603 ;;		_SendByte2
   604 ;;		_SendString1
   605 ;;		_SendString2
   606 ;;		_SetFreq_8MHZ
   607 ;;		_SetTimer0_1Sec
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614  001070                     __ptext0:
   615                           	opt stack 0
   616  001070                     _main:
   617                           	opt stack 27
   618                           
   619                           ;main.c: 61: char data = 'a';
   620                           
   621                           ;incstack = 0
   622  001070  0100               	movlb	0	; () banked
   623  001072  6FA1               	movwf	??_main& (0+255),b
   624  001074  0E61               	movlw	97
   625  001076  0100               	movlb	0	; () banked
   626  001078  0100               	movlb	0	; () banked
   627  00107A  6FAE               	movwf	main@data& (0+255),b
   628  00107C  0100               	movlb	0	; () banked
   629  00107E  51A1               	movf	??_main& (0+255),w,b
   630                           
   631                           ; BSR set to: 0
   632                           ;main.c: 62: char ArrayData[5] ={1,2,3,4,5};
   633  001080  EE20  F088         	lfsr	2,main@F8966
   634  001084  EE10  F0A9         	lfsr	1,main@ArrayData
   635  001088  0E05               	movlw	5
   636  00108A                     u781:
   637  00108A  CFDE FFE6          	movff	postinc2,postinc1
   638  00108E  2EE8               	decfsz	wreg,f,c
   639  001090  D7FC               	goto	u781
   640                           
   641                           ; BSR set to: 0
   642                           ;main.c: 63: char StringData[] ="Hello";
   643  001092  EE20  F082         	lfsr	2,main@F8968
   644  001096  EE10  F0A3         	lfsr	1,main@StringData
   645  00109A  0E06               	movlw	6
   646  00109C                     u791:
   647  00109C  CFDE FFE6          	movff	postinc2,postinc1
   648  0010A0  2EE8               	decfsz	wreg,f,c
   649  0010A2  D7FC               	goto	u791
   650                           
   651                           ; BSR set to: 0
   652                           ;main.c: 66: Oscillator.SetFreq_8MHZ();
   653  0010A4  D801               	call	u808
   654  0010A6  D00C               	goto	u809
   655  0010A8                     u808:
   656  0010A8  0005               	push	
   657  0010AA  6EFA               	movwf	pclath,c
   658  0010AC  0100               	movlb	0	; () banked
   659  0010AE  0100               	movlb	0	; () banked
   660  0010B0  516C               	movf	(_Oscillator+12)& (0+255),w,b
   661  0010B2  6EFD               	movwf	tosl,c
   662  0010B4  0100               	movlb	0	; () banked
   663  0010B6  516D               	movf	(_Oscillator+13)& (0+255),w,b
   664  0010B8  6EFE               	movwf	tosh,c
   665  0010BA  6AFF               	clrf	tosu,c
   666  0010BC  50FA               	movf	pclath,w,c
   667  0010BE  0012               	return		;indir
   668  0010C0                     u809:
   669                           
   670                           ;main.c: 67: Timer0.SetPeriod_1Sec();
   671  0010C0  0E01               	movlw	low _Timer0
   672  0010C2  6EF6               	movwf	tblptrl,c
   673  0010C4  0E10               	movlw	high _Timer0
   674  0010C6  6EF7               	movwf	tblptrh,c
   675  0010C8  0E00               	movlw	low (_Timer0 shr (0+16))
   676  0010CA  6EF8               	movwf	tblptru,c
   677  0010CC  0009               	tblrd		*+
   678  0010CE  CFF5 F0A1          	movff	tablat,??_main
   679  0010D2  0009               	tblrd		*+
   680  0010D4  CFF5 F0A2          	movff	tablat,??_main+1
   681  0010D8  D801               	call	u818
   682  0010DA  D00A               	goto	u819
   683  0010DC                     u818:
   684  0010DC  0005               	push	
   685  0010DE  6EFA               	movwf	pclath,c
   686  0010E0  0100               	movlb	0	; () banked
   687  0010E2  51A1               	movf	??_main& (0+255),w,b
   688  0010E4  6EFD               	movwf	tosl,c
   689  0010E6  51A2               	movf	(??_main+1)& (0+255),w,b
   690  0010E8  6EFE               	movwf	tosh,c
   691  0010EA  6AFF               	clrf	tosu,c
   692  0010EC  50FA               	movf	pclath,w,c
   693  0010EE  0012               	return		;indir
   694  0010F0                     u819:
   695                           
   696                           ;main.c: 70: Serial2.Open(9600);
   697  0010F0  0E80               	movlw	128
   698  0010F2  6E29               	movwf	Open2@BaudRate,c
   699  0010F4  0E25               	movlw	37
   700  0010F6  6E2A               	movwf	Open2@BaudRate+1,c
   701  0010F8  0E00               	movlw	0
   702  0010FA  6E2B               	movwf	Open2@BaudRate+2,c
   703  0010FC  0E00               	movlw	0
   704  0010FE  6E2C               	movwf	Open2@BaudRate+3,c
   705  001100  D801               	call	u828
   706  001102  D00C               	goto	l1604
   707  001104                     u828:
   708  001104  0005               	push	
   709  001106  6EFA               	movwf	pclath,c
   710  001108  0100               	movlb	0	; () banked
   711  00110A  0100               	movlb	0	; () banked
   712  00110C  5176               	movf	_Serial2& (0+255),w,b
   713  00110E  6EFD               	movwf	tosl,c
   714  001110  0100               	movlb	0	; () banked
   715  001112  5177               	movf	(_Serial2+1)& (0+255),w,b
   716  001114  6EFE               	movwf	tosh,c
   717  001116  6AFF               	clrf	tosu,c
   718  001118  50FA               	movf	pclath,w,c
   719  00111A  0012               	return		;indir
   720  00111C                     l1604:
   721                           
   722                           ;main.c: 74: {
   723                           ;main.c: 76: if(INTCONbits.TMR0IF)
   724  00111C  A4F2               	btfss	intcon,2,c	;volatile
   725  00111E  D7FE               	goto	l1604
   726                           
   727                           ;main.c: 77: {
   728                           ;main.c: 78: INTCONbits.TMR0IF = 0;
   729  001120  94F2               	bcf	intcon,2,c	;volatile
   730                           
   731                           ;main.c: 80: Serial2.SendByte(data);
   732  001122  D801               	call	u848
   733  001124  D00F               	goto	u849
   734  001126                     u848:
   735  001126  0005               	push	
   736  001128  6EFA               	movwf	pclath,c
   737  00112A  0100               	movlb	0	; () banked
   738  00112C  0100               	movlb	0	; () banked
   739  00112E  5178               	movf	(_Serial2+2)& (0+255),w,b
   740  001130  6EFD               	movwf	tosl,c
   741  001132  0100               	movlb	0	; () banked
   742  001134  5179               	movf	(_Serial2+3)& (0+255),w,b
   743  001136  6EFE               	movwf	tosh,c
   744  001138  6AFF               	clrf	tosu,c
   745  00113A  50FA               	movf	pclath,w,c
   746  00113C  0100               	movlb	0	; () banked
   747  00113E  0100               	movlb	0	; () banked
   748  001140  51AE               	movf	main@data& (0+255),w,b
   749  001142  0012               	return		;indir
   750  001144                     u849:
   751                           
   752                           ;main.c: 81: Serial2.SendByte(100);
   753  001144  D801               	call	u858
   754  001146  D00D               	goto	u859
   755  001148                     u858:
   756  001148  0005               	push	
   757  00114A  6EFA               	movwf	pclath,c
   758  00114C  0100               	movlb	0	; () banked
   759  00114E  0100               	movlb	0	; () banked
   760  001150  5178               	movf	(_Serial2+2)& (0+255),w,b
   761  001152  6EFD               	movwf	tosl,c
   762  001154  0100               	movlb	0	; () banked
   763  001156  5179               	movf	(_Serial2+3)& (0+255),w,b
   764  001158  6EFE               	movwf	tosh,c
   765  00115A  6AFF               	clrf	tosu,c
   766  00115C  50FA               	movf	pclath,w,c
   767  00115E  0E64               	movlw	100
   768  001160  0012               	return		;indir
   769  001162                     u859:
   770                           
   771                           ;main.c: 82: Serial2.SendArray(ArrayData,5);
   772  001162  0100               	movlb	0	; () banked
   773  001164  0E00               	movlw	high main@ArrayData
   774  001166  6E21               	movwf	SendArray2@ArrayData+1,c
   775  001168  0100               	movlb	0	; () banked
   776  00116A  0EA9               	movlw	low main@ArrayData
   777  00116C  6E20               	movwf	SendArray2@ArrayData,c
   778  00116E  0100               	movlb	0	; () banked
   779  001170  6FA1               	movwf	??_main& (0+255),b
   780  001172  0E05               	movlw	5
   781  001174  6E22               	movwf	SendArray2@length,c
   782  001176  0100               	movlb	0	; () banked
   783  001178  51A1               	movf	??_main& (0+255),w,b
   784  00117A  D801               	call	u868
   785  00117C  D00C               	goto	u869
   786  00117E                     u868:
   787  00117E  0005               	push	
   788  001180  6EFA               	movwf	pclath,c
   789  001182  0100               	movlb	0	; () banked
   790  001184  0100               	movlb	0	; () banked
   791  001186  517A               	movf	(_Serial2+4)& (0+255),w,b
   792  001188  6EFD               	movwf	tosl,c
   793  00118A  0100               	movlb	0	; () banked
   794  00118C  517B               	movf	(_Serial2+5)& (0+255),w,b
   795  00118E  6EFE               	movwf	tosh,c
   796  001190  6AFF               	clrf	tosu,c
   797  001192  50FA               	movf	pclath,w,c
   798  001194  0012               	return		;indir
   799  001196                     u869:
   800                           
   801                           ;main.c: 83: Serial2.SendString(StringData);
   802  001196  0100               	movlb	0	; () banked
   803  001198  0E00               	movlw	high main@StringData
   804  00119A  6E21               	movwf	SendString2@StringData+1,c
   805  00119C  0100               	movlb	0	; () banked
   806  00119E  0EA3               	movlw	low main@StringData
   807  0011A0  6E20               	movwf	SendString2@StringData,c
   808  0011A2  D801               	call	u878
   809  0011A4  D7BB               	goto	l1604
   810  0011A6                     u878:
   811  0011A6  0005               	push	
   812  0011A8  6EFA               	movwf	pclath,c
   813  0011AA  0100               	movlb	0	; () banked
   814  0011AC  0100               	movlb	0	; () banked
   815  0011AE  517C               	movf	(_Serial2+6)& (0+255),w,b
   816  0011B0  6EFD               	movwf	tosl,c
   817  0011B2  0100               	movlb	0	; () banked
   818  0011B4  517D               	movf	(_Serial2+7)& (0+255),w,b
   819  0011B6  6EFE               	movwf	tosh,c
   820  0011B8  6AFF               	clrf	tosu,c
   821  0011BA  50FA               	movf	pclath,w,c
   822  0011BC  0012               	return		;indir
   823  0011BE                     __end_of_main:
   824                           	opt stack 0
   825                           tosu	equ	0xFFF
   826                           tosh	equ	0xFFE
   827                           tosl	equ	0xFFD
   828                           pclath	equ	0xFFA
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           intcon	equ	0xFF2
   834                           postinc0	equ	0xFEE
   835                           wreg	equ	0xFE8
   836                           postinc1	equ	0xFE6
   837                           postdec1	equ	0xFE5
   838                           fsr1l	equ	0xFE1
   839                           postinc2	equ	0xFDE
   840                           
   841 ;; *************** function _SetTimer0_1Sec *****************
   842 ;; Defined at:
   843 ;;		line 54 in file "EAB_Timer.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        0 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    2
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text1
   872  00165E                     __ptext1:
   873                           	opt stack 0
   874  00165E                     _SetTimer0_1Sec:
   875                           	opt stack 28
   876                           
   877                           ;incstack = 0
   878  00165E  503D               	movf	_OscFreqIndex,w,c
   879  001660  0D01               	mullw	1
   880  001662  0E29               	movlw	low _TIMER0_1Sec
   881  001664  24F3               	addwf	prodl,w,c
   882  001666  6EF6               	movwf	tblptrl,c
   883  001668  0E10               	movlw	high _TIMER0_1Sec
   884  00166A  20F4               	addwfc	prodh,w,c
   885  00166C  6EF7               	movwf	tblptrh,c
   886  00166E  6AF8               	clrf	tblptru,c
   887  001670  0E00               	movlw	low (__mediumconst shr (0+16))
   888  001672  22F8               	addwfc	tblptru,f,c
   889  001674  0008               	tblrd		*
   890  001676  CFF5 FFD5          	movff	tablat,4053	;volatile
   891  00167A  0012               	return	
   892  00167C                     __end_of_SetTimer0_1Sec:
   893                           	opt stack 0
   894                           tosu	equ	0xFFF
   895                           tosh	equ	0xFFE
   896                           tosl	equ	0xFFD
   897                           pclath	equ	0xFFA
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           prodh	equ	0xFF4
   903                           prodl	equ	0xFF3
   904                           intcon	equ	0xFF2
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           postinc1	equ	0xFE6
   908                           postdec1	equ	0xFE5
   909                           fsr1l	equ	0xFE1
   910                           postinc2	equ	0xFDE
   911                           
   912 ;; *************** function _SetFreq_8MHZ *****************
   913 ;; Defined at:
   914 ;;		line 85 in file "EAB_Oscillator.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      unsigned char 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text2
   943  00163C                     __ptext2:
   944                           	opt stack 0
   945  00163C                     _SetFreq_8MHZ:
   946                           	opt stack 28
   947                           
   948                           ;incstack = 0
   949  00163C  50D3               	movf	4051,w,c	;volatile
   950  00163E  0B8C               	andlw	140
   951  001640  0962               	iorlw	98
   952  001642  6ED3               	movwf	4051,c	;volatile
   953  001644  6E20               	movwf	??_SetFreq_8MHZ& (0+255),c
   954  001646  0E06               	movlw	6
   955  001648  6E3D               	movwf	_OscFreqIndex,c
   956  00164A  5020               	movf	??_SetFreq_8MHZ& (0+255),w,c
   957  00164C  0E00               	movlw	0
   958  00164E  6E39               	movwf	_OscFreq,c
   959  001650  0E12               	movlw	18
   960  001652  6E3A               	movwf	_OscFreq+1,c
   961  001654  0E7A               	movlw	122
   962  001656  6E3B               	movwf	_OscFreq+2,c
   963  001658  0E00               	movlw	0
   964  00165A  6E3C               	movwf	_OscFreq+3,c
   965  00165C  0012               	return	
   966  00165E                     __end_of_SetFreq_8MHZ:
   967                           	opt stack 0
   968                           tosu	equ	0xFFF
   969                           tosh	equ	0xFFE
   970                           tosl	equ	0xFFD
   971                           pclath	equ	0xFFA
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           prodh	equ	0xFF4
   977                           prodl	equ	0xFF3
   978                           intcon	equ	0xFF2
   979                           postinc0	equ	0xFEE
   980                           wreg	equ	0xFE8
   981                           postinc1	equ	0xFE6
   982                           postdec1	equ	0xFE5
   983                           fsr1l	equ	0xFE1
   984                           postinc2	equ	0xFDE
   985                           
   986 ;; *************** function _SendString1 *****************
   987 ;; Defined at:
   988 ;;		line 137 in file "EAB_Serial.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  StringData      2   31[COMRAM] PTR unsigned char 
   991 ;;		 -> main@StringData(6), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      unsigned char 
   996 ;; Registers used:
   997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        2 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text3
  1018  0015A4                     __ptext3:
  1019                           	opt stack 0
  1020  0015A4                     _SendString1:
  1021                           	opt stack 28
  1022                           
  1023                           ;incstack = 0
  1024  0015A4  D00A               	goto	l1530
  1025  0015A6                     l231:
  1026  0015A6  A2AC               	btfss	4012,1,c	;volatile
  1027  0015A8  D7FE               	goto	l231
  1028  0015AA  C020  FFD9         	movff	SendString1@StringData,fsr2l
  1029  0015AE  C021  FFDA         	movff	SendString1@StringData+1,fsr2h
  1030  0015B2  50DF               	movf	indf2,w,c
  1031  0015B4  6EAD               	movwf	4013,c	;volatile
  1032  0015B6  4A20               	infsnz	SendString1@StringData,f,c
  1033  0015B8  2A21               	incf	SendString1@StringData+1,f,c
  1034  0015BA                     l1530:
  1035  0015BA  C020  FFD9         	movff	SendString1@StringData,fsr2l
  1036  0015BE  C021  FFDA         	movff	SendString1@StringData+1,fsr2h
  1037  0015C2  50DF               	movf	indf2,w,c
  1038  0015C4  B4D8               	btfsc	status,2,c
  1039                           
  1040                           ;	Return value of _SendString1 is never used
  1041  0015C6  0012               	return	
  1042  0015C8  D7EE               	goto	l231
  1043  0015CA                     __end_of_SendString1:
  1044                           	opt stack 0
  1045                           tosu	equ	0xFFF
  1046                           tosh	equ	0xFFE
  1047                           tosl	equ	0xFFD
  1048                           pclath	equ	0xFFA
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           intcon	equ	0xFF2
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postinc1	equ	0xFE6
  1059                           postdec1	equ	0xFE5
  1060                           fsr1l	equ	0xFE1
  1061                           indf2	equ	0xFDF
  1062                           postinc2	equ	0xFDE
  1063                           fsr2h	equ	0xFDA
  1064                           fsr2l	equ	0xFD9
  1065                           status	equ	0xFD8
  1066                           
  1067 ;; *************** function _SendString2 *****************
  1068 ;; Defined at:
  1069 ;;		line 148 in file "EAB_Serial.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  StringData      2   31[COMRAM] PTR unsigned char 
  1072 ;;		 -> main@StringData(6), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      unsigned char 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    2
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text4
  1099  0015CA                     __ptext4:
  1100                           	opt stack 0
  1101  0015CA                     _SendString2:
  1102                           	opt stack 28
  1103                           
  1104                           ;incstack = 0
  1105  0015CA  D00A               	goto	l1538
  1106  0015CC                     l240:
  1107  0015CC  A272               	btfss	3954,1,c	;volatile
  1108  0015CE  D7FE               	goto	l240
  1109  0015D0  C020  FFD9         	movff	SendString2@StringData,fsr2l
  1110  0015D4  C021  FFDA         	movff	SendString2@StringData+1,fsr2h
  1111  0015D8  50DF               	movf	indf2,w,c
  1112  0015DA  6E73               	movwf	3955,c	;volatile
  1113  0015DC  4A20               	infsnz	SendString2@StringData,f,c
  1114  0015DE  2A21               	incf	SendString2@StringData+1,f,c
  1115  0015E0                     l1538:
  1116  0015E0  C020  FFD9         	movff	SendString2@StringData,fsr2l
  1117  0015E4  C021  FFDA         	movff	SendString2@StringData+1,fsr2h
  1118  0015E8  50DF               	movf	indf2,w,c
  1119  0015EA  B4D8               	btfsc	status,2,c
  1120                           
  1121                           ;	Return value of _SendString2 is never used
  1122  0015EC  0012               	return	
  1123  0015EE  D7EE               	goto	l240
  1124  0015F0                     __end_of_SendString2:
  1125                           	opt stack 0
  1126                           tosu	equ	0xFFF
  1127                           tosh	equ	0xFFE
  1128                           tosl	equ	0xFFD
  1129                           pclath	equ	0xFFA
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           prodh	equ	0xFF4
  1135                           prodl	equ	0xFF3
  1136                           intcon	equ	0xFF2
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postinc1	equ	0xFE6
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           indf2	equ	0xFDF
  1143                           postinc2	equ	0xFDE
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function _SendByte1 *****************
  1149 ;; Defined at:
  1150 ;;		line 87 in file "EAB_Serial.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  Data            1    wreg     unsigned char 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  Data            1   31[COMRAM] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      unsigned char 
  1157 ;; Registers used:
  1158 ;;		wreg
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text5
  1179  0016A0                     __ptext5:
  1180                           	opt stack 0
  1181  0016A0                     _SendByte1:
  1182                           	opt stack 28
  1183                           
  1184                           ;incstack = 0
  1185                           ;SendByte1@Data stored from wreg
  1186  0016A0  CFE8 F020          	movff	wreg,SendByte1@Data
  1187  0016A4                     l195:
  1188  0016A4  A2AC               	btfss	4012,1,c	;volatile
  1189  0016A6  D7FE               	goto	l195
  1190  0016A8  C020  FFAD         	movff	SendByte1@Data,4013	;volatile
  1191  0016AC  0012               	return	
  1192  0016AE                     __end_of_SendByte1:
  1193                           	opt stack 0
  1194                           tosu	equ	0xFFF
  1195                           tosh	equ	0xFFE
  1196                           tosl	equ	0xFFD
  1197                           pclath	equ	0xFFA
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodh	equ	0xFF4
  1203                           prodl	equ	0xFF3
  1204                           intcon	equ	0xFF2
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postinc1	equ	0xFE6
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           indf2	equ	0xFDF
  1211                           postinc2	equ	0xFDE
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _SendByte2 *****************
  1217 ;; Defined at:
  1218 ;;		line 94 in file "EAB_Serial.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  Data            1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  Data            1   31[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      unsigned char 
  1225 ;; Registers used:
  1226 ;;		wreg
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    2
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text6
  1247  0016AE                     __ptext6:
  1248                           	opt stack 0
  1249  0016AE                     _SendByte2:
  1250                           	opt stack 28
  1251                           
  1252                           ;incstack = 0
  1253                           ;SendByte2@Data stored from wreg
  1254  0016AE  CFE8 F020          	movff	wreg,SendByte2@Data
  1255  0016B2                     l201:
  1256  0016B2  A272               	btfss	3954,1,c	;volatile
  1257  0016B4  D7FE               	goto	l201
  1258  0016B6  C020  FF73         	movff	SendByte2@Data,3955	;volatile
  1259  0016BA  0012               	return	
  1260  0016BC                     __end_of_SendByte2:
  1261                           	opt stack 0
  1262                           tosu	equ	0xFFF
  1263                           tosh	equ	0xFFE
  1264                           tosl	equ	0xFFD
  1265                           pclath	equ	0xFFA
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           intcon	equ	0xFF2
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postinc1	equ	0xFE6
  1276                           postdec1	equ	0xFE5
  1277                           fsr1l	equ	0xFE1
  1278                           indf2	equ	0xFDF
  1279                           postinc2	equ	0xFDE
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _SendArray1 *****************
  1285 ;; Defined at:
  1286 ;;		line 101 in file "EAB_Serial.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  ArrayData       2   31[COMRAM] PTR unsigned char 
  1289 ;;		 -> main@ArrayData(5), 
  1290 ;;  length          1   33[COMRAM] unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        3 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    2
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text7
  1317  0015F0                     __ptext7:
  1318                           	opt stack 0
  1319  0015F0                     _SendArray1:
  1320                           	opt stack 28
  1321                           
  1322                           ;incstack = 0
  1323  0015F0  5022               	movf	SendArray1@length,w,c
  1324  0015F2  B4D8               	btfsc	status,2,c
  1325  0015F4  0012               	return	
  1326  0015F6  D00A               	goto	l1508
  1327  0015F8                     l210:
  1328  0015F8  A2AC               	btfss	4012,1,c	;volatile
  1329  0015FA  D7FE               	goto	l210
  1330  0015FC  C020  FFD9         	movff	SendArray1@ArrayData,fsr2l
  1331  001600  C021  FFDA         	movff	SendArray1@ArrayData+1,fsr2h
  1332  001604  50DF               	movf	indf2,w,c
  1333  001606  6EAD               	movwf	4013,c	;volatile
  1334  001608  4A20               	infsnz	SendArray1@ArrayData,f,c
  1335  00160A  2A21               	incf	SendArray1@ArrayData+1,f,c
  1336  00160C                     l1508:
  1337  00160C  0622               	decf	SendArray1@length,f,c
  1338  00160E  2822               	incf	SendArray1@length& (0+255),w,c
  1339  001610  B4D8               	btfsc	status,2,c
  1340                           
  1341                           ;	Return value of _SendArray1 is never used
  1342                           
  1343                           ;	Return value of _SendArray1 is never used
  1344  001612  0012               	return	
  1345  001614  D7F1               	goto	l210
  1346  001616                     __end_of_SendArray1:
  1347                           	opt stack 0
  1348                           tosu	equ	0xFFF
  1349                           tosh	equ	0xFFE
  1350                           tosl	equ	0xFFD
  1351                           pclath	equ	0xFFA
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           prodh	equ	0xFF4
  1357                           prodl	equ	0xFF3
  1358                           intcon	equ	0xFF2
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postinc1	equ	0xFE6
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           indf2	equ	0xFDF
  1365                           postinc2	equ	0xFDE
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _SendArray2 *****************
  1371 ;; Defined at:
  1372 ;;		line 119 in file "EAB_Serial.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  ArrayData       2   31[COMRAM] PTR unsigned char 
  1375 ;;		 -> main@ArrayData(5), 
  1376 ;;  length          1   33[COMRAM] unsigned char 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        3 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    2
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text8
  1403  001616                     __ptext8:
  1404                           	opt stack 0
  1405  001616                     _SendArray2:
  1406                           	opt stack 28
  1407                           
  1408                           ;incstack = 0
  1409  001616  5022               	movf	SendArray2@length,w,c
  1410  001618  B4D8               	btfsc	status,2,c
  1411  00161A  0012               	return	
  1412  00161C  D00A               	goto	l1520
  1413  00161E                     l221:
  1414  00161E  A272               	btfss	3954,1,c	;volatile
  1415  001620  D7FE               	goto	l221
  1416  001622  C020  FFD9         	movff	SendArray2@ArrayData,fsr2l
  1417  001626  C021  FFDA         	movff	SendArray2@ArrayData+1,fsr2h
  1418  00162A  50DF               	movf	indf2,w,c
  1419  00162C  6E73               	movwf	3955,c	;volatile
  1420  00162E  4A20               	infsnz	SendArray2@ArrayData,f,c
  1421  001630  2A21               	incf	SendArray2@ArrayData+1,f,c
  1422  001632                     l1520:
  1423  001632  0622               	decf	SendArray2@length,f,c
  1424  001634  2822               	incf	SendArray2@length& (0+255),w,c
  1425  001636  B4D8               	btfsc	status,2,c
  1426                           
  1427                           ;	Return value of _SendArray2 is never used
  1428                           
  1429                           ;	Return value of _SendArray2 is never used
  1430  001638  0012               	return	
  1431  00163A  D7F1               	goto	l221
  1432  00163C                     __end_of_SendArray2:
  1433                           	opt stack 0
  1434                           tosu	equ	0xFFF
  1435                           tosh	equ	0xFFE
  1436                           tosl	equ	0xFFD
  1437                           pclath	equ	0xFFA
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           prodh	equ	0xFF4
  1443                           prodl	equ	0xFF3
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postinc1	equ	0xFE6
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           indf2	equ	0xFDF
  1451                           postinc2	equ	0xFDE
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _Open1 *****************
  1457 ;; Defined at:
  1458 ;;		line 33 in file "EAB_Serial.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  BaudRate        4   40[COMRAM] long 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  freq            4   14[BANK0 ] long 
  1463 ;;  BRGval          2   18[BANK0 ] int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      unsigned char 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:       18 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    3
  1480 ;; This function calls:
  1481 ;;		_GetFreq
  1482 ;;		___aldiv
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489  00130A                     __ptext9:
  1490                           	opt stack 0
  1491  00130A                     _Open1:
  1492                           	opt stack 27
  1493                           
  1494                           ;incstack = 0
  1495  00130A  D801               	call	u888
  1496  00130C  D00C               	goto	u889
  1497  00130E                     u888:
  1498  00130E  0005               	push	
  1499  001310  6EFA               	movwf	pclath,c
  1500  001312  0100               	movlb	0	; () banked
  1501  001314  0100               	movlb	0	; () banked
  1502  001316  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1503  001318  6EFD               	movwf	tosl,c
  1504  00131A  0100               	movlb	0	; () banked
  1505  00131C  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1506  00131E  6EFE               	movwf	tosh,c
  1507  001320  6AFF               	clrf	tosu,c
  1508  001322  50FA               	movf	pclath,w,c
  1509  001324  0012               	return		;indir
  1510  001326                     u889:
  1511  001326  C020  F09B         	movff	?_GetFreq,Open1@freq
  1512  00132A  C021  F09C         	movff	?_GetFreq+1,Open1@freq+1
  1513  00132E  C022  F09D         	movff	?_GetFreq+2,Open1@freq+2
  1514  001332  C023  F09E         	movff	?_GetFreq+3,Open1@freq+3
  1515  001336  C09B  F020         	movff	Open1@freq,___aldiv@dividend
  1516  00133A  C09C  F021         	movff	Open1@freq+1,___aldiv@dividend+1
  1517  00133E  C09D  F022         	movff	Open1@freq+2,___aldiv@dividend+2
  1518  001342  C09E  F023         	movff	Open1@freq+3,___aldiv@dividend+3
  1519  001346  C029  F093         	movff	Open1@BaudRate,??_Open1
  1520  00134A  C02A  F094         	movff	Open1@BaudRate+1,??_Open1+1
  1521  00134E  C02B  F095         	movff	Open1@BaudRate+2,??_Open1+2
  1522  001352  C02C  F096         	movff	Open1@BaudRate+3,??_Open1+3
  1523  001356  0E02               	movlw	2
  1524  001358                     u895:
  1525  001358  90D8               	bcf	status,0,c
  1526  00135A  0100               	movlb	0	; () banked
  1527  00135C  3793               	rlcf	??_Open1& (0+255),f,b
  1528  00135E  3794               	rlcf	(??_Open1+1)& (0+255),f,b
  1529  001360  3795               	rlcf	(??_Open1+2)& (0+255),f,b
  1530  001362  3796               	rlcf	(??_Open1+3)& (0+255),f,b
  1531  001364  2EE8               	decfsz	wreg,f,c
  1532  001366  D7F8               	goto	u895
  1533  001368  C093  F024         	movff	??_Open1,___aldiv@divisor
  1534  00136C  C094  F025         	movff	??_Open1+1,___aldiv@divisor+1
  1535  001370  C095  F026         	movff	??_Open1+2,___aldiv@divisor+2
  1536  001374  C096  F027         	movff	??_Open1+3,___aldiv@divisor+3
  1537  001378  ECDF  F008         	call	___aldiv
  1538  00137C  C020  F097         	movff	?___aldiv,??_Open1+4
  1539  001380  C021  F098         	movff	?___aldiv+1,??_Open1+5
  1540  001384  C022  F099         	movff	?___aldiv+2,??_Open1+6
  1541  001388  C023  F09A         	movff	?___aldiv+3,??_Open1+7
  1542  00138C  0EFF               	movlw	255
  1543  00138E  0100               	movlb	0	; () banked
  1544  001390  2597               	addwf	(??_Open1+4)& (0+255),w,b
  1545  001392  0100               	movlb	0	; () banked
  1546  001394  0100               	movlb	0	; () banked
  1547  001396  6F9F               	movwf	Open1@BRGval& (0+255),b
  1548  001398  0EFF               	movlw	255
  1549  00139A  0100               	movlb	0	; () banked
  1550  00139C  2198               	addwfc	(??_Open1+5)& (0+255),w,b
  1551  00139E  0100               	movlb	0	; () banked
  1552  0013A0  6FA0               	movwf	(Open1@BRGval+1)& (0+255),b
  1553                           
  1554                           ; BSR set to: 0
  1555  0013A2  0100               	movlb	0	; () banked
  1556  0013A4  0100               	movlb	0	; () banked
  1557  0013A6  51A0               	movf	(Open1@BRGval+1)& (0+255),w,b
  1558  0013A8  0A80               	xorlw	128
  1559  0013AA  0F80               	addlw	-128
  1560  0013AC  0E01               	movlw	1
  1561  0013AE  B4D8               	btfsc	status,2,c
  1562  0013B0  5D9F               	subwf	Open1@BRGval& (0+255),w,b
  1563  0013B2  A0D8               	btfss	status,0,c
  1564  0013B4  0012               	return	
  1565                           
  1566                           ; BSR set to: 0
  1567  0013B6  86B8               	bsf	4024,3,c	;volatile
  1568  0013B8  84AC               	bsf	4012,2,c	;volatile
  1569  0013BA  98AC               	bcf	4012,4,c	;volatile
  1570                           
  1571                           ; BSR set to: 0
  1572  0013BC  0100               	movlb	0	; () banked
  1573  0013BE  C0A0  F093         	movff	Open1@BRGval+1,??_Open1
  1574  0013C2  C093  F094         	movff	??_Open1,??_Open1+1
  1575  0013C6  0100               	movlb	0	; () banked
  1576  0013C8  6B95               	clrf	(??_Open1+2)& (0+255),b
  1577  0013CA  0100               	movlb	0	; () banked
  1578  0013CC  5194               	movf	(??_Open1+1)& (0+255),w,b
  1579  0013CE  6EB0               	movwf	4016,c	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582  0013D0  C09F  FFAF         	movff	Open1@BRGval,4015	;volatile
  1583                           
  1584                           ; BSR set to: 0
  1585  0013D4  010F               	movlb	15	; () banked
  1586  0013D6  010F               	movlb	15	; () banked
  1587  0013D8  9D3A               	bcf	58,6,b	;volatile
  1588                           
  1589                           ; BSR set to: 15
  1590  0013DA  010F               	movlb	15	; () banked
  1591  0013DC  010F               	movlb	15	; () banked
  1592  0013DE  9F3A               	bcf	58,7,b	;volatile
  1593                           
  1594                           ; BSR set to: 15
  1595  0013E0  8C94               	bsf	3988,6,c	;volatile
  1596                           
  1597                           ; BSR set to: 15
  1598  0013E2  8E94               	bsf	3988,7,c	;volatile
  1599                           
  1600                           ; BSR set to: 15
  1601  0013E4  8AAC               	bsf	4012,5,c	;volatile
  1602                           
  1603                           ; BSR set to: 15
  1604  0013E6  88AB               	bsf	4011,4,c	;volatile
  1605                           
  1606                           ; BSR set to: 15
  1607  0013E8  8EAB               	bsf	4011,7,c	;volatile
  1608  0013EA  0012               	return	
  1609  0013EC                     __end_of_Open1:
  1610                           	opt stack 0
  1611                           tosu	equ	0xFFF
  1612                           tosh	equ	0xFFE
  1613                           tosl	equ	0xFFD
  1614                           pclath	equ	0xFFA
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodh	equ	0xFF4
  1620                           prodl	equ	0xFF3
  1621                           intcon	equ	0xFF2
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           postinc1	equ	0xFE6
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           indf2	equ	0xFDF
  1628                           postinc2	equ	0xFDE
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _Open2 *****************
  1634 ;; Defined at:
  1635 ;;		line 61 in file "EAB_Serial.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  BaudRate        4   40[COMRAM] long 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  freq            4   14[BANK0 ] long 
  1640 ;;  temp            2   18[BANK0 ] int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      unsigned char 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:       18 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		_GetFreq
  1659 ;;		___aldiv
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text10
  1666  0013EC                     __ptext10:
  1667                           	opt stack 0
  1668  0013EC                     _Open2:
  1669                           	opt stack 27
  1670                           
  1671                           ;incstack = 0
  1672  0013EC  D801               	call	u918
  1673  0013EE  D00C               	goto	u919
  1674  0013F0                     u918:
  1675  0013F0  0005               	push	
  1676  0013F2  6EFA               	movwf	pclath,c
  1677  0013F4  0100               	movlb	0	; () banked
  1678  0013F6  0100               	movlb	0	; () banked
  1679  0013F8  5174               	movf	(_Oscillator+20)& (0+255),w,b
  1680  0013FA  6EFD               	movwf	tosl,c
  1681  0013FC  0100               	movlb	0	; () banked
  1682  0013FE  5175               	movf	(_Oscillator+21)& (0+255),w,b
  1683  001400  6EFE               	movwf	tosh,c
  1684  001402  6AFF               	clrf	tosu,c
  1685  001404  50FA               	movf	pclath,w,c
  1686  001406  0012               	return		;indir
  1687  001408                     u919:
  1688  001408  C020  F09B         	movff	?_GetFreq,Open2@freq
  1689  00140C  C021  F09C         	movff	?_GetFreq+1,Open2@freq+1
  1690  001410  C022  F09D         	movff	?_GetFreq+2,Open2@freq+2
  1691  001414  C023  F09E         	movff	?_GetFreq+3,Open2@freq+3
  1692  001418  C09B  F020         	movff	Open2@freq,___aldiv@dividend
  1693  00141C  C09C  F021         	movff	Open2@freq+1,___aldiv@dividend+1
  1694  001420  C09D  F022         	movff	Open2@freq+2,___aldiv@dividend+2
  1695  001424  C09E  F023         	movff	Open2@freq+3,___aldiv@dividend+3
  1696  001428  C029  F093         	movff	Open2@BaudRate,??_Open2
  1697  00142C  C02A  F094         	movff	Open2@BaudRate+1,??_Open2+1
  1698  001430  C02B  F095         	movff	Open2@BaudRate+2,??_Open2+2
  1699  001434  C02C  F096         	movff	Open2@BaudRate+3,??_Open2+3
  1700  001438  0E02               	movlw	2
  1701  00143A                     u925:
  1702  00143A  90D8               	bcf	status,0,c
  1703  00143C  0100               	movlb	0	; () banked
  1704  00143E  3793               	rlcf	??_Open2& (0+255),f,b
  1705  001440  3794               	rlcf	(??_Open2+1)& (0+255),f,b
  1706  001442  3795               	rlcf	(??_Open2+2)& (0+255),f,b
  1707  001444  3796               	rlcf	(??_Open2+3)& (0+255),f,b
  1708  001446  2EE8               	decfsz	wreg,f,c
  1709  001448  D7F8               	goto	u925
  1710  00144A  C093  F024         	movff	??_Open2,___aldiv@divisor
  1711  00144E  C094  F025         	movff	??_Open2+1,___aldiv@divisor+1
  1712  001452  C095  F026         	movff	??_Open2+2,___aldiv@divisor+2
  1713  001456  C096  F027         	movff	??_Open2+3,___aldiv@divisor+3
  1714  00145A  ECDF  F008         	call	___aldiv	;wreg free
  1715  00145E  C020  F097         	movff	?___aldiv,??_Open2+4
  1716  001462  C021  F098         	movff	?___aldiv+1,??_Open2+5
  1717  001466  C022  F099         	movff	?___aldiv+2,??_Open2+6
  1718  00146A  C023  F09A         	movff	?___aldiv+3,??_Open2+7
  1719  00146E  0EFF               	movlw	255
  1720  001470  0100               	movlb	0	; () banked
  1721  001472  2597               	addwf	(??_Open2+4)& (0+255),w,b
  1722  001474  0100               	movlb	0	; () banked
  1723  001476  0100               	movlb	0	; () banked
  1724  001478  6F9F               	movwf	Open2@temp& (0+255),b
  1725  00147A  0EFF               	movlw	255
  1726  00147C  0100               	movlb	0	; () banked
  1727  00147E  2198               	addwfc	(??_Open2+5)& (0+255),w,b
  1728  001480  0100               	movlb	0	; () banked
  1729  001482  6FA0               	movwf	(Open2@temp+1)& (0+255),b
  1730                           
  1731                           ; BSR set to: 0
  1732  001484  0100               	movlb	0	; () banked
  1733  001486  0100               	movlb	0	; () banked
  1734  001488  51A0               	movf	(Open2@temp+1)& (0+255),w,b
  1735  00148A  0A80               	xorlw	128
  1736  00148C  0F80               	addlw	-128
  1737  00148E  0E01               	movlw	1
  1738  001490  B4D8               	btfsc	status,2,c
  1739  001492  5D9F               	subwf	Open2@temp& (0+255),w,b
  1740  001494  A0D8               	btfss	status,0,c
  1741  001496  0012               	return	
  1742                           
  1743                           ; BSR set to: 0
  1744  001498  8670               	bsf	3952,3,c	;volatile
  1745  00149A  8472               	bsf	3954,2,c	;volatile
  1746  00149C  9872               	bcf	3954,4,c	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749  00149E  0100               	movlb	0	; () banked
  1750  0014A0  C0A0  F093         	movff	Open2@temp+1,??_Open2
  1751  0014A4  C093  F094         	movff	??_Open2,??_Open2+1
  1752  0014A8  0100               	movlb	0	; () banked
  1753  0014AA  6B95               	clrf	(??_Open2+2)& (0+255),b
  1754  0014AC  0100               	movlb	0	; () banked
  1755  0014AE  5194               	movf	(??_Open2+1)& (0+255),w,b
  1756  0014B0  6E76               	movwf	3958,c	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759  0014B2  C09F  FF75         	movff	Open2@temp,3957	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762  0014B6  8C93               	bsf	3987,6,c	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765  0014B8  8E93               	bsf	3987,7,c	;volatile
  1766                           
  1767                           ; BSR set to: 0
  1768  0014BA  8A72               	bsf	3954,5,c	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771  0014BC  8871               	bsf	3953,4,c	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774  0014BE  8E71               	bsf	3953,7,c	;volatile
  1775  0014C0  0012               	return	
  1776  0014C2                     __end_of_Open2:
  1777                           	opt stack 0
  1778                           tosu	equ	0xFFF
  1779                           tosh	equ	0xFFE
  1780                           tosl	equ	0xFFD
  1781                           pclath	equ	0xFFA
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postinc1	equ	0xFE6
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function ___aldiv *****************
  1801 ;; Defined at:
  1802 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  dividend        4   31[COMRAM] long 
  1805 ;;  divisor         4   35[COMRAM] long 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  quotient        4    2[BANK0 ] long 
  1808 ;;  sign            1    1[BANK0 ] unsigned char 
  1809 ;;  counter         1    0[BANK0 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  4   31[COMRAM] long 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1819 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;Total ram usage:       15 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    2
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_Open1
  1830 ;;		_Open2
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text11
  1835  0011BE                     __ptext11:
  1836                           	opt stack 0
  1837  0011BE                     ___aldiv:
  1838                           	opt stack 27
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;incstack = 0
  1842  0011BE  6E28               	movwf	??___aldiv& (0+255),c
  1843  0011C0  0E00               	movlw	0
  1844  0011C2  0100               	movlb	0	; () banked
  1845  0011C4  0100               	movlb	0	; () banked
  1846  0011C6  6F8E               	movwf	___aldiv@sign& (0+255),b
  1847  0011C8  5028               	movf	??___aldiv& (0+255),w,c
  1848                           
  1849                           ; BSR set to: 0
  1850  0011CA  5027               	movf	___aldiv@divisor+3,w,c
  1851  0011CC  0A80               	xorlw	128
  1852  0011CE  0F80               	addlw	128
  1853  0011D0  E108               	bnz	u945
  1854  0011D2  0E00               	movlw	0
  1855  0011D4  5C26               	subwf	___aldiv@divisor+2,w,c
  1856  0011D6  E105               	bnz	u945
  1857  0011D8  0E00               	movlw	0
  1858  0011DA  5C25               	subwf	___aldiv@divisor+1,w,c
  1859  0011DC  E102               	bnz	u945
  1860  0011DE  0E00               	movlw	0
  1861  0011E0  5C24               	subwf	___aldiv@divisor,w,c
  1862  0011E2                     u945:
  1863  0011E2  B0D8               	btfsc	status,0,c
  1864  0011E4  D00E               	goto	l1682
  1865                           
  1866                           ; BSR set to: 0
  1867  0011E6  1E27               	comf	___aldiv@divisor+3,f,c
  1868  0011E8  1E26               	comf	___aldiv@divisor+2,f,c
  1869  0011EA  1E25               	comf	___aldiv@divisor+1,f,c
  1870  0011EC  6C24               	negf	___aldiv@divisor,c
  1871  0011EE  0E00               	movlw	0
  1872  0011F0  2225               	addwfc	___aldiv@divisor+1,f,c
  1873  0011F2  2226               	addwfc	___aldiv@divisor+2,f,c
  1874  0011F4  2227               	addwfc	___aldiv@divisor+3,f,c
  1875                           
  1876                           ; BSR set to: 0
  1877  0011F6  6E28               	movwf	??___aldiv& (0+255),c
  1878  0011F8  0E01               	movlw	1
  1879  0011FA  0100               	movlb	0	; () banked
  1880  0011FC  0100               	movlb	0	; () banked
  1881  0011FE  6F8E               	movwf	___aldiv@sign& (0+255),b
  1882  001200  5028               	movf	??___aldiv& (0+255),w,c
  1883  001202                     l1682:
  1884                           
  1885                           ; BSR set to: 0
  1886  001202  5023               	movf	___aldiv@dividend+3,w,c
  1887  001204  0A80               	xorlw	128
  1888  001206  0F80               	addlw	128
  1889  001208  E108               	bnz	u955
  1890  00120A  0E00               	movlw	0
  1891  00120C  5C22               	subwf	___aldiv@dividend+2,w,c
  1892  00120E  E105               	bnz	u955
  1893  001210  0E00               	movlw	0
  1894  001212  5C21               	subwf	___aldiv@dividend+1,w,c
  1895  001214  E102               	bnz	u955
  1896  001216  0E00               	movlw	0
  1897  001218  5C20               	subwf	___aldiv@dividend,w,c
  1898  00121A                     u955:
  1899  00121A  B0D8               	btfsc	status,0,c
  1900  00121C  D00C               	goto	l1688
  1901                           
  1902                           ; BSR set to: 0
  1903  00121E  1E23               	comf	___aldiv@dividend+3,f,c
  1904  001220  1E22               	comf	___aldiv@dividend+2,f,c
  1905  001222  1E21               	comf	___aldiv@dividend+1,f,c
  1906  001224  6C20               	negf	___aldiv@dividend,c
  1907  001226  0E00               	movlw	0
  1908  001228  2221               	addwfc	___aldiv@dividend+1,f,c
  1909  00122A  2222               	addwfc	___aldiv@dividend+2,f,c
  1910  00122C  2223               	addwfc	___aldiv@dividend+3,f,c
  1911                           
  1912                           ; BSR set to: 0
  1913  00122E  0E01               	movlw	1
  1914  001230  0100               	movlb	0	; () banked
  1915  001232  0100               	movlb	0	; () banked
  1916  001234  1B8E               	xorwf	___aldiv@sign& (0+255),f,b
  1917  001236                     l1688:
  1918                           
  1919                           ; BSR set to: 0
  1920  001236  0E00               	movlw	0
  1921  001238  0100               	movlb	0	; () banked
  1922  00123A  0100               	movlb	0	; () banked
  1923  00123C  6F8F               	movwf	___aldiv@quotient& (0+255),b
  1924  00123E  0E00               	movlw	0
  1925  001240  0100               	movlb	0	; () banked
  1926  001242  6F90               	movwf	(___aldiv@quotient+1)& (0+255),b
  1927  001244  0E00               	movlw	0
  1928  001246  0100               	movlb	0	; () banked
  1929  001248  6F91               	movwf	(___aldiv@quotient+2)& (0+255),b
  1930  00124A  0E00               	movlw	0
  1931  00124C  0100               	movlb	0	; () banked
  1932  00124E  6F92               	movwf	(___aldiv@quotient+3)& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935  001250  5027               	movf	___aldiv@divisor+3,w,c
  1936  001252  1024               	iorwf	___aldiv@divisor,w,c
  1937  001254  1025               	iorwf	___aldiv@divisor+1,w,c
  1938  001256  1026               	iorwf	___aldiv@divisor+2,w,c
  1939  001258  B4D8               	btfsc	status,2,c
  1940  00125A  D039               	goto	l1710
  1941                           
  1942                           ; BSR set to: 0
  1943  00125C  6E28               	movwf	??___aldiv& (0+255),c
  1944  00125E  0E01               	movlw	1
  1945  001260  0100               	movlb	0	; () banked
  1946  001262  0100               	movlb	0	; () banked
  1947  001264  6F8D               	movwf	___aldiv@counter& (0+255),b
  1948  001266  5028               	movf	??___aldiv& (0+255),w,c
  1949  001268  D008               	goto	l1696
  1950  00126A                     l1694:
  1951                           
  1952                           ; BSR set to: 0
  1953  00126A  90D8               	bcf	status,0,c
  1954  00126C  3624               	rlcf	___aldiv@divisor,f,c
  1955  00126E  3625               	rlcf	___aldiv@divisor+1,f,c
  1956  001270  3626               	rlcf	___aldiv@divisor+2,f,c
  1957  001272  3627               	rlcf	___aldiv@divisor+3,f,c
  1958  001274  0100               	movlb	0	; () banked
  1959  001276  0100               	movlb	0	; () banked
  1960  001278  2B8D               	incf	___aldiv@counter& (0+255),f,b
  1961  00127A                     l1696:
  1962                           
  1963                           ; BSR set to: 0
  1964  00127A  AE27               	btfss	___aldiv@divisor+3,7,c
  1965  00127C  D7F6               	goto	l1694
  1966  00127E                     l1698:
  1967                           
  1968                           ; BSR set to: 0
  1969  00127E  0100               	movlb	0	; () banked
  1970  001280  90D8               	bcf	status,0,c
  1971  001282  0100               	movlb	0	; () banked
  1972  001284  378F               	rlcf	___aldiv@quotient& (0+255),f,b
  1973  001286  0100               	movlb	0	; () banked
  1974  001288  3790               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1975  00128A  0100               	movlb	0	; () banked
  1976  00128C  3791               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1977  00128E  0100               	movlb	0	; () banked
  1978  001290  3792               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981  001292  5024               	movf	___aldiv@divisor,w,c
  1982  001294  5C20               	subwf	___aldiv@dividend,w,c
  1983  001296  5025               	movf	___aldiv@divisor+1,w,c
  1984  001298  5821               	subwfb	___aldiv@dividend+1,w,c
  1985  00129A  5026               	movf	___aldiv@divisor+2,w,c
  1986  00129C  5822               	subwfb	___aldiv@dividend+2,w,c
  1987  00129E  5027               	movf	___aldiv@divisor+3,w,c
  1988  0012A0  5823               	subwfb	___aldiv@dividend+3,w,c
  1989  0012A2  A0D8               	btfss	status,0,c
  1990  0012A4  D00B               	goto	l1706
  1991                           
  1992                           ; BSR set to: 0
  1993  0012A6  5024               	movf	___aldiv@divisor,w,c
  1994  0012A8  5E20               	subwf	___aldiv@dividend,f,c
  1995  0012AA  5025               	movf	___aldiv@divisor+1,w,c
  1996  0012AC  5A21               	subwfb	___aldiv@dividend+1,f,c
  1997  0012AE  5026               	movf	___aldiv@divisor+2,w,c
  1998  0012B0  5A22               	subwfb	___aldiv@dividend+2,f,c
  1999  0012B2  5027               	movf	___aldiv@divisor+3,w,c
  2000  0012B4  5A23               	subwfb	___aldiv@dividend+3,f,c
  2001                           
  2002                           ; BSR set to: 0
  2003  0012B6  0100               	movlb	0	; () banked
  2004  0012B8  0100               	movlb	0	; () banked
  2005  0012BA  818F               	bsf	___aldiv@quotient& (0+255),0,b
  2006  0012BC                     l1706:
  2007                           
  2008                           ; BSR set to: 0
  2009  0012BC  90D8               	bcf	status,0,c
  2010  0012BE  3227               	rrcf	___aldiv@divisor+3,f,c
  2011  0012C0  3226               	rrcf	___aldiv@divisor+2,f,c
  2012  0012C2  3225               	rrcf	___aldiv@divisor+1,f,c
  2013  0012C4  3224               	rrcf	___aldiv@divisor,f,c
  2014                           
  2015                           ; BSR set to: 0
  2016  0012C6  0100               	movlb	0	; () banked
  2017  0012C8  0100               	movlb	0	; () banked
  2018  0012CA  2F8D               	decfsz	___aldiv@counter& (0+255),f,b
  2019  0012CC  D7D8               	goto	l1698
  2020  0012CE                     l1710:
  2021                           
  2022                           ; BSR set to: 0
  2023  0012CE  0100               	movlb	0	; () banked
  2024  0012D0  0100               	movlb	0	; () banked
  2025  0012D2  518E               	movf	___aldiv@sign& (0+255),w,b
  2026  0012D4  B4D8               	btfsc	status,2,c
  2027  0012D6  D010               	goto	l1714
  2028                           
  2029                           ; BSR set to: 0
  2030  0012D8  0100               	movlb	0	; () banked
  2031  0012DA  0100               	movlb	0	; () banked
  2032  0012DC  1F92               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2033  0012DE  0100               	movlb	0	; () banked
  2034  0012E0  1F91               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2035  0012E2  0100               	movlb	0	; () banked
  2036  0012E4  1F90               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2037  0012E6  0100               	movlb	0	; () banked
  2038  0012E8  6D8F               	negf	___aldiv@quotient& (0+255),b
  2039  0012EA  0E00               	movlw	0
  2040  0012EC  0100               	movlb	0	; () banked
  2041  0012EE  2390               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2042  0012F0  0100               	movlb	0	; () banked
  2043  0012F2  2391               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2044  0012F4  0100               	movlb	0	; () banked
  2045  0012F6  2392               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2046  0012F8                     l1714:
  2047                           
  2048                           ; BSR set to: 0
  2049  0012F8  C08F  F020         	movff	___aldiv@quotient,?___aldiv
  2050  0012FC  C090  F021         	movff	___aldiv@quotient+1,?___aldiv+1
  2051  001300  C091  F022         	movff	___aldiv@quotient+2,?___aldiv+2
  2052  001304  C092  F023         	movff	___aldiv@quotient+3,?___aldiv+3
  2053  001308  0012               	return	
  2054  00130A                     __end_of___aldiv:
  2055                           	opt stack 0
  2056                           tosu	equ	0xFFF
  2057                           tosh	equ	0xFFE
  2058                           tosl	equ	0xFFD
  2059                           pclath	equ	0xFFA
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           postinc1	equ	0xFE6
  2070                           postdec1	equ	0xFE5
  2071                           fsr1l	equ	0xFE1
  2072                           indf2	equ	0xFDF
  2073                           postinc2	equ	0xFDE
  2074                           fsr2h	equ	0xFDA
  2075                           fsr2l	equ	0xFD9
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _GetFreq *****************
  2079 ;; Defined at:
  2080 ;;		line 128 in file "EAB_Oscillator.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  4   31[COMRAM] long 
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;Total ram usage:        4 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    2
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_Open1
  2105 ;;		_Open2
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text12
  2110  00167C                     __ptext12:
  2111                           	opt stack 0
  2112  00167C                     _GetFreq:
  2113                           	opt stack 27
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;incstack = 0
  2117  00167C  C039  F020         	movff	_OscFreq,?_GetFreq
  2118  001680  C03A  F021         	movff	_OscFreq+1,?_GetFreq+1
  2119  001684  C03B  F022         	movff	_OscFreq+2,?_GetFreq+2
  2120  001688  C03C  F023         	movff	_OscFreq+3,?_GetFreq+3
  2121  00168C  0012               	return	
  2122  00168E                     __end_of_GetFreq:
  2123                           	opt stack 0
  2124                           tosu	equ	0xFFF
  2125                           tosh	equ	0xFFE
  2126                           tosl	equ	0xFFD
  2127                           pclath	equ	0xFFA
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           postinc1	equ	0xFE6
  2138                           postdec1	equ	0xFE5
  2139                           fsr1l	equ	0xFE1
  2140                           indf2	equ	0xFDF
  2141                           postinc2	equ	0xFDE
  2142                           fsr2h	equ	0xFDA
  2143                           fsr2l	equ	0xFD9
  2144                           status	equ	0xFD8
  2145                           
  2146 ;; *************** function _LowPriority_InterruptHandler *****************
  2147 ;; Defined at:
  2148 ;;		line 21 in file "EAB_InterruptHandler.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;		None               void
  2155 ;; Registers used:
  2156 ;;		None
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:       17 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		Interrupt level 1
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	intcodelo
  2177  000018                     __pintcodelo:
  2178                           	opt stack 0
  2179  000018                     _LowPriority_InterruptHandler:
  2180                           	opt stack 27
  2181                           
  2182                           ;incstack = 0
  2183  000018  CFD8 F001          	movff	status,??_LowPriority_InterruptHandler
  2184  00001C  CFE8 F002          	movff	wreg,??_LowPriority_InterruptHandler+1
  2185  000020  CFE0 F003          	movff	bsr,??_LowPriority_InterruptHandler+2
  2186  000024  CFFA F004          	movff	pclath,??_LowPriority_InterruptHandler+3
  2187  000028  CFFB F005          	movff	pclatu,??_LowPriority_InterruptHandler+4
  2188  00002C  CFE9 F006          	movff	fsr0l,??_LowPriority_InterruptHandler+5
  2189  000030  CFEA F007          	movff	fsr0h,??_LowPriority_InterruptHandler+6
  2190  000034  CFE1 F008          	movff	fsr1l,??_LowPriority_InterruptHandler+7
  2191  000038  CFE2 F009          	movff	fsr1h,??_LowPriority_InterruptHandler+8
  2192  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriority_InterruptHandler+9
  2193  000040  CFDA F00B          	movff	fsr2h,??_LowPriority_InterruptHandler+10
  2194  000044  CFF3 F00C          	movff	prodl,??_LowPriority_InterruptHandler+11
  2195  000048  CFF4 F00D          	movff	prodh,??_LowPriority_InterruptHandler+12
  2196  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriority_InterruptHandler+13
  2197  000050  CFF7 F00F          	movff	tblptrh,??_LowPriority_InterruptHandler+14
  2198  000054  CFF8 F010          	movff	tblptru,??_LowPriority_InterruptHandler+15
  2199  000058  CFF5 F011          	movff	tablat,??_LowPriority_InterruptHandler+16
  2200  00005C  C011  FFF5         	movff	??_LowPriority_InterruptHandler+16,tablat
  2201  000060  C010  FFF8         	movff	??_LowPriority_InterruptHandler+15,tblptru
  2202  000064  C00F  FFF7         	movff	??_LowPriority_InterruptHandler+14,tblptrh
  2203  000068  C00E  FFF6         	movff	??_LowPriority_InterruptHandler+13,tblptrl
  2204  00006C  C00D  FFF4         	movff	??_LowPriority_InterruptHandler+12,prodh
  2205  000070  C00C  FFF3         	movff	??_LowPriority_InterruptHandler+11,prodl
  2206  000074  C00B  FFDA         	movff	??_LowPriority_InterruptHandler+10,fsr2h
  2207  000078  C00A  FFD9         	movff	??_LowPriority_InterruptHandler+9,fsr2l
  2208  00007C  C009  FFE2         	movff	??_LowPriority_InterruptHandler+8,fsr1h
  2209  000080  C008  FFE1         	movff	??_LowPriority_InterruptHandler+7,fsr1l
  2210  000084  C007  FFEA         	movff	??_LowPriority_InterruptHandler+6,fsr0h
  2211  000088  C006  FFE9         	movff	??_LowPriority_InterruptHandler+5,fsr0l
  2212  00008C  C005  FFFB         	movff	??_LowPriority_InterruptHandler+4,pclatu
  2213  000090  C004  FFFA         	movff	??_LowPriority_InterruptHandler+3,pclath
  2214  000094  C003  FFE0         	movff	??_LowPriority_InterruptHandler+2,bsr
  2215  000098  C002  FFE8         	movff	??_LowPriority_InterruptHandler+1,wreg
  2216  00009C  C001  FFD8         	movff	??_LowPriority_InterruptHandler,status
  2217  0000A0  0010               	retfie	
  2218  0000A2                     __end_of_LowPriority_InterruptHandler:
  2219                           	opt stack 0
  2220                           tosu	equ	0xFFF
  2221                           tosh	equ	0xFFE
  2222                           tosl	equ	0xFFD
  2223                           pclatu	equ	0xFFB
  2224                           pclath	equ	0xFFA
  2225                           tblptru	equ	0xFF8
  2226                           tblptrh	equ	0xFF7
  2227                           tblptrl	equ	0xFF6
  2228                           tablat	equ	0xFF5
  2229                           prodh	equ	0xFF4
  2230                           prodl	equ	0xFF3
  2231                           intcon	equ	0xFF2
  2232                           postinc0	equ	0xFEE
  2233                           fsr0h	equ	0xFEA
  2234                           fsr0l	equ	0xFE9
  2235                           wreg	equ	0xFE8
  2236                           postinc1	equ	0xFE6
  2237                           postdec1	equ	0xFE5
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           bsr	equ	0xFE0
  2241                           indf2	equ	0xFDF
  2242                           postinc2	equ	0xFDE
  2243                           fsr2h	equ	0xFDA
  2244                           fsr2l	equ	0xFD9
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _HighPriority_InterruptHandler *****************
  2248 ;; Defined at:
  2249 ;;		line 14 in file "EAB_InterruptHandler.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		None
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:       14 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		Interrupt level 2
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	intcode
  2277  000008                     __pintcode:
  2278                           	opt stack 0
  2279  000008                     _HighPriority_InterruptHandler:
  2280                           	opt stack 27
  2281                           
  2282                           ;incstack = 0
  2283  000008  CFFA F012          	movff	pclath,??_HighPriority_InterruptHandler
  2284  00000C  CFFB F013          	movff	pclatu,??_HighPriority_InterruptHandler+1
  2285  000010  EF61  F00A         	goto	int_func
  2286                           tosu	equ	0xFFF
  2287                           tosh	equ	0xFFE
  2288                           tosl	equ	0xFFD
  2289                           pclatu	equ	0xFFB
  2290                           pclath	equ	0xFFA
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           prodh	equ	0xFF4
  2296                           prodl	equ	0xFF3
  2297                           intcon	equ	0xFF2
  2298                           postinc0	equ	0xFEE
  2299                           fsr0h	equ	0xFEA
  2300                           fsr0l	equ	0xFE9
  2301                           wreg	equ	0xFE8
  2302                           postinc1	equ	0xFE6
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           bsr	equ	0xFE0
  2307                           indf2	equ	0xFDF
  2308                           postinc2	equ	0xFDE
  2309                           fsr2h	equ	0xFDA
  2310                           fsr2l	equ	0xFD9
  2311                           status	equ	0xFD8
  2312                           
  2313                           	psect	intcode_body
  2314  0014C2                     __pintcode_body:
  2315                           	opt stack 27
  2316  0014C2                     int_func:
  2317                           	opt stack 27
  2318  0014C2  CFE9 F014          	movff	fsr0l,??_HighPriority_InterruptHandler+2
  2319  0014C6  CFEA F015          	movff	fsr0h,??_HighPriority_InterruptHandler+3
  2320  0014CA  CFE1 F016          	movff	fsr1l,??_HighPriority_InterruptHandler+4
  2321  0014CE  CFE2 F017          	movff	fsr1h,??_HighPriority_InterruptHandler+5
  2322  0014D2  CFD9 F018          	movff	fsr2l,??_HighPriority_InterruptHandler+6
  2323  0014D6  CFDA F019          	movff	fsr2h,??_HighPriority_InterruptHandler+7
  2324  0014DA  CFF3 F01A          	movff	prodl,??_HighPriority_InterruptHandler+8
  2325  0014DE  CFF4 F01B          	movff	prodh,??_HighPriority_InterruptHandler+9
  2326  0014E2  CFF6 F01C          	movff	tblptrl,??_HighPriority_InterruptHandler+10
  2327  0014E6  CFF7 F01D          	movff	tblptrh,??_HighPriority_InterruptHandler+11
  2328  0014EA  CFF8 F01E          	movff	tblptru,??_HighPriority_InterruptHandler+12
  2329  0014EE  CFF5 F01F          	movff	tablat,??_HighPriority_InterruptHandler+13
  2330  0014F2  C01F  FFF5         	movff	??_HighPriority_InterruptHandler+13,tablat
  2331  0014F6  C01E  FFF8         	movff	??_HighPriority_InterruptHandler+12,tblptru
  2332  0014FA  C01D  FFF7         	movff	??_HighPriority_InterruptHandler+11,tblptrh
  2333  0014FE  C01C  FFF6         	movff	??_HighPriority_InterruptHandler+10,tblptrl
  2334  001502  C01B  FFF4         	movff	??_HighPriority_InterruptHandler+9,prodh
  2335  001506  C01A  FFF3         	movff	??_HighPriority_InterruptHandler+8,prodl
  2336  00150A  C019  FFDA         	movff	??_HighPriority_InterruptHandler+7,fsr2h
  2337  00150E  C018  FFD9         	movff	??_HighPriority_InterruptHandler+6,fsr2l
  2338  001512  C017  FFE2         	movff	??_HighPriority_InterruptHandler+5,fsr1h
  2339  001516  C016  FFE1         	movff	??_HighPriority_InterruptHandler+4,fsr1l
  2340  00151A  C015  FFEA         	movff	??_HighPriority_InterruptHandler+3,fsr0h
  2341  00151E  C014  FFE9         	movff	??_HighPriority_InterruptHandler+2,fsr0l
  2342  001522  C013  FFFB         	movff	??_HighPriority_InterruptHandler+1,pclatu
  2343  001526  C012  FFFA         	movff	??_HighPriority_InterruptHandler,pclath
  2344  00152A  0011               	retfie		f
  2345  00152C                     __end_of_HighPriority_InterruptHandler:
  2346                           	opt stack 0
  2347                           tosu	equ	0xFFF
  2348                           tosh	equ	0xFFE
  2349                           tosl	equ	0xFFD
  2350                           pclatu	equ	0xFFB
  2351                           pclath	equ	0xFFA
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           intcon	equ	0xFF2
  2359                           postinc0	equ	0xFEE
  2360                           fsr0h	equ	0xFEA
  2361                           fsr0l	equ	0xFE9
  2362                           wreg	equ	0xFE8
  2363                           postinc1	equ	0xFE6
  2364                           postdec1	equ	0xFE5
  2365                           fsr1h	equ	0xFE2
  2366                           fsr1l	equ	0xFE1
  2367                           bsr	equ	0xFE0
  2368                           indf2	equ	0xFDF
  2369                           postinc2	equ	0xFDE
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           tosu	equ	0xFFF
  2374                           tosh	equ	0xFFE
  2375                           tosl	equ	0xFFD
  2376                           pclatu	equ	0xFFB
  2377                           pclath	equ	0xFFA
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           prodh	equ	0xFF4
  2383                           prodl	equ	0xFF3
  2384                           intcon	equ	0xFF2
  2385                           postinc0	equ	0xFEE
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           postinc1	equ	0xFE6
  2390                           postdec1	equ	0xFE5
  2391                           fsr1h	equ	0xFE2
  2392                           fsr1l	equ	0xFE1
  2393                           bsr	equ	0xFE0
  2394                           indf2	equ	0xFDF
  2395                           postinc2	equ	0xFDE
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400                           	psect	rparam
  2401  0000                     tosu	equ	0xFFF
  2402                           tosh	equ	0xFFE
  2403                           tosl	equ	0xFFD
  2404                           pclatu	equ	0xFFB
  2405                           pclath	equ	0xFFA
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           prodh	equ	0xFF4
  2411                           prodl	equ	0xFF3
  2412                           intcon	equ	0xFF2
  2413                           postinc0	equ	0xFEE
  2414                           fsr0h	equ	0xFEA
  2415                           fsr0l	equ	0xFE9
  2416                           wreg	equ	0xFE8
  2417                           postinc1	equ	0xFE6
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           bsr	equ	0xFE0
  2422                           indf2	equ	0xFDF
  2423                           postinc2	equ	0xFDE
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    109
    Data        62
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      63
    BANK0           160     34      79
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S115$3$0	PTR unsigned char  size(2) Largest target is 6
		 -> main@StringData(BANK0[6]), 

    S115$2$0	PTR unsigned char  size(2) Largest target is 5
		 -> main@ArrayData(BANK0[5]), 

    S1694$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    Timer2.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer2Int(), 

    S1694$SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    Timer2.SetPeriod	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer2(), 

    S1694$SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    Timer2.SetPeriod_100microSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_100microSec(), 

    S1694$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    Timer2.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer2_1millSec(), 

    S1648$EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    Timer1.EnableInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> Timer1Int(), 

    S1648$SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    Timer1.SetPeriod	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer1(), 

    SendString2@StringData	PTR unsigned char  size(2) Largest target is 6
		 -> main@StringData(BANK0[6]), 

    SendString1@StringData	PTR unsigned char  size(2) Largest target is 6
		 -> main@StringData(BANK0[6]), 

    SendArray2@ArrayData	PTR unsigned char  size(2) Largest target is 5
		 -> main@ArrayData(BANK0[5]), 

    SendArray1@ArrayData	PTR unsigned char  size(2) Largest target is 5
		 -> main@ArrayData(BANK0[5]), 

    Serial1.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial1.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial1.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial1.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial1.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial1.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S115$EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    Serial2.EnableRxInterrupt	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> EnableRx2interrupt(), EnableRx1interrupt(), 

    S115$ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    Serial2.ReadByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> ReadByte2(), ReadByte1(), 

    S115$SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    Serial2.SendString	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendString2(), SendString1(), 

    S115$SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    Serial2.SendArray	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendArray2(), SendArray1(), 

    S115$SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    Serial2.SendByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SendByte2(), SendByte1(), 

    S115$Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    Serial2.Open	PTR FTN(long ,)unsigned char  size(2) Largest target is 1
		 -> Open2(), Open1(), 

    S78$EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    Timer0.EnableInterruptHIGH	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Timer0Int(), 

    S78$SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    Timer0.SetPeriod	PTR FTN(unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SetTimer0(), 

    S78$SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    Timer0.SetPeriod_1milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1millSec(), 

    S78$SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    Timer0.SetPeriod_16milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_16milliSec(), 

    S78$SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    Timer0.SetPeriod_130milliSec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_130milliSec(), 

    S78$SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    Timer0.SetPeriod_1Sec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetTimer0_1Sec(), 

    S37$GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    Oscillator.GetFreq	PTR FTN()long  size(2) Largest target is 4
		 -> GetFreq(), 

    S37$SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    Oscillator.SetFreq_64MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_64MHZ(), 

    S37$SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    Oscillator.SetFreq_32MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_32MHZ(), 

    S37$SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    Oscillator.SetFreq_16MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_16MHZ(), 

    S37$SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    Oscillator.SetFreq_8MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_8MHZ(), 

    S37$SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    Oscillator.SetFreq_4MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_4MHZ(), 

    S37$SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    Oscillator.SetFreq_2MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_2MHZ(), 

    S37$SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    Oscillator.SetFreq_1MHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_1MHZ(), 

    S37$SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    Oscillator.SetFreq_500KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_500KHZ(), 

    S37$SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    Oscillator.SetFreq_250KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_250KHZ(), 

    S37$SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 

    Oscillator.SetFreq_31KHZ	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SetFreq_31_25KHZ(), 


Critical Paths under _main in COMRAM

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _LowPriority_InterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Open1
    _main->_Open2
    _Open2->___aldiv
    _Open1->___aldiv

Critical Paths under _HighPriority_InterruptHandler in BANK0

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK1

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK2

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK3

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK4

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK5

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK6

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK7

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK8

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK9

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK10

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK11

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK12

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK13

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK14

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighPriority_InterruptHandler in BANK15

    None.

Critical Paths under _LowPriority_InterruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2399
                                             20 BANK0     14    14      0
                              _Open1 *
                              _Open2 *
                         _SendArray1 *
                         _SendArray2 *
                          _SendByte1 *
                          _SendByte2 *
                        _SendString1 *
                        _SendString2 *
                       _SetFreq_8MHZ *
                     _SetTimer0_1Sec *
 ---------------------------------------------------------------------------------
 (1) _SetTimer0_1Sec                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetFreq_8MHZ                                         1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendString2                                          2     0      2      88
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SendString1                                          2     0      2      45
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SendByte2                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendByte1                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendArray2                                           3     0      3     153
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _SendArray1                                           3     0      3      67
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Open2                                               18    14      4     968
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Open1                                               18    14      4     914
                                             40 COMRAM     4     0      4
                                              6 BANK0     14    14      0
                            _GetFreq *
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     753
                                             31 COMRAM     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _GetFreq                                              4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowPriority_InterruptHandler                        17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriority_InterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1 *
     _GetFreq *
     ___aldiv *
   _Open2 *
     _GetFreq *
     ___aldiv *
   _SendArray1 *
   _SendArray2 *
   _SendByte1 *
   _SendByte2 *
   _SendString1 *
   _SendString2 *
   _SetFreq_8MHZ *
   _SetTimer0_1Sec *

 _LowPriority_InterruptHandler (ROOT)

 _HighPriority_InterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      4F       5       49.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      12        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Aug 18 00:05:47 2014

                   SendArray1@ArrayData 0020                                      bsr 000FE0  
                                   l201 16B2                                     l210 15F8  
                                   l221 161E                                     l231 15A6  
                                   l240 15CC                                     l195 16A4  
                                   _PR2 000FBB                                     u808 10A8  
                                   u809 10C0                                     u818 10DC  
                                   u819 10F0                                     u828 1104  
                                   u925 143A                                     u781 108A  
                                   u918 13F0                                     u919 1408  
                                   u791 109C                                     u848 1126  
                                   u945 11E2                                     u849 1144  
                                   u858 1148                                     u955 121A  
                                   u859 1162                                     u868 117E  
                                   u869 1196                                     u878 11A6  
                                   u895 1358                                     u888 130E  
                                   u889 1326                     SendArray2@ArrayData 0020  
                                   tosl 000FFD                           main@ArrayData 00A9  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F72                         ?_SetTimer0_1Sec 0001  
                    _EnableRx1interrupt 000000                            __CFG_LVP$OFF 000000  
                        _TIMER0_130mSec 101F                                    l1520 1632  
                                  l1530 15BA                                    l1508 160C  
                                  l1604 111C                                    l1710 12CE  
                                  l1714 12F8                                    l1706 12BC  
                                  l1538 15E0                                    l1682 1202  
                                  l1694 126A                                    l1696 127A  
                                  l1688 1236                                    l1698 127E  
                    _EnableRx2interrupt 000000                          _TIMER2_100usec 1033  
                                  _main 1070                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    fsr1l 000FE1  
                                  indf2 000FDF                                    fsr2l 000FD9  
                 __end_of_TIMER0_16mSec 105A                                    pclat 000FFA  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00A2                         __end_of_GetFreq 168E  
                          _BAUDCON1bits 000FB8                            _BAUDCON2bits 000F70  
                       __end_of___aldiv 130A                                   ?_main 0001  
                                 _T0CON 000FD5                                   _T2CON 000FBA  
                        __CFG_DEBUG$OFF 000000                  __end_of_TIMER0_130mSec 1029  
                                 _Open1 130A                                   _Open2 13EC  
                __end_of_TIMER2_100usec 103D                                   pclath 000FFA  
                                 tablat 000FF5                                   status 000FD8  
                       __initialization 152C                            __end_of_main 11BE  
                           Open1@BRGval 009F                                  ??_main 00A1  
                         __activetblptr 000003                           ??_SendString1 0022  
                         ??_SendString2 0022                   _SetTimer0_130milliSec 000000  
            __end_of_TIMER2_PR2_100usec 1063                                  ?_Open1 0029  
                                ?_Open2 0029                              _SendArray1 15F0  
                            _SendArray2 1616                                  _RC1REG 000FAE  
                                _RC2REG 000F74                          __CFG_WDTEN$OFF 000000  
                                _OSCCON 000FD3                               ??_GetFreq 0024  
                                _SPBRG1 000FAF                                  _SPBRG2 000F75  
                                _TX1REG 000FAD                                  _TX2REG 000F73  
                            _Oscillator 0060                                  _Timer0 1001  
                                _Timer1 1069                                  _Timer2 1010  
                    __size_of_SendByte1 000E                      __size_of_SendByte2 000E  
                             ??___aldiv 0028                           ?_SetFreq_8MHZ 0001  
                  _SetTimer0_16milliSec 000000                            __pdataCOMRAM 002D  
                        main@StringData 00A3                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                     __end_of_SendString1 15CA  
                   __end_of_SendString2 15F0                              __accesstop 0060  
               __end_of__initialization 1570                   _SetTimer2_100microSec 000000  
                        __pcstackCOMRAM 0001                           __end_of_Open1 13EC  
                         __end_of_Open2 14C2                            __pidataBANK0 1576  
                        ??_SetFreq_8MHZ 0020                        ??_SetTimer0_1Sec 0020  
                               ??_Open1 0093                                 ??_Open2 0093  
                           ?_SendArray1 0020                             ?_SendArray2 0020  
                     __end_of_SendByte1 16AE                       __end_of_SendByte2 16BC  
                           _PinFunction 000F38                              _delayCount 003E  
                         _SetFreq_32MHZ 000000                           _SetFreq_16MHZ 000000  
 __end_of_HighPriority_InterruptHandler 152C  __size_of_HighPriority_InterruptHandler 1524  
         _HighPriority_InterruptHandler 0008                           _SetFreq_64MHZ 000000  
                           _SendString1 15A4                             _SendString2 15CA  
                               _SPBRGH1 000FB0                                 _SPBRGH2 000F76  
                      _TIMER2_PR2_1msec 1047                                 _GetFreq 167C  
                               _OscFreq 0039                                 __Hparam 0000  
                               __Lparam 0000                                 _Serial1 002D  
                               _Serial2 0076                                 ___aldiv 11BE  
                   __size_of_SendArray1 0026                     __size_of_SendArray2 0026  
                          __psmallconst 1000                                 __pcinit 152C  
                               __ramtop 1000                                 __ptext0 1070  
                               __ptext1 165E                                 __ptext2 163C  
                               __ptext3 15A4                                 __ptext4 15CA  
                               __ptext5 16A0                                 __ptext6 16AE  
                               __ptext7 15F0                                 __ptext8 1616  
                               __ptext9 130A                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                               _T2CONbits 000FBA  
                      ___aldiv@dividend 0020                          __pintcode_body 14C2  
                  end_of_initialization 1570                    __end_of_SetFreq_8MHZ 165E  
                               int_func 14C2                      _TIMER2_PR2_100usec 105A  
                      ___aldiv@quotient 008F                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE    __end_of_LowPriority_InterruptHandler 00A2  
 __size_of_LowPriority_InterruptHandler 008A            _LowPriority_InterruptHandler 0018  
                      __CFG_FOSC$INTIO7 000000          ?_HighPriority_InterruptHandler 0001  
                         _TIMER0_16mSec 1051                    __end_of_TIMER0_1mSec 1069  
                  __end_of_TIMER2_1msec 1047                          __end_of_Timer0 1010  
                        __end_of_Timer1 106E                          __end_of_Timer2 101F  
                             Open1@freq 009B                               Open2@freq 009B  
                             Open2@temp 009F                           __pidataCOMRAM 168E  
         ?_LowPriority_InterruptHandler 0001                     start_initialization 152C  
                             _ReadByte1 000000                               _ReadByte2 000000  
                          ??_SendArray1 0023                            ??_SendArray2 0023  
                             _SendByte1 16A0                               _SendByte2 16AE  
                          _PinDirection 000F92                               _SetTimer0 000000  
                             _SetTimer1 000000                               _SetTimer2 000000  
                             _Timer0Int 000000                               _Timer1Int 000000  
                             _Timer2Int 000000                           Open1@BaudRate 0029  
              __end_of_TIMER2_PR2_1msec 1051                      _SetTimer0_1millSec 000000  
                    __end_of_SendArray1 1616                      __end_of_SendArray2 163C  
                           __pdataBANK0 0060                           Open2@BaudRate 0029  
                          ?_SendString1 0020                            ?_SendString2 0020  
                    _SetTimer2_1millSec 000000                             __pbssCOMRAM 003E  
                 __size_of_SetFreq_8MHZ 0022                           __pcstackBANK0 008D  
                          _OscFreqIndex 003D                                ?_GetFreq 0020  
                            ?_SendByte1 0001                              ?_SendByte2 0001  
                             __pintcode 0008                                ?___aldiv 0020  
                          _SetFreq_1MHZ 000000                            _SetFreq_2MHZ 000000  
                          _SetFreq_4MHZ 000000                             __pintcodelo 0018  
                          _SetFreq_8MHZ 163C                             __smallconst 1000  
                        __size_of_Open1 00E2                          __size_of_Open2 00D6  
        ??_LowPriority_InterruptHandler 0001                          _SetFreq_250KHZ 000000  
                        _SetFreq_500KHZ 000000                 __size_of_SetTimer0_1Sec 001E  
                       ___aldiv@divisor 0024                         ___aldiv@counter 008D  
                              _IPR1bits 000F9F                                _PIE1bits 000F9D  
                              _IPR3bits 000FA5                                _PIE3bits 000FA3  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
                              _RCONbits 000FD0                               main@F8966 0088  
                             main@F8968 0082                     __end_of_TIMER0_1Sec 1033  
                          _TIMER0_1mSec 1063                        SendArray1@length 0022  
                      SendArray2@length 0022                            _TIMER2_1msec 103D  
                             copy_data0 1544                               copy_data1 1564  
                           ??_SendByte1 0020                             ??_SendByte2 0020  
                      __size_of_GetFreq 0012                                __Hrparam 0000  
       ??_HighPriority_InterruptHandler 0012                                __Lrparam 0000  
                 SendString1@StringData 0020                        __size_of___aldiv 014C  
                  __size_of_SendString1 0026                    __size_of_SendString2 0026  
                              __ptext10 13EC                                __ptext11 11BE  
                              __ptext12 167C                   SendString2@StringData 0020  
                           _OSCCON2bits 000FD2                        _SetFreq_31_25KHZ 000000  
                         __size_of_main 014E                                main@data 00AE  
                           _TIMER0_1Sec 1029                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                          _SetTimer0_1Sec 165E  
                              intlevel1 0000                                intlevel2 0000  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F71  
                            _OSCCONbits 000FD3                            ___aldiv@sign 008E  
                __end_of_SetTimer0_1Sec 167C                           SendByte1@Data 0020  
                         SendByte2@Data 0020  
